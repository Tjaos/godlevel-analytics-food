
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/*
 * This file exports the `items` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import type * as runtime from "@prisma/client/runtime/library"
import type * as $Enums from "../enums"
import type * as Prisma from "../internal/prismaNamespace"

/**
 * Model items
 * 
 */
export type itemsModel = runtime.Types.Result.DefaultSelection<Prisma.$itemsPayload>

export type AggregateItems = {
  _count: ItemsCountAggregateOutputType | null
  _avg: ItemsAvgAggregateOutputType | null
  _sum: ItemsSumAggregateOutputType | null
  _min: ItemsMinAggregateOutputType | null
  _max: ItemsMaxAggregateOutputType | null
}

export type ItemsAvgAggregateOutputType = {
  id: number | null
  brand_id: number | null
  sub_brand_id: number | null
  category_id: number | null
}

export type ItemsSumAggregateOutputType = {
  id: number | null
  brand_id: number | null
  sub_brand_id: number | null
  category_id: number | null
}

export type ItemsMinAggregateOutputType = {
  id: number | null
  brand_id: number | null
  sub_brand_id: number | null
  category_id: number | null
  name: string | null
  pos_uuid: string | null
  deleted_at: Date | null
}

export type ItemsMaxAggregateOutputType = {
  id: number | null
  brand_id: number | null
  sub_brand_id: number | null
  category_id: number | null
  name: string | null
  pos_uuid: string | null
  deleted_at: Date | null
}

export type ItemsCountAggregateOutputType = {
  id: number
  brand_id: number
  sub_brand_id: number
  category_id: number
  name: number
  pos_uuid: number
  deleted_at: number
  _all: number
}


export type ItemsAvgAggregateInputType = {
  id?: true
  brand_id?: true
  sub_brand_id?: true
  category_id?: true
}

export type ItemsSumAggregateInputType = {
  id?: true
  brand_id?: true
  sub_brand_id?: true
  category_id?: true
}

export type ItemsMinAggregateInputType = {
  id?: true
  brand_id?: true
  sub_brand_id?: true
  category_id?: true
  name?: true
  pos_uuid?: true
  deleted_at?: true
}

export type ItemsMaxAggregateInputType = {
  id?: true
  brand_id?: true
  sub_brand_id?: true
  category_id?: true
  name?: true
  pos_uuid?: true
  deleted_at?: true
}

export type ItemsCountAggregateInputType = {
  id?: true
  brand_id?: true
  sub_brand_id?: true
  category_id?: true
  name?: true
  pos_uuid?: true
  deleted_at?: true
  _all?: true
}

export type ItemsAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which items to aggregate.
   */
  where?: Prisma.itemsWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of items to fetch.
   */
  orderBy?: Prisma.itemsOrderByWithRelationInput | Prisma.itemsOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.itemsWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` items from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` items.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned items
  **/
  _count?: true | ItemsCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to average
  **/
  _avg?: ItemsAvgAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to sum
  **/
  _sum?: ItemsSumAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: ItemsMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: ItemsMaxAggregateInputType
}

export type GetItemsAggregateType<T extends ItemsAggregateArgs> = {
      [P in keyof T & keyof AggregateItems]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateItems[P]>
    : Prisma.GetScalarType<T[P], AggregateItems[P]>
}




export type itemsGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.itemsWhereInput
  orderBy?: Prisma.itemsOrderByWithAggregationInput | Prisma.itemsOrderByWithAggregationInput[]
  by: Prisma.ItemsScalarFieldEnum[] | Prisma.ItemsScalarFieldEnum
  having?: Prisma.itemsScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: ItemsCountAggregateInputType | true
  _avg?: ItemsAvgAggregateInputType
  _sum?: ItemsSumAggregateInputType
  _min?: ItemsMinAggregateInputType
  _max?: ItemsMaxAggregateInputType
}

export type ItemsGroupByOutputType = {
  id: number
  brand_id: number | null
  sub_brand_id: number | null
  category_id: number | null
  name: string
  pos_uuid: string | null
  deleted_at: Date | null
  _count: ItemsCountAggregateOutputType | null
  _avg: ItemsAvgAggregateOutputType | null
  _sum: ItemsSumAggregateOutputType | null
  _min: ItemsMinAggregateOutputType | null
  _max: ItemsMaxAggregateOutputType | null
}

type GetItemsGroupByPayload<T extends itemsGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<ItemsGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof ItemsGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], ItemsGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], ItemsGroupByOutputType[P]>
      }
    >
  >



export type itemsWhereInput = {
  AND?: Prisma.itemsWhereInput | Prisma.itemsWhereInput[]
  OR?: Prisma.itemsWhereInput[]
  NOT?: Prisma.itemsWhereInput | Prisma.itemsWhereInput[]
  id?: Prisma.IntFilter<"items"> | number
  brand_id?: Prisma.IntNullableFilter<"items"> | number | null
  sub_brand_id?: Prisma.IntNullableFilter<"items"> | number | null
  category_id?: Prisma.IntNullableFilter<"items"> | number | null
  name?: Prisma.StringFilter<"items"> | string
  pos_uuid?: Prisma.StringNullableFilter<"items"> | string | null
  deleted_at?: Prisma.DateTimeNullableFilter<"items"> | Date | string | null
  item_item_product_sales?: Prisma.Item_item_product_salesListRelationFilter
  item_product_sales?: Prisma.Item_product_salesListRelationFilter
  brands?: Prisma.XOR<Prisma.BrandsNullableScalarRelationFilter, Prisma.brandsWhereInput> | null
  categories?: Prisma.XOR<Prisma.CategoriesNullableScalarRelationFilter, Prisma.categoriesWhereInput> | null
  sub_brands?: Prisma.XOR<Prisma.Sub_brandsNullableScalarRelationFilter, Prisma.sub_brandsWhereInput> | null
}

export type itemsOrderByWithRelationInput = {
  id?: Prisma.SortOrder
  brand_id?: Prisma.SortOrderInput | Prisma.SortOrder
  sub_brand_id?: Prisma.SortOrderInput | Prisma.SortOrder
  category_id?: Prisma.SortOrderInput | Prisma.SortOrder
  name?: Prisma.SortOrder
  pos_uuid?: Prisma.SortOrderInput | Prisma.SortOrder
  deleted_at?: Prisma.SortOrderInput | Prisma.SortOrder
  item_item_product_sales?: Prisma.item_item_product_salesOrderByRelationAggregateInput
  item_product_sales?: Prisma.item_product_salesOrderByRelationAggregateInput
  brands?: Prisma.brandsOrderByWithRelationInput
  categories?: Prisma.categoriesOrderByWithRelationInput
  sub_brands?: Prisma.sub_brandsOrderByWithRelationInput
}

export type itemsWhereUniqueInput = Prisma.AtLeast<{
  id?: number
  AND?: Prisma.itemsWhereInput | Prisma.itemsWhereInput[]
  OR?: Prisma.itemsWhereInput[]
  NOT?: Prisma.itemsWhereInput | Prisma.itemsWhereInput[]
  brand_id?: Prisma.IntNullableFilter<"items"> | number | null
  sub_brand_id?: Prisma.IntNullableFilter<"items"> | number | null
  category_id?: Prisma.IntNullableFilter<"items"> | number | null
  name?: Prisma.StringFilter<"items"> | string
  pos_uuid?: Prisma.StringNullableFilter<"items"> | string | null
  deleted_at?: Prisma.DateTimeNullableFilter<"items"> | Date | string | null
  item_item_product_sales?: Prisma.Item_item_product_salesListRelationFilter
  item_product_sales?: Prisma.Item_product_salesListRelationFilter
  brands?: Prisma.XOR<Prisma.BrandsNullableScalarRelationFilter, Prisma.brandsWhereInput> | null
  categories?: Prisma.XOR<Prisma.CategoriesNullableScalarRelationFilter, Prisma.categoriesWhereInput> | null
  sub_brands?: Prisma.XOR<Prisma.Sub_brandsNullableScalarRelationFilter, Prisma.sub_brandsWhereInput> | null
}, "id">

export type itemsOrderByWithAggregationInput = {
  id?: Prisma.SortOrder
  brand_id?: Prisma.SortOrderInput | Prisma.SortOrder
  sub_brand_id?: Prisma.SortOrderInput | Prisma.SortOrder
  category_id?: Prisma.SortOrderInput | Prisma.SortOrder
  name?: Prisma.SortOrder
  pos_uuid?: Prisma.SortOrderInput | Prisma.SortOrder
  deleted_at?: Prisma.SortOrderInput | Prisma.SortOrder
  _count?: Prisma.itemsCountOrderByAggregateInput
  _avg?: Prisma.itemsAvgOrderByAggregateInput
  _max?: Prisma.itemsMaxOrderByAggregateInput
  _min?: Prisma.itemsMinOrderByAggregateInput
  _sum?: Prisma.itemsSumOrderByAggregateInput
}

export type itemsScalarWhereWithAggregatesInput = {
  AND?: Prisma.itemsScalarWhereWithAggregatesInput | Prisma.itemsScalarWhereWithAggregatesInput[]
  OR?: Prisma.itemsScalarWhereWithAggregatesInput[]
  NOT?: Prisma.itemsScalarWhereWithAggregatesInput | Prisma.itemsScalarWhereWithAggregatesInput[]
  id?: Prisma.IntWithAggregatesFilter<"items"> | number
  brand_id?: Prisma.IntNullableWithAggregatesFilter<"items"> | number | null
  sub_brand_id?: Prisma.IntNullableWithAggregatesFilter<"items"> | number | null
  category_id?: Prisma.IntNullableWithAggregatesFilter<"items"> | number | null
  name?: Prisma.StringWithAggregatesFilter<"items"> | string
  pos_uuid?: Prisma.StringNullableWithAggregatesFilter<"items"> | string | null
  deleted_at?: Prisma.DateTimeNullableWithAggregatesFilter<"items"> | Date | string | null
}

export type itemsCreateInput = {
  name: string
  pos_uuid?: string | null
  deleted_at?: Date | string | null
  item_item_product_sales?: Prisma.item_item_product_salesCreateNestedManyWithoutItemsInput
  item_product_sales?: Prisma.item_product_salesCreateNestedManyWithoutItemsInput
  brands?: Prisma.brandsCreateNestedOneWithoutItemsInput
  categories?: Prisma.categoriesCreateNestedOneWithoutItemsInput
  sub_brands?: Prisma.sub_brandsCreateNestedOneWithoutItemsInput
}

export type itemsUncheckedCreateInput = {
  id?: number
  brand_id?: number | null
  sub_brand_id?: number | null
  category_id?: number | null
  name: string
  pos_uuid?: string | null
  deleted_at?: Date | string | null
  item_item_product_sales?: Prisma.item_item_product_salesUncheckedCreateNestedManyWithoutItemsInput
  item_product_sales?: Prisma.item_product_salesUncheckedCreateNestedManyWithoutItemsInput
}

export type itemsUpdateInput = {
  name?: Prisma.StringFieldUpdateOperationsInput | string
  pos_uuid?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  deleted_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  item_item_product_sales?: Prisma.item_item_product_salesUpdateManyWithoutItemsNestedInput
  item_product_sales?: Prisma.item_product_salesUpdateManyWithoutItemsNestedInput
  brands?: Prisma.brandsUpdateOneWithoutItemsNestedInput
  categories?: Prisma.categoriesUpdateOneWithoutItemsNestedInput
  sub_brands?: Prisma.sub_brandsUpdateOneWithoutItemsNestedInput
}

export type itemsUncheckedUpdateInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  brand_id?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  sub_brand_id?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  category_id?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  name?: Prisma.StringFieldUpdateOperationsInput | string
  pos_uuid?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  deleted_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  item_item_product_sales?: Prisma.item_item_product_salesUncheckedUpdateManyWithoutItemsNestedInput
  item_product_sales?: Prisma.item_product_salesUncheckedUpdateManyWithoutItemsNestedInput
}

export type itemsCreateManyInput = {
  id?: number
  brand_id?: number | null
  sub_brand_id?: number | null
  category_id?: number | null
  name: string
  pos_uuid?: string | null
  deleted_at?: Date | string | null
}

export type itemsUpdateManyMutationInput = {
  name?: Prisma.StringFieldUpdateOperationsInput | string
  pos_uuid?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  deleted_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
}

export type itemsUncheckedUpdateManyInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  brand_id?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  sub_brand_id?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  category_id?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  name?: Prisma.StringFieldUpdateOperationsInput | string
  pos_uuid?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  deleted_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
}

export type ItemsListRelationFilter = {
  every?: Prisma.itemsWhereInput
  some?: Prisma.itemsWhereInput
  none?: Prisma.itemsWhereInput
}

export type itemsOrderByRelationAggregateInput = {
  _count?: Prisma.SortOrder
}

export type ItemsScalarRelationFilter = {
  is?: Prisma.itemsWhereInput
  isNot?: Prisma.itemsWhereInput
}

export type itemsCountOrderByAggregateInput = {
  id?: Prisma.SortOrder
  brand_id?: Prisma.SortOrder
  sub_brand_id?: Prisma.SortOrder
  category_id?: Prisma.SortOrder
  name?: Prisma.SortOrder
  pos_uuid?: Prisma.SortOrder
  deleted_at?: Prisma.SortOrder
}

export type itemsAvgOrderByAggregateInput = {
  id?: Prisma.SortOrder
  brand_id?: Prisma.SortOrder
  sub_brand_id?: Prisma.SortOrder
  category_id?: Prisma.SortOrder
}

export type itemsMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder
  brand_id?: Prisma.SortOrder
  sub_brand_id?: Prisma.SortOrder
  category_id?: Prisma.SortOrder
  name?: Prisma.SortOrder
  pos_uuid?: Prisma.SortOrder
  deleted_at?: Prisma.SortOrder
}

export type itemsMinOrderByAggregateInput = {
  id?: Prisma.SortOrder
  brand_id?: Prisma.SortOrder
  sub_brand_id?: Prisma.SortOrder
  category_id?: Prisma.SortOrder
  name?: Prisma.SortOrder
  pos_uuid?: Prisma.SortOrder
  deleted_at?: Prisma.SortOrder
}

export type itemsSumOrderByAggregateInput = {
  id?: Prisma.SortOrder
  brand_id?: Prisma.SortOrder
  sub_brand_id?: Prisma.SortOrder
  category_id?: Prisma.SortOrder
}

export type itemsCreateNestedManyWithoutBrandsInput = {
  create?: Prisma.XOR<Prisma.itemsCreateWithoutBrandsInput, Prisma.itemsUncheckedCreateWithoutBrandsInput> | Prisma.itemsCreateWithoutBrandsInput[] | Prisma.itemsUncheckedCreateWithoutBrandsInput[]
  connectOrCreate?: Prisma.itemsCreateOrConnectWithoutBrandsInput | Prisma.itemsCreateOrConnectWithoutBrandsInput[]
  createMany?: Prisma.itemsCreateManyBrandsInputEnvelope
  connect?: Prisma.itemsWhereUniqueInput | Prisma.itemsWhereUniqueInput[]
}

export type itemsUncheckedCreateNestedManyWithoutBrandsInput = {
  create?: Prisma.XOR<Prisma.itemsCreateWithoutBrandsInput, Prisma.itemsUncheckedCreateWithoutBrandsInput> | Prisma.itemsCreateWithoutBrandsInput[] | Prisma.itemsUncheckedCreateWithoutBrandsInput[]
  connectOrCreate?: Prisma.itemsCreateOrConnectWithoutBrandsInput | Prisma.itemsCreateOrConnectWithoutBrandsInput[]
  createMany?: Prisma.itemsCreateManyBrandsInputEnvelope
  connect?: Prisma.itemsWhereUniqueInput | Prisma.itemsWhereUniqueInput[]
}

export type itemsUpdateManyWithoutBrandsNestedInput = {
  create?: Prisma.XOR<Prisma.itemsCreateWithoutBrandsInput, Prisma.itemsUncheckedCreateWithoutBrandsInput> | Prisma.itemsCreateWithoutBrandsInput[] | Prisma.itemsUncheckedCreateWithoutBrandsInput[]
  connectOrCreate?: Prisma.itemsCreateOrConnectWithoutBrandsInput | Prisma.itemsCreateOrConnectWithoutBrandsInput[]
  upsert?: Prisma.itemsUpsertWithWhereUniqueWithoutBrandsInput | Prisma.itemsUpsertWithWhereUniqueWithoutBrandsInput[]
  createMany?: Prisma.itemsCreateManyBrandsInputEnvelope
  set?: Prisma.itemsWhereUniqueInput | Prisma.itemsWhereUniqueInput[]
  disconnect?: Prisma.itemsWhereUniqueInput | Prisma.itemsWhereUniqueInput[]
  delete?: Prisma.itemsWhereUniqueInput | Prisma.itemsWhereUniqueInput[]
  connect?: Prisma.itemsWhereUniqueInput | Prisma.itemsWhereUniqueInput[]
  update?: Prisma.itemsUpdateWithWhereUniqueWithoutBrandsInput | Prisma.itemsUpdateWithWhereUniqueWithoutBrandsInput[]
  updateMany?: Prisma.itemsUpdateManyWithWhereWithoutBrandsInput | Prisma.itemsUpdateManyWithWhereWithoutBrandsInput[]
  deleteMany?: Prisma.itemsScalarWhereInput | Prisma.itemsScalarWhereInput[]
}

export type itemsUncheckedUpdateManyWithoutBrandsNestedInput = {
  create?: Prisma.XOR<Prisma.itemsCreateWithoutBrandsInput, Prisma.itemsUncheckedCreateWithoutBrandsInput> | Prisma.itemsCreateWithoutBrandsInput[] | Prisma.itemsUncheckedCreateWithoutBrandsInput[]
  connectOrCreate?: Prisma.itemsCreateOrConnectWithoutBrandsInput | Prisma.itemsCreateOrConnectWithoutBrandsInput[]
  upsert?: Prisma.itemsUpsertWithWhereUniqueWithoutBrandsInput | Prisma.itemsUpsertWithWhereUniqueWithoutBrandsInput[]
  createMany?: Prisma.itemsCreateManyBrandsInputEnvelope
  set?: Prisma.itemsWhereUniqueInput | Prisma.itemsWhereUniqueInput[]
  disconnect?: Prisma.itemsWhereUniqueInput | Prisma.itemsWhereUniqueInput[]
  delete?: Prisma.itemsWhereUniqueInput | Prisma.itemsWhereUniqueInput[]
  connect?: Prisma.itemsWhereUniqueInput | Prisma.itemsWhereUniqueInput[]
  update?: Prisma.itemsUpdateWithWhereUniqueWithoutBrandsInput | Prisma.itemsUpdateWithWhereUniqueWithoutBrandsInput[]
  updateMany?: Prisma.itemsUpdateManyWithWhereWithoutBrandsInput | Prisma.itemsUpdateManyWithWhereWithoutBrandsInput[]
  deleteMany?: Prisma.itemsScalarWhereInput | Prisma.itemsScalarWhereInput[]
}

export type itemsCreateNestedManyWithoutCategoriesInput = {
  create?: Prisma.XOR<Prisma.itemsCreateWithoutCategoriesInput, Prisma.itemsUncheckedCreateWithoutCategoriesInput> | Prisma.itemsCreateWithoutCategoriesInput[] | Prisma.itemsUncheckedCreateWithoutCategoriesInput[]
  connectOrCreate?: Prisma.itemsCreateOrConnectWithoutCategoriesInput | Prisma.itemsCreateOrConnectWithoutCategoriesInput[]
  createMany?: Prisma.itemsCreateManyCategoriesInputEnvelope
  connect?: Prisma.itemsWhereUniqueInput | Prisma.itemsWhereUniqueInput[]
}

export type itemsUncheckedCreateNestedManyWithoutCategoriesInput = {
  create?: Prisma.XOR<Prisma.itemsCreateWithoutCategoriesInput, Prisma.itemsUncheckedCreateWithoutCategoriesInput> | Prisma.itemsCreateWithoutCategoriesInput[] | Prisma.itemsUncheckedCreateWithoutCategoriesInput[]
  connectOrCreate?: Prisma.itemsCreateOrConnectWithoutCategoriesInput | Prisma.itemsCreateOrConnectWithoutCategoriesInput[]
  createMany?: Prisma.itemsCreateManyCategoriesInputEnvelope
  connect?: Prisma.itemsWhereUniqueInput | Prisma.itemsWhereUniqueInput[]
}

export type itemsUpdateManyWithoutCategoriesNestedInput = {
  create?: Prisma.XOR<Prisma.itemsCreateWithoutCategoriesInput, Prisma.itemsUncheckedCreateWithoutCategoriesInput> | Prisma.itemsCreateWithoutCategoriesInput[] | Prisma.itemsUncheckedCreateWithoutCategoriesInput[]
  connectOrCreate?: Prisma.itemsCreateOrConnectWithoutCategoriesInput | Prisma.itemsCreateOrConnectWithoutCategoriesInput[]
  upsert?: Prisma.itemsUpsertWithWhereUniqueWithoutCategoriesInput | Prisma.itemsUpsertWithWhereUniqueWithoutCategoriesInput[]
  createMany?: Prisma.itemsCreateManyCategoriesInputEnvelope
  set?: Prisma.itemsWhereUniqueInput | Prisma.itemsWhereUniqueInput[]
  disconnect?: Prisma.itemsWhereUniqueInput | Prisma.itemsWhereUniqueInput[]
  delete?: Prisma.itemsWhereUniqueInput | Prisma.itemsWhereUniqueInput[]
  connect?: Prisma.itemsWhereUniqueInput | Prisma.itemsWhereUniqueInput[]
  update?: Prisma.itemsUpdateWithWhereUniqueWithoutCategoriesInput | Prisma.itemsUpdateWithWhereUniqueWithoutCategoriesInput[]
  updateMany?: Prisma.itemsUpdateManyWithWhereWithoutCategoriesInput | Prisma.itemsUpdateManyWithWhereWithoutCategoriesInput[]
  deleteMany?: Prisma.itemsScalarWhereInput | Prisma.itemsScalarWhereInput[]
}

export type itemsUncheckedUpdateManyWithoutCategoriesNestedInput = {
  create?: Prisma.XOR<Prisma.itemsCreateWithoutCategoriesInput, Prisma.itemsUncheckedCreateWithoutCategoriesInput> | Prisma.itemsCreateWithoutCategoriesInput[] | Prisma.itemsUncheckedCreateWithoutCategoriesInput[]
  connectOrCreate?: Prisma.itemsCreateOrConnectWithoutCategoriesInput | Prisma.itemsCreateOrConnectWithoutCategoriesInput[]
  upsert?: Prisma.itemsUpsertWithWhereUniqueWithoutCategoriesInput | Prisma.itemsUpsertWithWhereUniqueWithoutCategoriesInput[]
  createMany?: Prisma.itemsCreateManyCategoriesInputEnvelope
  set?: Prisma.itemsWhereUniqueInput | Prisma.itemsWhereUniqueInput[]
  disconnect?: Prisma.itemsWhereUniqueInput | Prisma.itemsWhereUniqueInput[]
  delete?: Prisma.itemsWhereUniqueInput | Prisma.itemsWhereUniqueInput[]
  connect?: Prisma.itemsWhereUniqueInput | Prisma.itemsWhereUniqueInput[]
  update?: Prisma.itemsUpdateWithWhereUniqueWithoutCategoriesInput | Prisma.itemsUpdateWithWhereUniqueWithoutCategoriesInput[]
  updateMany?: Prisma.itemsUpdateManyWithWhereWithoutCategoriesInput | Prisma.itemsUpdateManyWithWhereWithoutCategoriesInput[]
  deleteMany?: Prisma.itemsScalarWhereInput | Prisma.itemsScalarWhereInput[]
}

export type itemsCreateNestedOneWithoutItem_item_product_salesInput = {
  create?: Prisma.XOR<Prisma.itemsCreateWithoutItem_item_product_salesInput, Prisma.itemsUncheckedCreateWithoutItem_item_product_salesInput>
  connectOrCreate?: Prisma.itemsCreateOrConnectWithoutItem_item_product_salesInput
  connect?: Prisma.itemsWhereUniqueInput
}

export type itemsUpdateOneRequiredWithoutItem_item_product_salesNestedInput = {
  create?: Prisma.XOR<Prisma.itemsCreateWithoutItem_item_product_salesInput, Prisma.itemsUncheckedCreateWithoutItem_item_product_salesInput>
  connectOrCreate?: Prisma.itemsCreateOrConnectWithoutItem_item_product_salesInput
  upsert?: Prisma.itemsUpsertWithoutItem_item_product_salesInput
  connect?: Prisma.itemsWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.itemsUpdateToOneWithWhereWithoutItem_item_product_salesInput, Prisma.itemsUpdateWithoutItem_item_product_salesInput>, Prisma.itemsUncheckedUpdateWithoutItem_item_product_salesInput>
}

export type itemsCreateNestedOneWithoutItem_product_salesInput = {
  create?: Prisma.XOR<Prisma.itemsCreateWithoutItem_product_salesInput, Prisma.itemsUncheckedCreateWithoutItem_product_salesInput>
  connectOrCreate?: Prisma.itemsCreateOrConnectWithoutItem_product_salesInput
  connect?: Prisma.itemsWhereUniqueInput
}

export type itemsUpdateOneRequiredWithoutItem_product_salesNestedInput = {
  create?: Prisma.XOR<Prisma.itemsCreateWithoutItem_product_salesInput, Prisma.itemsUncheckedCreateWithoutItem_product_salesInput>
  connectOrCreate?: Prisma.itemsCreateOrConnectWithoutItem_product_salesInput
  upsert?: Prisma.itemsUpsertWithoutItem_product_salesInput
  connect?: Prisma.itemsWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.itemsUpdateToOneWithWhereWithoutItem_product_salesInput, Prisma.itemsUpdateWithoutItem_product_salesInput>, Prisma.itemsUncheckedUpdateWithoutItem_product_salesInput>
}

export type itemsCreateNestedManyWithoutSub_brandsInput = {
  create?: Prisma.XOR<Prisma.itemsCreateWithoutSub_brandsInput, Prisma.itemsUncheckedCreateWithoutSub_brandsInput> | Prisma.itemsCreateWithoutSub_brandsInput[] | Prisma.itemsUncheckedCreateWithoutSub_brandsInput[]
  connectOrCreate?: Prisma.itemsCreateOrConnectWithoutSub_brandsInput | Prisma.itemsCreateOrConnectWithoutSub_brandsInput[]
  createMany?: Prisma.itemsCreateManySub_brandsInputEnvelope
  connect?: Prisma.itemsWhereUniqueInput | Prisma.itemsWhereUniqueInput[]
}

export type itemsUncheckedCreateNestedManyWithoutSub_brandsInput = {
  create?: Prisma.XOR<Prisma.itemsCreateWithoutSub_brandsInput, Prisma.itemsUncheckedCreateWithoutSub_brandsInput> | Prisma.itemsCreateWithoutSub_brandsInput[] | Prisma.itemsUncheckedCreateWithoutSub_brandsInput[]
  connectOrCreate?: Prisma.itemsCreateOrConnectWithoutSub_brandsInput | Prisma.itemsCreateOrConnectWithoutSub_brandsInput[]
  createMany?: Prisma.itemsCreateManySub_brandsInputEnvelope
  connect?: Prisma.itemsWhereUniqueInput | Prisma.itemsWhereUniqueInput[]
}

export type itemsUpdateManyWithoutSub_brandsNestedInput = {
  create?: Prisma.XOR<Prisma.itemsCreateWithoutSub_brandsInput, Prisma.itemsUncheckedCreateWithoutSub_brandsInput> | Prisma.itemsCreateWithoutSub_brandsInput[] | Prisma.itemsUncheckedCreateWithoutSub_brandsInput[]
  connectOrCreate?: Prisma.itemsCreateOrConnectWithoutSub_brandsInput | Prisma.itemsCreateOrConnectWithoutSub_brandsInput[]
  upsert?: Prisma.itemsUpsertWithWhereUniqueWithoutSub_brandsInput | Prisma.itemsUpsertWithWhereUniqueWithoutSub_brandsInput[]
  createMany?: Prisma.itemsCreateManySub_brandsInputEnvelope
  set?: Prisma.itemsWhereUniqueInput | Prisma.itemsWhereUniqueInput[]
  disconnect?: Prisma.itemsWhereUniqueInput | Prisma.itemsWhereUniqueInput[]
  delete?: Prisma.itemsWhereUniqueInput | Prisma.itemsWhereUniqueInput[]
  connect?: Prisma.itemsWhereUniqueInput | Prisma.itemsWhereUniqueInput[]
  update?: Prisma.itemsUpdateWithWhereUniqueWithoutSub_brandsInput | Prisma.itemsUpdateWithWhereUniqueWithoutSub_brandsInput[]
  updateMany?: Prisma.itemsUpdateManyWithWhereWithoutSub_brandsInput | Prisma.itemsUpdateManyWithWhereWithoutSub_brandsInput[]
  deleteMany?: Prisma.itemsScalarWhereInput | Prisma.itemsScalarWhereInput[]
}

export type itemsUncheckedUpdateManyWithoutSub_brandsNestedInput = {
  create?: Prisma.XOR<Prisma.itemsCreateWithoutSub_brandsInput, Prisma.itemsUncheckedCreateWithoutSub_brandsInput> | Prisma.itemsCreateWithoutSub_brandsInput[] | Prisma.itemsUncheckedCreateWithoutSub_brandsInput[]
  connectOrCreate?: Prisma.itemsCreateOrConnectWithoutSub_brandsInput | Prisma.itemsCreateOrConnectWithoutSub_brandsInput[]
  upsert?: Prisma.itemsUpsertWithWhereUniqueWithoutSub_brandsInput | Prisma.itemsUpsertWithWhereUniqueWithoutSub_brandsInput[]
  createMany?: Prisma.itemsCreateManySub_brandsInputEnvelope
  set?: Prisma.itemsWhereUniqueInput | Prisma.itemsWhereUniqueInput[]
  disconnect?: Prisma.itemsWhereUniqueInput | Prisma.itemsWhereUniqueInput[]
  delete?: Prisma.itemsWhereUniqueInput | Prisma.itemsWhereUniqueInput[]
  connect?: Prisma.itemsWhereUniqueInput | Prisma.itemsWhereUniqueInput[]
  update?: Prisma.itemsUpdateWithWhereUniqueWithoutSub_brandsInput | Prisma.itemsUpdateWithWhereUniqueWithoutSub_brandsInput[]
  updateMany?: Prisma.itemsUpdateManyWithWhereWithoutSub_brandsInput | Prisma.itemsUpdateManyWithWhereWithoutSub_brandsInput[]
  deleteMany?: Prisma.itemsScalarWhereInput | Prisma.itemsScalarWhereInput[]
}

export type itemsCreateWithoutBrandsInput = {
  name: string
  pos_uuid?: string | null
  deleted_at?: Date | string | null
  item_item_product_sales?: Prisma.item_item_product_salesCreateNestedManyWithoutItemsInput
  item_product_sales?: Prisma.item_product_salesCreateNestedManyWithoutItemsInput
  categories?: Prisma.categoriesCreateNestedOneWithoutItemsInput
  sub_brands?: Prisma.sub_brandsCreateNestedOneWithoutItemsInput
}

export type itemsUncheckedCreateWithoutBrandsInput = {
  id?: number
  sub_brand_id?: number | null
  category_id?: number | null
  name: string
  pos_uuid?: string | null
  deleted_at?: Date | string | null
  item_item_product_sales?: Prisma.item_item_product_salesUncheckedCreateNestedManyWithoutItemsInput
  item_product_sales?: Prisma.item_product_salesUncheckedCreateNestedManyWithoutItemsInput
}

export type itemsCreateOrConnectWithoutBrandsInput = {
  where: Prisma.itemsWhereUniqueInput
  create: Prisma.XOR<Prisma.itemsCreateWithoutBrandsInput, Prisma.itemsUncheckedCreateWithoutBrandsInput>
}

export type itemsCreateManyBrandsInputEnvelope = {
  data: Prisma.itemsCreateManyBrandsInput | Prisma.itemsCreateManyBrandsInput[]
  skipDuplicates?: boolean
}

export type itemsUpsertWithWhereUniqueWithoutBrandsInput = {
  where: Prisma.itemsWhereUniqueInput
  update: Prisma.XOR<Prisma.itemsUpdateWithoutBrandsInput, Prisma.itemsUncheckedUpdateWithoutBrandsInput>
  create: Prisma.XOR<Prisma.itemsCreateWithoutBrandsInput, Prisma.itemsUncheckedCreateWithoutBrandsInput>
}

export type itemsUpdateWithWhereUniqueWithoutBrandsInput = {
  where: Prisma.itemsWhereUniqueInput
  data: Prisma.XOR<Prisma.itemsUpdateWithoutBrandsInput, Prisma.itemsUncheckedUpdateWithoutBrandsInput>
}

export type itemsUpdateManyWithWhereWithoutBrandsInput = {
  where: Prisma.itemsScalarWhereInput
  data: Prisma.XOR<Prisma.itemsUpdateManyMutationInput, Prisma.itemsUncheckedUpdateManyWithoutBrandsInput>
}

export type itemsScalarWhereInput = {
  AND?: Prisma.itemsScalarWhereInput | Prisma.itemsScalarWhereInput[]
  OR?: Prisma.itemsScalarWhereInput[]
  NOT?: Prisma.itemsScalarWhereInput | Prisma.itemsScalarWhereInput[]
  id?: Prisma.IntFilter<"items"> | number
  brand_id?: Prisma.IntNullableFilter<"items"> | number | null
  sub_brand_id?: Prisma.IntNullableFilter<"items"> | number | null
  category_id?: Prisma.IntNullableFilter<"items"> | number | null
  name?: Prisma.StringFilter<"items"> | string
  pos_uuid?: Prisma.StringNullableFilter<"items"> | string | null
  deleted_at?: Prisma.DateTimeNullableFilter<"items"> | Date | string | null
}

export type itemsCreateWithoutCategoriesInput = {
  name: string
  pos_uuid?: string | null
  deleted_at?: Date | string | null
  item_item_product_sales?: Prisma.item_item_product_salesCreateNestedManyWithoutItemsInput
  item_product_sales?: Prisma.item_product_salesCreateNestedManyWithoutItemsInput
  brands?: Prisma.brandsCreateNestedOneWithoutItemsInput
  sub_brands?: Prisma.sub_brandsCreateNestedOneWithoutItemsInput
}

export type itemsUncheckedCreateWithoutCategoriesInput = {
  id?: number
  brand_id?: number | null
  sub_brand_id?: number | null
  name: string
  pos_uuid?: string | null
  deleted_at?: Date | string | null
  item_item_product_sales?: Prisma.item_item_product_salesUncheckedCreateNestedManyWithoutItemsInput
  item_product_sales?: Prisma.item_product_salesUncheckedCreateNestedManyWithoutItemsInput
}

export type itemsCreateOrConnectWithoutCategoriesInput = {
  where: Prisma.itemsWhereUniqueInput
  create: Prisma.XOR<Prisma.itemsCreateWithoutCategoriesInput, Prisma.itemsUncheckedCreateWithoutCategoriesInput>
}

export type itemsCreateManyCategoriesInputEnvelope = {
  data: Prisma.itemsCreateManyCategoriesInput | Prisma.itemsCreateManyCategoriesInput[]
  skipDuplicates?: boolean
}

export type itemsUpsertWithWhereUniqueWithoutCategoriesInput = {
  where: Prisma.itemsWhereUniqueInput
  update: Prisma.XOR<Prisma.itemsUpdateWithoutCategoriesInput, Prisma.itemsUncheckedUpdateWithoutCategoriesInput>
  create: Prisma.XOR<Prisma.itemsCreateWithoutCategoriesInput, Prisma.itemsUncheckedCreateWithoutCategoriesInput>
}

export type itemsUpdateWithWhereUniqueWithoutCategoriesInput = {
  where: Prisma.itemsWhereUniqueInput
  data: Prisma.XOR<Prisma.itemsUpdateWithoutCategoriesInput, Prisma.itemsUncheckedUpdateWithoutCategoriesInput>
}

export type itemsUpdateManyWithWhereWithoutCategoriesInput = {
  where: Prisma.itemsScalarWhereInput
  data: Prisma.XOR<Prisma.itemsUpdateManyMutationInput, Prisma.itemsUncheckedUpdateManyWithoutCategoriesInput>
}

export type itemsCreateWithoutItem_item_product_salesInput = {
  name: string
  pos_uuid?: string | null
  deleted_at?: Date | string | null
  item_product_sales?: Prisma.item_product_salesCreateNestedManyWithoutItemsInput
  brands?: Prisma.brandsCreateNestedOneWithoutItemsInput
  categories?: Prisma.categoriesCreateNestedOneWithoutItemsInput
  sub_brands?: Prisma.sub_brandsCreateNestedOneWithoutItemsInput
}

export type itemsUncheckedCreateWithoutItem_item_product_salesInput = {
  id?: number
  brand_id?: number | null
  sub_brand_id?: number | null
  category_id?: number | null
  name: string
  pos_uuid?: string | null
  deleted_at?: Date | string | null
  item_product_sales?: Prisma.item_product_salesUncheckedCreateNestedManyWithoutItemsInput
}

export type itemsCreateOrConnectWithoutItem_item_product_salesInput = {
  where: Prisma.itemsWhereUniqueInput
  create: Prisma.XOR<Prisma.itemsCreateWithoutItem_item_product_salesInput, Prisma.itemsUncheckedCreateWithoutItem_item_product_salesInput>
}

export type itemsUpsertWithoutItem_item_product_salesInput = {
  update: Prisma.XOR<Prisma.itemsUpdateWithoutItem_item_product_salesInput, Prisma.itemsUncheckedUpdateWithoutItem_item_product_salesInput>
  create: Prisma.XOR<Prisma.itemsCreateWithoutItem_item_product_salesInput, Prisma.itemsUncheckedCreateWithoutItem_item_product_salesInput>
  where?: Prisma.itemsWhereInput
}

export type itemsUpdateToOneWithWhereWithoutItem_item_product_salesInput = {
  where?: Prisma.itemsWhereInput
  data: Prisma.XOR<Prisma.itemsUpdateWithoutItem_item_product_salesInput, Prisma.itemsUncheckedUpdateWithoutItem_item_product_salesInput>
}

export type itemsUpdateWithoutItem_item_product_salesInput = {
  name?: Prisma.StringFieldUpdateOperationsInput | string
  pos_uuid?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  deleted_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  item_product_sales?: Prisma.item_product_salesUpdateManyWithoutItemsNestedInput
  brands?: Prisma.brandsUpdateOneWithoutItemsNestedInput
  categories?: Prisma.categoriesUpdateOneWithoutItemsNestedInput
  sub_brands?: Prisma.sub_brandsUpdateOneWithoutItemsNestedInput
}

export type itemsUncheckedUpdateWithoutItem_item_product_salesInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  brand_id?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  sub_brand_id?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  category_id?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  name?: Prisma.StringFieldUpdateOperationsInput | string
  pos_uuid?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  deleted_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  item_product_sales?: Prisma.item_product_salesUncheckedUpdateManyWithoutItemsNestedInput
}

export type itemsCreateWithoutItem_product_salesInput = {
  name: string
  pos_uuid?: string | null
  deleted_at?: Date | string | null
  item_item_product_sales?: Prisma.item_item_product_salesCreateNestedManyWithoutItemsInput
  brands?: Prisma.brandsCreateNestedOneWithoutItemsInput
  categories?: Prisma.categoriesCreateNestedOneWithoutItemsInput
  sub_brands?: Prisma.sub_brandsCreateNestedOneWithoutItemsInput
}

export type itemsUncheckedCreateWithoutItem_product_salesInput = {
  id?: number
  brand_id?: number | null
  sub_brand_id?: number | null
  category_id?: number | null
  name: string
  pos_uuid?: string | null
  deleted_at?: Date | string | null
  item_item_product_sales?: Prisma.item_item_product_salesUncheckedCreateNestedManyWithoutItemsInput
}

export type itemsCreateOrConnectWithoutItem_product_salesInput = {
  where: Prisma.itemsWhereUniqueInput
  create: Prisma.XOR<Prisma.itemsCreateWithoutItem_product_salesInput, Prisma.itemsUncheckedCreateWithoutItem_product_salesInput>
}

export type itemsUpsertWithoutItem_product_salesInput = {
  update: Prisma.XOR<Prisma.itemsUpdateWithoutItem_product_salesInput, Prisma.itemsUncheckedUpdateWithoutItem_product_salesInput>
  create: Prisma.XOR<Prisma.itemsCreateWithoutItem_product_salesInput, Prisma.itemsUncheckedCreateWithoutItem_product_salesInput>
  where?: Prisma.itemsWhereInput
}

export type itemsUpdateToOneWithWhereWithoutItem_product_salesInput = {
  where?: Prisma.itemsWhereInput
  data: Prisma.XOR<Prisma.itemsUpdateWithoutItem_product_salesInput, Prisma.itemsUncheckedUpdateWithoutItem_product_salesInput>
}

export type itemsUpdateWithoutItem_product_salesInput = {
  name?: Prisma.StringFieldUpdateOperationsInput | string
  pos_uuid?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  deleted_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  item_item_product_sales?: Prisma.item_item_product_salesUpdateManyWithoutItemsNestedInput
  brands?: Prisma.brandsUpdateOneWithoutItemsNestedInput
  categories?: Prisma.categoriesUpdateOneWithoutItemsNestedInput
  sub_brands?: Prisma.sub_brandsUpdateOneWithoutItemsNestedInput
}

export type itemsUncheckedUpdateWithoutItem_product_salesInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  brand_id?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  sub_brand_id?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  category_id?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  name?: Prisma.StringFieldUpdateOperationsInput | string
  pos_uuid?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  deleted_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  item_item_product_sales?: Prisma.item_item_product_salesUncheckedUpdateManyWithoutItemsNestedInput
}

export type itemsCreateWithoutSub_brandsInput = {
  name: string
  pos_uuid?: string | null
  deleted_at?: Date | string | null
  item_item_product_sales?: Prisma.item_item_product_salesCreateNestedManyWithoutItemsInput
  item_product_sales?: Prisma.item_product_salesCreateNestedManyWithoutItemsInput
  brands?: Prisma.brandsCreateNestedOneWithoutItemsInput
  categories?: Prisma.categoriesCreateNestedOneWithoutItemsInput
}

export type itemsUncheckedCreateWithoutSub_brandsInput = {
  id?: number
  brand_id?: number | null
  category_id?: number | null
  name: string
  pos_uuid?: string | null
  deleted_at?: Date | string | null
  item_item_product_sales?: Prisma.item_item_product_salesUncheckedCreateNestedManyWithoutItemsInput
  item_product_sales?: Prisma.item_product_salesUncheckedCreateNestedManyWithoutItemsInput
}

export type itemsCreateOrConnectWithoutSub_brandsInput = {
  where: Prisma.itemsWhereUniqueInput
  create: Prisma.XOR<Prisma.itemsCreateWithoutSub_brandsInput, Prisma.itemsUncheckedCreateWithoutSub_brandsInput>
}

export type itemsCreateManySub_brandsInputEnvelope = {
  data: Prisma.itemsCreateManySub_brandsInput | Prisma.itemsCreateManySub_brandsInput[]
  skipDuplicates?: boolean
}

export type itemsUpsertWithWhereUniqueWithoutSub_brandsInput = {
  where: Prisma.itemsWhereUniqueInput
  update: Prisma.XOR<Prisma.itemsUpdateWithoutSub_brandsInput, Prisma.itemsUncheckedUpdateWithoutSub_brandsInput>
  create: Prisma.XOR<Prisma.itemsCreateWithoutSub_brandsInput, Prisma.itemsUncheckedCreateWithoutSub_brandsInput>
}

export type itemsUpdateWithWhereUniqueWithoutSub_brandsInput = {
  where: Prisma.itemsWhereUniqueInput
  data: Prisma.XOR<Prisma.itemsUpdateWithoutSub_brandsInput, Prisma.itemsUncheckedUpdateWithoutSub_brandsInput>
}

export type itemsUpdateManyWithWhereWithoutSub_brandsInput = {
  where: Prisma.itemsScalarWhereInput
  data: Prisma.XOR<Prisma.itemsUpdateManyMutationInput, Prisma.itemsUncheckedUpdateManyWithoutSub_brandsInput>
}

export type itemsCreateManyBrandsInput = {
  id?: number
  sub_brand_id?: number | null
  category_id?: number | null
  name: string
  pos_uuid?: string | null
  deleted_at?: Date | string | null
}

export type itemsUpdateWithoutBrandsInput = {
  name?: Prisma.StringFieldUpdateOperationsInput | string
  pos_uuid?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  deleted_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  item_item_product_sales?: Prisma.item_item_product_salesUpdateManyWithoutItemsNestedInput
  item_product_sales?: Prisma.item_product_salesUpdateManyWithoutItemsNestedInput
  categories?: Prisma.categoriesUpdateOneWithoutItemsNestedInput
  sub_brands?: Prisma.sub_brandsUpdateOneWithoutItemsNestedInput
}

export type itemsUncheckedUpdateWithoutBrandsInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  sub_brand_id?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  category_id?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  name?: Prisma.StringFieldUpdateOperationsInput | string
  pos_uuid?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  deleted_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  item_item_product_sales?: Prisma.item_item_product_salesUncheckedUpdateManyWithoutItemsNestedInput
  item_product_sales?: Prisma.item_product_salesUncheckedUpdateManyWithoutItemsNestedInput
}

export type itemsUncheckedUpdateManyWithoutBrandsInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  sub_brand_id?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  category_id?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  name?: Prisma.StringFieldUpdateOperationsInput | string
  pos_uuid?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  deleted_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
}

export type itemsCreateManyCategoriesInput = {
  id?: number
  brand_id?: number | null
  sub_brand_id?: number | null
  name: string
  pos_uuid?: string | null
  deleted_at?: Date | string | null
}

export type itemsUpdateWithoutCategoriesInput = {
  name?: Prisma.StringFieldUpdateOperationsInput | string
  pos_uuid?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  deleted_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  item_item_product_sales?: Prisma.item_item_product_salesUpdateManyWithoutItemsNestedInput
  item_product_sales?: Prisma.item_product_salesUpdateManyWithoutItemsNestedInput
  brands?: Prisma.brandsUpdateOneWithoutItemsNestedInput
  sub_brands?: Prisma.sub_brandsUpdateOneWithoutItemsNestedInput
}

export type itemsUncheckedUpdateWithoutCategoriesInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  brand_id?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  sub_brand_id?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  name?: Prisma.StringFieldUpdateOperationsInput | string
  pos_uuid?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  deleted_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  item_item_product_sales?: Prisma.item_item_product_salesUncheckedUpdateManyWithoutItemsNestedInput
  item_product_sales?: Prisma.item_product_salesUncheckedUpdateManyWithoutItemsNestedInput
}

export type itemsUncheckedUpdateManyWithoutCategoriesInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  brand_id?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  sub_brand_id?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  name?: Prisma.StringFieldUpdateOperationsInput | string
  pos_uuid?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  deleted_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
}

export type itemsCreateManySub_brandsInput = {
  id?: number
  brand_id?: number | null
  category_id?: number | null
  name: string
  pos_uuid?: string | null
  deleted_at?: Date | string | null
}

export type itemsUpdateWithoutSub_brandsInput = {
  name?: Prisma.StringFieldUpdateOperationsInput | string
  pos_uuid?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  deleted_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  item_item_product_sales?: Prisma.item_item_product_salesUpdateManyWithoutItemsNestedInput
  item_product_sales?: Prisma.item_product_salesUpdateManyWithoutItemsNestedInput
  brands?: Prisma.brandsUpdateOneWithoutItemsNestedInput
  categories?: Prisma.categoriesUpdateOneWithoutItemsNestedInput
}

export type itemsUncheckedUpdateWithoutSub_brandsInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  brand_id?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  category_id?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  name?: Prisma.StringFieldUpdateOperationsInput | string
  pos_uuid?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  deleted_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  item_item_product_sales?: Prisma.item_item_product_salesUncheckedUpdateManyWithoutItemsNestedInput
  item_product_sales?: Prisma.item_product_salesUncheckedUpdateManyWithoutItemsNestedInput
}

export type itemsUncheckedUpdateManyWithoutSub_brandsInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  brand_id?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  category_id?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  name?: Prisma.StringFieldUpdateOperationsInput | string
  pos_uuid?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  deleted_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
}


/**
 * Count Type ItemsCountOutputType
 */

export type ItemsCountOutputType = {
  item_item_product_sales: number
  item_product_sales: number
}

export type ItemsCountOutputTypeSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  item_item_product_sales?: boolean | ItemsCountOutputTypeCountItem_item_product_salesArgs
  item_product_sales?: boolean | ItemsCountOutputTypeCountItem_product_salesArgs
}

/**
 * ItemsCountOutputType without action
 */
export type ItemsCountOutputTypeDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ItemsCountOutputType
   */
  select?: Prisma.ItemsCountOutputTypeSelect<ExtArgs> | null
}

/**
 * ItemsCountOutputType without action
 */
export type ItemsCountOutputTypeCountItem_item_product_salesArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.item_item_product_salesWhereInput
}

/**
 * ItemsCountOutputType without action
 */
export type ItemsCountOutputTypeCountItem_product_salesArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.item_product_salesWhereInput
}


export type itemsSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  brand_id?: boolean
  sub_brand_id?: boolean
  category_id?: boolean
  name?: boolean
  pos_uuid?: boolean
  deleted_at?: boolean
  item_item_product_sales?: boolean | Prisma.items$item_item_product_salesArgs<ExtArgs>
  item_product_sales?: boolean | Prisma.items$item_product_salesArgs<ExtArgs>
  brands?: boolean | Prisma.items$brandsArgs<ExtArgs>
  categories?: boolean | Prisma.items$categoriesArgs<ExtArgs>
  sub_brands?: boolean | Prisma.items$sub_brandsArgs<ExtArgs>
  _count?: boolean | Prisma.ItemsCountOutputTypeDefaultArgs<ExtArgs>
}, ExtArgs["result"]["items"]>

export type itemsSelectCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  brand_id?: boolean
  sub_brand_id?: boolean
  category_id?: boolean
  name?: boolean
  pos_uuid?: boolean
  deleted_at?: boolean
  brands?: boolean | Prisma.items$brandsArgs<ExtArgs>
  categories?: boolean | Prisma.items$categoriesArgs<ExtArgs>
  sub_brands?: boolean | Prisma.items$sub_brandsArgs<ExtArgs>
}, ExtArgs["result"]["items"]>

export type itemsSelectUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  brand_id?: boolean
  sub_brand_id?: boolean
  category_id?: boolean
  name?: boolean
  pos_uuid?: boolean
  deleted_at?: boolean
  brands?: boolean | Prisma.items$brandsArgs<ExtArgs>
  categories?: boolean | Prisma.items$categoriesArgs<ExtArgs>
  sub_brands?: boolean | Prisma.items$sub_brandsArgs<ExtArgs>
}, ExtArgs["result"]["items"]>

export type itemsSelectScalar = {
  id?: boolean
  brand_id?: boolean
  sub_brand_id?: boolean
  category_id?: boolean
  name?: boolean
  pos_uuid?: boolean
  deleted_at?: boolean
}

export type itemsOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"id" | "brand_id" | "sub_brand_id" | "category_id" | "name" | "pos_uuid" | "deleted_at", ExtArgs["result"]["items"]>
export type itemsInclude<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  item_item_product_sales?: boolean | Prisma.items$item_item_product_salesArgs<ExtArgs>
  item_product_sales?: boolean | Prisma.items$item_product_salesArgs<ExtArgs>
  brands?: boolean | Prisma.items$brandsArgs<ExtArgs>
  categories?: boolean | Prisma.items$categoriesArgs<ExtArgs>
  sub_brands?: boolean | Prisma.items$sub_brandsArgs<ExtArgs>
  _count?: boolean | Prisma.ItemsCountOutputTypeDefaultArgs<ExtArgs>
}
export type itemsIncludeCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  brands?: boolean | Prisma.items$brandsArgs<ExtArgs>
  categories?: boolean | Prisma.items$categoriesArgs<ExtArgs>
  sub_brands?: boolean | Prisma.items$sub_brandsArgs<ExtArgs>
}
export type itemsIncludeUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  brands?: boolean | Prisma.items$brandsArgs<ExtArgs>
  categories?: boolean | Prisma.items$categoriesArgs<ExtArgs>
  sub_brands?: boolean | Prisma.items$sub_brandsArgs<ExtArgs>
}

export type $itemsPayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "items"
  objects: {
    item_item_product_sales: Prisma.$item_item_product_salesPayload<ExtArgs>[]
    item_product_sales: Prisma.$item_product_salesPayload<ExtArgs>[]
    brands: Prisma.$brandsPayload<ExtArgs> | null
    categories: Prisma.$categoriesPayload<ExtArgs> | null
    sub_brands: Prisma.$sub_brandsPayload<ExtArgs> | null
  }
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    id: number
    brand_id: number | null
    sub_brand_id: number | null
    category_id: number | null
    name: string
    pos_uuid: string | null
    deleted_at: Date | null
  }, ExtArgs["result"]["items"]>
  composites: {}
}

export type itemsGetPayload<S extends boolean | null | undefined | itemsDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$itemsPayload, S>

export type itemsCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<itemsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
    select?: ItemsCountAggregateInputType | true
  }

export interface itemsDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['items'], meta: { name: 'items' } }
  /**
   * Find zero or one Items that matches the filter.
   * @param {itemsFindUniqueArgs} args - Arguments to find a Items
   * @example
   * // Get one Items
   * const items = await prisma.items.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends itemsFindUniqueArgs>(args: Prisma.SelectSubset<T, itemsFindUniqueArgs<ExtArgs>>): Prisma.Prisma__itemsClient<runtime.Types.Result.GetResult<Prisma.$itemsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one Items that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {itemsFindUniqueOrThrowArgs} args - Arguments to find a Items
   * @example
   * // Get one Items
   * const items = await prisma.items.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends itemsFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, itemsFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__itemsClient<runtime.Types.Result.GetResult<Prisma.$itemsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Items that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {itemsFindFirstArgs} args - Arguments to find a Items
   * @example
   * // Get one Items
   * const items = await prisma.items.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends itemsFindFirstArgs>(args?: Prisma.SelectSubset<T, itemsFindFirstArgs<ExtArgs>>): Prisma.Prisma__itemsClient<runtime.Types.Result.GetResult<Prisma.$itemsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Items that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {itemsFindFirstOrThrowArgs} args - Arguments to find a Items
   * @example
   * // Get one Items
   * const items = await prisma.items.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends itemsFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, itemsFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__itemsClient<runtime.Types.Result.GetResult<Prisma.$itemsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more Items that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {itemsFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Items
   * const items = await prisma.items.findMany()
   * 
   * // Get first 10 Items
   * const items = await prisma.items.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const itemsWithIdOnly = await prisma.items.findMany({ select: { id: true } })
   * 
   */
  findMany<T extends itemsFindManyArgs>(args?: Prisma.SelectSubset<T, itemsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$itemsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a Items.
   * @param {itemsCreateArgs} args - Arguments to create a Items.
   * @example
   * // Create one Items
   * const Items = await prisma.items.create({
   *   data: {
   *     // ... data to create a Items
   *   }
   * })
   * 
   */
  create<T extends itemsCreateArgs>(args: Prisma.SelectSubset<T, itemsCreateArgs<ExtArgs>>): Prisma.Prisma__itemsClient<runtime.Types.Result.GetResult<Prisma.$itemsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many Items.
   * @param {itemsCreateManyArgs} args - Arguments to create many Items.
   * @example
   * // Create many Items
   * const items = await prisma.items.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends itemsCreateManyArgs>(args?: Prisma.SelectSubset<T, itemsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create many Items and returns the data saved in the database.
   * @param {itemsCreateManyAndReturnArgs} args - Arguments to create many Items.
   * @example
   * // Create many Items
   * const items = await prisma.items.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Create many Items and only return the `id`
   * const itemsWithIdOnly = await prisma.items.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  createManyAndReturn<T extends itemsCreateManyAndReturnArgs>(args?: Prisma.SelectSubset<T, itemsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$itemsPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

  /**
   * Delete a Items.
   * @param {itemsDeleteArgs} args - Arguments to delete one Items.
   * @example
   * // Delete one Items
   * const Items = await prisma.items.delete({
   *   where: {
   *     // ... filter to delete one Items
   *   }
   * })
   * 
   */
  delete<T extends itemsDeleteArgs>(args: Prisma.SelectSubset<T, itemsDeleteArgs<ExtArgs>>): Prisma.Prisma__itemsClient<runtime.Types.Result.GetResult<Prisma.$itemsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one Items.
   * @param {itemsUpdateArgs} args - Arguments to update one Items.
   * @example
   * // Update one Items
   * const items = await prisma.items.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends itemsUpdateArgs>(args: Prisma.SelectSubset<T, itemsUpdateArgs<ExtArgs>>): Prisma.Prisma__itemsClient<runtime.Types.Result.GetResult<Prisma.$itemsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more Items.
   * @param {itemsDeleteManyArgs} args - Arguments to filter Items to delete.
   * @example
   * // Delete a few Items
   * const { count } = await prisma.items.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends itemsDeleteManyArgs>(args?: Prisma.SelectSubset<T, itemsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Items.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {itemsUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Items
   * const items = await prisma.items.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends itemsUpdateManyArgs>(args: Prisma.SelectSubset<T, itemsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Items and returns the data updated in the database.
   * @param {itemsUpdateManyAndReturnArgs} args - Arguments to update many Items.
   * @example
   * // Update many Items
   * const items = await prisma.items.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Update zero or more Items and only return the `id`
   * const itemsWithIdOnly = await prisma.items.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  updateManyAndReturn<T extends itemsUpdateManyAndReturnArgs>(args: Prisma.SelectSubset<T, itemsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$itemsPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

  /**
   * Create or update one Items.
   * @param {itemsUpsertArgs} args - Arguments to update or create a Items.
   * @example
   * // Update or create a Items
   * const items = await prisma.items.upsert({
   *   create: {
   *     // ... data to create a Items
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the Items we want to update
   *   }
   * })
   */
  upsert<T extends itemsUpsertArgs>(args: Prisma.SelectSubset<T, itemsUpsertArgs<ExtArgs>>): Prisma.Prisma__itemsClient<runtime.Types.Result.GetResult<Prisma.$itemsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


  /**
   * Count the number of Items.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {itemsCountArgs} args - Arguments to filter Items to count.
   * @example
   * // Count the number of Items
   * const count = await prisma.items.count({
   *   where: {
   *     // ... the filter for the Items we want to count
   *   }
   * })
  **/
  count<T extends itemsCountArgs>(
    args?: Prisma.Subset<T, itemsCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], ItemsCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a Items.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ItemsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends ItemsAggregateArgs>(args: Prisma.Subset<T, ItemsAggregateArgs>): Prisma.PrismaPromise<GetItemsAggregateType<T>>

  /**
   * Group by Items.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {itemsGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends itemsGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: itemsGroupByArgs['orderBy'] }
      : { orderBy?: itemsGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, itemsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetItemsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the items model
 */
readonly fields: itemsFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for items.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__itemsClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  item_item_product_sales<T extends Prisma.items$item_item_product_salesArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.items$item_item_product_salesArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$item_item_product_salesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  item_product_sales<T extends Prisma.items$item_product_salesArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.items$item_product_salesArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$item_product_salesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  brands<T extends Prisma.items$brandsArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.items$brandsArgs<ExtArgs>>): Prisma.Prisma__brandsClient<runtime.Types.Result.GetResult<Prisma.$brandsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
  categories<T extends Prisma.items$categoriesArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.items$categoriesArgs<ExtArgs>>): Prisma.Prisma__categoriesClient<runtime.Types.Result.GetResult<Prisma.$categoriesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
  sub_brands<T extends Prisma.items$sub_brandsArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.items$sub_brandsArgs<ExtArgs>>): Prisma.Prisma__sub_brandsClient<runtime.Types.Result.GetResult<Prisma.$sub_brandsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the items model
 */
export interface itemsFieldRefs {
  readonly id: Prisma.FieldRef<"items", 'Int'>
  readonly brand_id: Prisma.FieldRef<"items", 'Int'>
  readonly sub_brand_id: Prisma.FieldRef<"items", 'Int'>
  readonly category_id: Prisma.FieldRef<"items", 'Int'>
  readonly name: Prisma.FieldRef<"items", 'String'>
  readonly pos_uuid: Prisma.FieldRef<"items", 'String'>
  readonly deleted_at: Prisma.FieldRef<"items", 'DateTime'>
}
    

// Custom InputTypes
/**
 * items findUnique
 */
export type itemsFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the items
   */
  select?: Prisma.itemsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the items
   */
  omit?: Prisma.itemsOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.itemsInclude<ExtArgs> | null
  /**
   * Filter, which items to fetch.
   */
  where: Prisma.itemsWhereUniqueInput
}

/**
 * items findUniqueOrThrow
 */
export type itemsFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the items
   */
  select?: Prisma.itemsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the items
   */
  omit?: Prisma.itemsOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.itemsInclude<ExtArgs> | null
  /**
   * Filter, which items to fetch.
   */
  where: Prisma.itemsWhereUniqueInput
}

/**
 * items findFirst
 */
export type itemsFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the items
   */
  select?: Prisma.itemsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the items
   */
  omit?: Prisma.itemsOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.itemsInclude<ExtArgs> | null
  /**
   * Filter, which items to fetch.
   */
  where?: Prisma.itemsWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of items to fetch.
   */
  orderBy?: Prisma.itemsOrderByWithRelationInput | Prisma.itemsOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for items.
   */
  cursor?: Prisma.itemsWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` items from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` items.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of items.
   */
  distinct?: Prisma.ItemsScalarFieldEnum | Prisma.ItemsScalarFieldEnum[]
}

/**
 * items findFirstOrThrow
 */
export type itemsFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the items
   */
  select?: Prisma.itemsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the items
   */
  omit?: Prisma.itemsOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.itemsInclude<ExtArgs> | null
  /**
   * Filter, which items to fetch.
   */
  where?: Prisma.itemsWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of items to fetch.
   */
  orderBy?: Prisma.itemsOrderByWithRelationInput | Prisma.itemsOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for items.
   */
  cursor?: Prisma.itemsWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` items from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` items.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of items.
   */
  distinct?: Prisma.ItemsScalarFieldEnum | Prisma.ItemsScalarFieldEnum[]
}

/**
 * items findMany
 */
export type itemsFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the items
   */
  select?: Prisma.itemsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the items
   */
  omit?: Prisma.itemsOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.itemsInclude<ExtArgs> | null
  /**
   * Filter, which items to fetch.
   */
  where?: Prisma.itemsWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of items to fetch.
   */
  orderBy?: Prisma.itemsOrderByWithRelationInput | Prisma.itemsOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing items.
   */
  cursor?: Prisma.itemsWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` items from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` items.
   */
  skip?: number
  distinct?: Prisma.ItemsScalarFieldEnum | Prisma.ItemsScalarFieldEnum[]
}

/**
 * items create
 */
export type itemsCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the items
   */
  select?: Prisma.itemsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the items
   */
  omit?: Prisma.itemsOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.itemsInclude<ExtArgs> | null
  /**
   * The data needed to create a items.
   */
  data: Prisma.XOR<Prisma.itemsCreateInput, Prisma.itemsUncheckedCreateInput>
}

/**
 * items createMany
 */
export type itemsCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many items.
   */
  data: Prisma.itemsCreateManyInput | Prisma.itemsCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * items createManyAndReturn
 */
export type itemsCreateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the items
   */
  select?: Prisma.itemsSelectCreateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the items
   */
  omit?: Prisma.itemsOmit<ExtArgs> | null
  /**
   * The data used to create many items.
   */
  data: Prisma.itemsCreateManyInput | Prisma.itemsCreateManyInput[]
  skipDuplicates?: boolean
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.itemsIncludeCreateManyAndReturn<ExtArgs> | null
}

/**
 * items update
 */
export type itemsUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the items
   */
  select?: Prisma.itemsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the items
   */
  omit?: Prisma.itemsOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.itemsInclude<ExtArgs> | null
  /**
   * The data needed to update a items.
   */
  data: Prisma.XOR<Prisma.itemsUpdateInput, Prisma.itemsUncheckedUpdateInput>
  /**
   * Choose, which items to update.
   */
  where: Prisma.itemsWhereUniqueInput
}

/**
 * items updateMany
 */
export type itemsUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update items.
   */
  data: Prisma.XOR<Prisma.itemsUpdateManyMutationInput, Prisma.itemsUncheckedUpdateManyInput>
  /**
   * Filter which items to update
   */
  where?: Prisma.itemsWhereInput
  /**
   * Limit how many items to update.
   */
  limit?: number
}

/**
 * items updateManyAndReturn
 */
export type itemsUpdateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the items
   */
  select?: Prisma.itemsSelectUpdateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the items
   */
  omit?: Prisma.itemsOmit<ExtArgs> | null
  /**
   * The data used to update items.
   */
  data: Prisma.XOR<Prisma.itemsUpdateManyMutationInput, Prisma.itemsUncheckedUpdateManyInput>
  /**
   * Filter which items to update
   */
  where?: Prisma.itemsWhereInput
  /**
   * Limit how many items to update.
   */
  limit?: number
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.itemsIncludeUpdateManyAndReturn<ExtArgs> | null
}

/**
 * items upsert
 */
export type itemsUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the items
   */
  select?: Prisma.itemsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the items
   */
  omit?: Prisma.itemsOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.itemsInclude<ExtArgs> | null
  /**
   * The filter to search for the items to update in case it exists.
   */
  where: Prisma.itemsWhereUniqueInput
  /**
   * In case the items found by the `where` argument doesn't exist, create a new items with this data.
   */
  create: Prisma.XOR<Prisma.itemsCreateInput, Prisma.itemsUncheckedCreateInput>
  /**
   * In case the items was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.itemsUpdateInput, Prisma.itemsUncheckedUpdateInput>
}

/**
 * items delete
 */
export type itemsDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the items
   */
  select?: Prisma.itemsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the items
   */
  omit?: Prisma.itemsOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.itemsInclude<ExtArgs> | null
  /**
   * Filter which items to delete.
   */
  where: Prisma.itemsWhereUniqueInput
}

/**
 * items deleteMany
 */
export type itemsDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which items to delete
   */
  where?: Prisma.itemsWhereInput
  /**
   * Limit how many items to delete.
   */
  limit?: number
}

/**
 * items.item_item_product_sales
 */
export type items$item_item_product_salesArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the item_item_product_sales
   */
  select?: Prisma.item_item_product_salesSelect<ExtArgs> | null
  /**
   * Omit specific fields from the item_item_product_sales
   */
  omit?: Prisma.item_item_product_salesOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.item_item_product_salesInclude<ExtArgs> | null
  where?: Prisma.item_item_product_salesWhereInput
  orderBy?: Prisma.item_item_product_salesOrderByWithRelationInput | Prisma.item_item_product_salesOrderByWithRelationInput[]
  cursor?: Prisma.item_item_product_salesWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.Item_item_product_salesScalarFieldEnum | Prisma.Item_item_product_salesScalarFieldEnum[]
}

/**
 * items.item_product_sales
 */
export type items$item_product_salesArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the item_product_sales
   */
  select?: Prisma.item_product_salesSelect<ExtArgs> | null
  /**
   * Omit specific fields from the item_product_sales
   */
  omit?: Prisma.item_product_salesOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.item_product_salesInclude<ExtArgs> | null
  where?: Prisma.item_product_salesWhereInput
  orderBy?: Prisma.item_product_salesOrderByWithRelationInput | Prisma.item_product_salesOrderByWithRelationInput[]
  cursor?: Prisma.item_product_salesWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.Item_product_salesScalarFieldEnum | Prisma.Item_product_salesScalarFieldEnum[]
}

/**
 * items.brands
 */
export type items$brandsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the brands
   */
  select?: Prisma.brandsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the brands
   */
  omit?: Prisma.brandsOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.brandsInclude<ExtArgs> | null
  where?: Prisma.brandsWhereInput
}

/**
 * items.categories
 */
export type items$categoriesArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the categories
   */
  select?: Prisma.categoriesSelect<ExtArgs> | null
  /**
   * Omit specific fields from the categories
   */
  omit?: Prisma.categoriesOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.categoriesInclude<ExtArgs> | null
  where?: Prisma.categoriesWhereInput
}

/**
 * items.sub_brands
 */
export type items$sub_brandsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the sub_brands
   */
  select?: Prisma.sub_brandsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the sub_brands
   */
  omit?: Prisma.sub_brandsOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.sub_brandsInclude<ExtArgs> | null
  where?: Prisma.sub_brandsWhereInput
}

/**
 * items without action
 */
export type itemsDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the items
   */
  select?: Prisma.itemsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the items
   */
  omit?: Prisma.itemsOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.itemsInclude<ExtArgs> | null
}
