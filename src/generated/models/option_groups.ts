
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/*
 * This file exports the `option_groups` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import type * as runtime from "@prisma/client/runtime/library"
import type * as $Enums from "../enums"
import type * as Prisma from "../internal/prismaNamespace"

/**
 * Model option_groups
 * 
 */
export type option_groupsModel = runtime.Types.Result.DefaultSelection<Prisma.$option_groupsPayload>

export type AggregateOption_groups = {
  _count: Option_groupsCountAggregateOutputType | null
  _avg: Option_groupsAvgAggregateOutputType | null
  _sum: Option_groupsSumAggregateOutputType | null
  _min: Option_groupsMinAggregateOutputType | null
  _max: Option_groupsMaxAggregateOutputType | null
}

export type Option_groupsAvgAggregateOutputType = {
  id: number | null
  brand_id: number | null
  sub_brand_id: number | null
  category_id: number | null
}

export type Option_groupsSumAggregateOutputType = {
  id: number | null
  brand_id: number | null
  sub_brand_id: number | null
  category_id: number | null
}

export type Option_groupsMinAggregateOutputType = {
  id: number | null
  brand_id: number | null
  sub_brand_id: number | null
  category_id: number | null
  name: string | null
  pos_uuid: string | null
  deleted_at: Date | null
}

export type Option_groupsMaxAggregateOutputType = {
  id: number | null
  brand_id: number | null
  sub_brand_id: number | null
  category_id: number | null
  name: string | null
  pos_uuid: string | null
  deleted_at: Date | null
}

export type Option_groupsCountAggregateOutputType = {
  id: number
  brand_id: number
  sub_brand_id: number
  category_id: number
  name: number
  pos_uuid: number
  deleted_at: number
  _all: number
}


export type Option_groupsAvgAggregateInputType = {
  id?: true
  brand_id?: true
  sub_brand_id?: true
  category_id?: true
}

export type Option_groupsSumAggregateInputType = {
  id?: true
  brand_id?: true
  sub_brand_id?: true
  category_id?: true
}

export type Option_groupsMinAggregateInputType = {
  id?: true
  brand_id?: true
  sub_brand_id?: true
  category_id?: true
  name?: true
  pos_uuid?: true
  deleted_at?: true
}

export type Option_groupsMaxAggregateInputType = {
  id?: true
  brand_id?: true
  sub_brand_id?: true
  category_id?: true
  name?: true
  pos_uuid?: true
  deleted_at?: true
}

export type Option_groupsCountAggregateInputType = {
  id?: true
  brand_id?: true
  sub_brand_id?: true
  category_id?: true
  name?: true
  pos_uuid?: true
  deleted_at?: true
  _all?: true
}

export type Option_groupsAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which option_groups to aggregate.
   */
  where?: Prisma.option_groupsWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of option_groups to fetch.
   */
  orderBy?: Prisma.option_groupsOrderByWithRelationInput | Prisma.option_groupsOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.option_groupsWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` option_groups from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` option_groups.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned option_groups
  **/
  _count?: true | Option_groupsCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to average
  **/
  _avg?: Option_groupsAvgAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to sum
  **/
  _sum?: Option_groupsSumAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: Option_groupsMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: Option_groupsMaxAggregateInputType
}

export type GetOption_groupsAggregateType<T extends Option_groupsAggregateArgs> = {
      [P in keyof T & keyof AggregateOption_groups]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateOption_groups[P]>
    : Prisma.GetScalarType<T[P], AggregateOption_groups[P]>
}




export type option_groupsGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.option_groupsWhereInput
  orderBy?: Prisma.option_groupsOrderByWithAggregationInput | Prisma.option_groupsOrderByWithAggregationInput[]
  by: Prisma.Option_groupsScalarFieldEnum[] | Prisma.Option_groupsScalarFieldEnum
  having?: Prisma.option_groupsScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: Option_groupsCountAggregateInputType | true
  _avg?: Option_groupsAvgAggregateInputType
  _sum?: Option_groupsSumAggregateInputType
  _min?: Option_groupsMinAggregateInputType
  _max?: Option_groupsMaxAggregateInputType
}

export type Option_groupsGroupByOutputType = {
  id: number
  brand_id: number | null
  sub_brand_id: number | null
  category_id: number | null
  name: string
  pos_uuid: string | null
  deleted_at: Date | null
  _count: Option_groupsCountAggregateOutputType | null
  _avg: Option_groupsAvgAggregateOutputType | null
  _sum: Option_groupsSumAggregateOutputType | null
  _min: Option_groupsMinAggregateOutputType | null
  _max: Option_groupsMaxAggregateOutputType | null
}

type GetOption_groupsGroupByPayload<T extends option_groupsGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<Option_groupsGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof Option_groupsGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], Option_groupsGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], Option_groupsGroupByOutputType[P]>
      }
    >
  >



export type option_groupsWhereInput = {
  AND?: Prisma.option_groupsWhereInput | Prisma.option_groupsWhereInput[]
  OR?: Prisma.option_groupsWhereInput[]
  NOT?: Prisma.option_groupsWhereInput | Prisma.option_groupsWhereInput[]
  id?: Prisma.IntFilter<"option_groups"> | number
  brand_id?: Prisma.IntNullableFilter<"option_groups"> | number | null
  sub_brand_id?: Prisma.IntNullableFilter<"option_groups"> | number | null
  category_id?: Prisma.IntNullableFilter<"option_groups"> | number | null
  name?: Prisma.StringFilter<"option_groups"> | string
  pos_uuid?: Prisma.StringNullableFilter<"option_groups"> | string | null
  deleted_at?: Prisma.DateTimeNullableFilter<"option_groups"> | Date | string | null
  item_item_product_sales?: Prisma.Item_item_product_salesListRelationFilter
  item_product_sales?: Prisma.Item_product_salesListRelationFilter
  brands?: Prisma.XOR<Prisma.BrandsNullableScalarRelationFilter, Prisma.brandsWhereInput> | null
  categories?: Prisma.XOR<Prisma.CategoriesNullableScalarRelationFilter, Prisma.categoriesWhereInput> | null
  sub_brands?: Prisma.XOR<Prisma.Sub_brandsNullableScalarRelationFilter, Prisma.sub_brandsWhereInput> | null
}

export type option_groupsOrderByWithRelationInput = {
  id?: Prisma.SortOrder
  brand_id?: Prisma.SortOrderInput | Prisma.SortOrder
  sub_brand_id?: Prisma.SortOrderInput | Prisma.SortOrder
  category_id?: Prisma.SortOrderInput | Prisma.SortOrder
  name?: Prisma.SortOrder
  pos_uuid?: Prisma.SortOrderInput | Prisma.SortOrder
  deleted_at?: Prisma.SortOrderInput | Prisma.SortOrder
  item_item_product_sales?: Prisma.item_item_product_salesOrderByRelationAggregateInput
  item_product_sales?: Prisma.item_product_salesOrderByRelationAggregateInput
  brands?: Prisma.brandsOrderByWithRelationInput
  categories?: Prisma.categoriesOrderByWithRelationInput
  sub_brands?: Prisma.sub_brandsOrderByWithRelationInput
}

export type option_groupsWhereUniqueInput = Prisma.AtLeast<{
  id?: number
  AND?: Prisma.option_groupsWhereInput | Prisma.option_groupsWhereInput[]
  OR?: Prisma.option_groupsWhereInput[]
  NOT?: Prisma.option_groupsWhereInput | Prisma.option_groupsWhereInput[]
  brand_id?: Prisma.IntNullableFilter<"option_groups"> | number | null
  sub_brand_id?: Prisma.IntNullableFilter<"option_groups"> | number | null
  category_id?: Prisma.IntNullableFilter<"option_groups"> | number | null
  name?: Prisma.StringFilter<"option_groups"> | string
  pos_uuid?: Prisma.StringNullableFilter<"option_groups"> | string | null
  deleted_at?: Prisma.DateTimeNullableFilter<"option_groups"> | Date | string | null
  item_item_product_sales?: Prisma.Item_item_product_salesListRelationFilter
  item_product_sales?: Prisma.Item_product_salesListRelationFilter
  brands?: Prisma.XOR<Prisma.BrandsNullableScalarRelationFilter, Prisma.brandsWhereInput> | null
  categories?: Prisma.XOR<Prisma.CategoriesNullableScalarRelationFilter, Prisma.categoriesWhereInput> | null
  sub_brands?: Prisma.XOR<Prisma.Sub_brandsNullableScalarRelationFilter, Prisma.sub_brandsWhereInput> | null
}, "id">

export type option_groupsOrderByWithAggregationInput = {
  id?: Prisma.SortOrder
  brand_id?: Prisma.SortOrderInput | Prisma.SortOrder
  sub_brand_id?: Prisma.SortOrderInput | Prisma.SortOrder
  category_id?: Prisma.SortOrderInput | Prisma.SortOrder
  name?: Prisma.SortOrder
  pos_uuid?: Prisma.SortOrderInput | Prisma.SortOrder
  deleted_at?: Prisma.SortOrderInput | Prisma.SortOrder
  _count?: Prisma.option_groupsCountOrderByAggregateInput
  _avg?: Prisma.option_groupsAvgOrderByAggregateInput
  _max?: Prisma.option_groupsMaxOrderByAggregateInput
  _min?: Prisma.option_groupsMinOrderByAggregateInput
  _sum?: Prisma.option_groupsSumOrderByAggregateInput
}

export type option_groupsScalarWhereWithAggregatesInput = {
  AND?: Prisma.option_groupsScalarWhereWithAggregatesInput | Prisma.option_groupsScalarWhereWithAggregatesInput[]
  OR?: Prisma.option_groupsScalarWhereWithAggregatesInput[]
  NOT?: Prisma.option_groupsScalarWhereWithAggregatesInput | Prisma.option_groupsScalarWhereWithAggregatesInput[]
  id?: Prisma.IntWithAggregatesFilter<"option_groups"> | number
  brand_id?: Prisma.IntNullableWithAggregatesFilter<"option_groups"> | number | null
  sub_brand_id?: Prisma.IntNullableWithAggregatesFilter<"option_groups"> | number | null
  category_id?: Prisma.IntNullableWithAggregatesFilter<"option_groups"> | number | null
  name?: Prisma.StringWithAggregatesFilter<"option_groups"> | string
  pos_uuid?: Prisma.StringNullableWithAggregatesFilter<"option_groups"> | string | null
  deleted_at?: Prisma.DateTimeNullableWithAggregatesFilter<"option_groups"> | Date | string | null
}

export type option_groupsCreateInput = {
  name: string
  pos_uuid?: string | null
  deleted_at?: Date | string | null
  item_item_product_sales?: Prisma.item_item_product_salesCreateNestedManyWithoutOption_groupsInput
  item_product_sales?: Prisma.item_product_salesCreateNestedManyWithoutOption_groupsInput
  brands?: Prisma.brandsCreateNestedOneWithoutOption_groupsInput
  categories?: Prisma.categoriesCreateNestedOneWithoutOption_groupsInput
  sub_brands?: Prisma.sub_brandsCreateNestedOneWithoutOption_groupsInput
}

export type option_groupsUncheckedCreateInput = {
  id?: number
  brand_id?: number | null
  sub_brand_id?: number | null
  category_id?: number | null
  name: string
  pos_uuid?: string | null
  deleted_at?: Date | string | null
  item_item_product_sales?: Prisma.item_item_product_salesUncheckedCreateNestedManyWithoutOption_groupsInput
  item_product_sales?: Prisma.item_product_salesUncheckedCreateNestedManyWithoutOption_groupsInput
}

export type option_groupsUpdateInput = {
  name?: Prisma.StringFieldUpdateOperationsInput | string
  pos_uuid?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  deleted_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  item_item_product_sales?: Prisma.item_item_product_salesUpdateManyWithoutOption_groupsNestedInput
  item_product_sales?: Prisma.item_product_salesUpdateManyWithoutOption_groupsNestedInput
  brands?: Prisma.brandsUpdateOneWithoutOption_groupsNestedInput
  categories?: Prisma.categoriesUpdateOneWithoutOption_groupsNestedInput
  sub_brands?: Prisma.sub_brandsUpdateOneWithoutOption_groupsNestedInput
}

export type option_groupsUncheckedUpdateInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  brand_id?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  sub_brand_id?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  category_id?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  name?: Prisma.StringFieldUpdateOperationsInput | string
  pos_uuid?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  deleted_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  item_item_product_sales?: Prisma.item_item_product_salesUncheckedUpdateManyWithoutOption_groupsNestedInput
  item_product_sales?: Prisma.item_product_salesUncheckedUpdateManyWithoutOption_groupsNestedInput
}

export type option_groupsCreateManyInput = {
  id?: number
  brand_id?: number | null
  sub_brand_id?: number | null
  category_id?: number | null
  name: string
  pos_uuid?: string | null
  deleted_at?: Date | string | null
}

export type option_groupsUpdateManyMutationInput = {
  name?: Prisma.StringFieldUpdateOperationsInput | string
  pos_uuid?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  deleted_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
}

export type option_groupsUncheckedUpdateManyInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  brand_id?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  sub_brand_id?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  category_id?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  name?: Prisma.StringFieldUpdateOperationsInput | string
  pos_uuid?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  deleted_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
}

export type Option_groupsListRelationFilter = {
  every?: Prisma.option_groupsWhereInput
  some?: Prisma.option_groupsWhereInput
  none?: Prisma.option_groupsWhereInput
}

export type option_groupsOrderByRelationAggregateInput = {
  _count?: Prisma.SortOrder
}

export type Option_groupsNullableScalarRelationFilter = {
  is?: Prisma.option_groupsWhereInput | null
  isNot?: Prisma.option_groupsWhereInput | null
}

export type option_groupsCountOrderByAggregateInput = {
  id?: Prisma.SortOrder
  brand_id?: Prisma.SortOrder
  sub_brand_id?: Prisma.SortOrder
  category_id?: Prisma.SortOrder
  name?: Prisma.SortOrder
  pos_uuid?: Prisma.SortOrder
  deleted_at?: Prisma.SortOrder
}

export type option_groupsAvgOrderByAggregateInput = {
  id?: Prisma.SortOrder
  brand_id?: Prisma.SortOrder
  sub_brand_id?: Prisma.SortOrder
  category_id?: Prisma.SortOrder
}

export type option_groupsMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder
  brand_id?: Prisma.SortOrder
  sub_brand_id?: Prisma.SortOrder
  category_id?: Prisma.SortOrder
  name?: Prisma.SortOrder
  pos_uuid?: Prisma.SortOrder
  deleted_at?: Prisma.SortOrder
}

export type option_groupsMinOrderByAggregateInput = {
  id?: Prisma.SortOrder
  brand_id?: Prisma.SortOrder
  sub_brand_id?: Prisma.SortOrder
  category_id?: Prisma.SortOrder
  name?: Prisma.SortOrder
  pos_uuid?: Prisma.SortOrder
  deleted_at?: Prisma.SortOrder
}

export type option_groupsSumOrderByAggregateInput = {
  id?: Prisma.SortOrder
  brand_id?: Prisma.SortOrder
  sub_brand_id?: Prisma.SortOrder
  category_id?: Prisma.SortOrder
}

export type option_groupsCreateNestedManyWithoutBrandsInput = {
  create?: Prisma.XOR<Prisma.option_groupsCreateWithoutBrandsInput, Prisma.option_groupsUncheckedCreateWithoutBrandsInput> | Prisma.option_groupsCreateWithoutBrandsInput[] | Prisma.option_groupsUncheckedCreateWithoutBrandsInput[]
  connectOrCreate?: Prisma.option_groupsCreateOrConnectWithoutBrandsInput | Prisma.option_groupsCreateOrConnectWithoutBrandsInput[]
  createMany?: Prisma.option_groupsCreateManyBrandsInputEnvelope
  connect?: Prisma.option_groupsWhereUniqueInput | Prisma.option_groupsWhereUniqueInput[]
}

export type option_groupsUncheckedCreateNestedManyWithoutBrandsInput = {
  create?: Prisma.XOR<Prisma.option_groupsCreateWithoutBrandsInput, Prisma.option_groupsUncheckedCreateWithoutBrandsInput> | Prisma.option_groupsCreateWithoutBrandsInput[] | Prisma.option_groupsUncheckedCreateWithoutBrandsInput[]
  connectOrCreate?: Prisma.option_groupsCreateOrConnectWithoutBrandsInput | Prisma.option_groupsCreateOrConnectWithoutBrandsInput[]
  createMany?: Prisma.option_groupsCreateManyBrandsInputEnvelope
  connect?: Prisma.option_groupsWhereUniqueInput | Prisma.option_groupsWhereUniqueInput[]
}

export type option_groupsUpdateManyWithoutBrandsNestedInput = {
  create?: Prisma.XOR<Prisma.option_groupsCreateWithoutBrandsInput, Prisma.option_groupsUncheckedCreateWithoutBrandsInput> | Prisma.option_groupsCreateWithoutBrandsInput[] | Prisma.option_groupsUncheckedCreateWithoutBrandsInput[]
  connectOrCreate?: Prisma.option_groupsCreateOrConnectWithoutBrandsInput | Prisma.option_groupsCreateOrConnectWithoutBrandsInput[]
  upsert?: Prisma.option_groupsUpsertWithWhereUniqueWithoutBrandsInput | Prisma.option_groupsUpsertWithWhereUniqueWithoutBrandsInput[]
  createMany?: Prisma.option_groupsCreateManyBrandsInputEnvelope
  set?: Prisma.option_groupsWhereUniqueInput | Prisma.option_groupsWhereUniqueInput[]
  disconnect?: Prisma.option_groupsWhereUniqueInput | Prisma.option_groupsWhereUniqueInput[]
  delete?: Prisma.option_groupsWhereUniqueInput | Prisma.option_groupsWhereUniqueInput[]
  connect?: Prisma.option_groupsWhereUniqueInput | Prisma.option_groupsWhereUniqueInput[]
  update?: Prisma.option_groupsUpdateWithWhereUniqueWithoutBrandsInput | Prisma.option_groupsUpdateWithWhereUniqueWithoutBrandsInput[]
  updateMany?: Prisma.option_groupsUpdateManyWithWhereWithoutBrandsInput | Prisma.option_groupsUpdateManyWithWhereWithoutBrandsInput[]
  deleteMany?: Prisma.option_groupsScalarWhereInput | Prisma.option_groupsScalarWhereInput[]
}

export type option_groupsUncheckedUpdateManyWithoutBrandsNestedInput = {
  create?: Prisma.XOR<Prisma.option_groupsCreateWithoutBrandsInput, Prisma.option_groupsUncheckedCreateWithoutBrandsInput> | Prisma.option_groupsCreateWithoutBrandsInput[] | Prisma.option_groupsUncheckedCreateWithoutBrandsInput[]
  connectOrCreate?: Prisma.option_groupsCreateOrConnectWithoutBrandsInput | Prisma.option_groupsCreateOrConnectWithoutBrandsInput[]
  upsert?: Prisma.option_groupsUpsertWithWhereUniqueWithoutBrandsInput | Prisma.option_groupsUpsertWithWhereUniqueWithoutBrandsInput[]
  createMany?: Prisma.option_groupsCreateManyBrandsInputEnvelope
  set?: Prisma.option_groupsWhereUniqueInput | Prisma.option_groupsWhereUniqueInput[]
  disconnect?: Prisma.option_groupsWhereUniqueInput | Prisma.option_groupsWhereUniqueInput[]
  delete?: Prisma.option_groupsWhereUniqueInput | Prisma.option_groupsWhereUniqueInput[]
  connect?: Prisma.option_groupsWhereUniqueInput | Prisma.option_groupsWhereUniqueInput[]
  update?: Prisma.option_groupsUpdateWithWhereUniqueWithoutBrandsInput | Prisma.option_groupsUpdateWithWhereUniqueWithoutBrandsInput[]
  updateMany?: Prisma.option_groupsUpdateManyWithWhereWithoutBrandsInput | Prisma.option_groupsUpdateManyWithWhereWithoutBrandsInput[]
  deleteMany?: Prisma.option_groupsScalarWhereInput | Prisma.option_groupsScalarWhereInput[]
}

export type option_groupsCreateNestedManyWithoutCategoriesInput = {
  create?: Prisma.XOR<Prisma.option_groupsCreateWithoutCategoriesInput, Prisma.option_groupsUncheckedCreateWithoutCategoriesInput> | Prisma.option_groupsCreateWithoutCategoriesInput[] | Prisma.option_groupsUncheckedCreateWithoutCategoriesInput[]
  connectOrCreate?: Prisma.option_groupsCreateOrConnectWithoutCategoriesInput | Prisma.option_groupsCreateOrConnectWithoutCategoriesInput[]
  createMany?: Prisma.option_groupsCreateManyCategoriesInputEnvelope
  connect?: Prisma.option_groupsWhereUniqueInput | Prisma.option_groupsWhereUniqueInput[]
}

export type option_groupsUncheckedCreateNestedManyWithoutCategoriesInput = {
  create?: Prisma.XOR<Prisma.option_groupsCreateWithoutCategoriesInput, Prisma.option_groupsUncheckedCreateWithoutCategoriesInput> | Prisma.option_groupsCreateWithoutCategoriesInput[] | Prisma.option_groupsUncheckedCreateWithoutCategoriesInput[]
  connectOrCreate?: Prisma.option_groupsCreateOrConnectWithoutCategoriesInput | Prisma.option_groupsCreateOrConnectWithoutCategoriesInput[]
  createMany?: Prisma.option_groupsCreateManyCategoriesInputEnvelope
  connect?: Prisma.option_groupsWhereUniqueInput | Prisma.option_groupsWhereUniqueInput[]
}

export type option_groupsUpdateManyWithoutCategoriesNestedInput = {
  create?: Prisma.XOR<Prisma.option_groupsCreateWithoutCategoriesInput, Prisma.option_groupsUncheckedCreateWithoutCategoriesInput> | Prisma.option_groupsCreateWithoutCategoriesInput[] | Prisma.option_groupsUncheckedCreateWithoutCategoriesInput[]
  connectOrCreate?: Prisma.option_groupsCreateOrConnectWithoutCategoriesInput | Prisma.option_groupsCreateOrConnectWithoutCategoriesInput[]
  upsert?: Prisma.option_groupsUpsertWithWhereUniqueWithoutCategoriesInput | Prisma.option_groupsUpsertWithWhereUniqueWithoutCategoriesInput[]
  createMany?: Prisma.option_groupsCreateManyCategoriesInputEnvelope
  set?: Prisma.option_groupsWhereUniqueInput | Prisma.option_groupsWhereUniqueInput[]
  disconnect?: Prisma.option_groupsWhereUniqueInput | Prisma.option_groupsWhereUniqueInput[]
  delete?: Prisma.option_groupsWhereUniqueInput | Prisma.option_groupsWhereUniqueInput[]
  connect?: Prisma.option_groupsWhereUniqueInput | Prisma.option_groupsWhereUniqueInput[]
  update?: Prisma.option_groupsUpdateWithWhereUniqueWithoutCategoriesInput | Prisma.option_groupsUpdateWithWhereUniqueWithoutCategoriesInput[]
  updateMany?: Prisma.option_groupsUpdateManyWithWhereWithoutCategoriesInput | Prisma.option_groupsUpdateManyWithWhereWithoutCategoriesInput[]
  deleteMany?: Prisma.option_groupsScalarWhereInput | Prisma.option_groupsScalarWhereInput[]
}

export type option_groupsUncheckedUpdateManyWithoutCategoriesNestedInput = {
  create?: Prisma.XOR<Prisma.option_groupsCreateWithoutCategoriesInput, Prisma.option_groupsUncheckedCreateWithoutCategoriesInput> | Prisma.option_groupsCreateWithoutCategoriesInput[] | Prisma.option_groupsUncheckedCreateWithoutCategoriesInput[]
  connectOrCreate?: Prisma.option_groupsCreateOrConnectWithoutCategoriesInput | Prisma.option_groupsCreateOrConnectWithoutCategoriesInput[]
  upsert?: Prisma.option_groupsUpsertWithWhereUniqueWithoutCategoriesInput | Prisma.option_groupsUpsertWithWhereUniqueWithoutCategoriesInput[]
  createMany?: Prisma.option_groupsCreateManyCategoriesInputEnvelope
  set?: Prisma.option_groupsWhereUniqueInput | Prisma.option_groupsWhereUniqueInput[]
  disconnect?: Prisma.option_groupsWhereUniqueInput | Prisma.option_groupsWhereUniqueInput[]
  delete?: Prisma.option_groupsWhereUniqueInput | Prisma.option_groupsWhereUniqueInput[]
  connect?: Prisma.option_groupsWhereUniqueInput | Prisma.option_groupsWhereUniqueInput[]
  update?: Prisma.option_groupsUpdateWithWhereUniqueWithoutCategoriesInput | Prisma.option_groupsUpdateWithWhereUniqueWithoutCategoriesInput[]
  updateMany?: Prisma.option_groupsUpdateManyWithWhereWithoutCategoriesInput | Prisma.option_groupsUpdateManyWithWhereWithoutCategoriesInput[]
  deleteMany?: Prisma.option_groupsScalarWhereInput | Prisma.option_groupsScalarWhereInput[]
}

export type option_groupsCreateNestedOneWithoutItem_item_product_salesInput = {
  create?: Prisma.XOR<Prisma.option_groupsCreateWithoutItem_item_product_salesInput, Prisma.option_groupsUncheckedCreateWithoutItem_item_product_salesInput>
  connectOrCreate?: Prisma.option_groupsCreateOrConnectWithoutItem_item_product_salesInput
  connect?: Prisma.option_groupsWhereUniqueInput
}

export type option_groupsUpdateOneWithoutItem_item_product_salesNestedInput = {
  create?: Prisma.XOR<Prisma.option_groupsCreateWithoutItem_item_product_salesInput, Prisma.option_groupsUncheckedCreateWithoutItem_item_product_salesInput>
  connectOrCreate?: Prisma.option_groupsCreateOrConnectWithoutItem_item_product_salesInput
  upsert?: Prisma.option_groupsUpsertWithoutItem_item_product_salesInput
  disconnect?: Prisma.option_groupsWhereInput | boolean
  delete?: Prisma.option_groupsWhereInput | boolean
  connect?: Prisma.option_groupsWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.option_groupsUpdateToOneWithWhereWithoutItem_item_product_salesInput, Prisma.option_groupsUpdateWithoutItem_item_product_salesInput>, Prisma.option_groupsUncheckedUpdateWithoutItem_item_product_salesInput>
}

export type option_groupsCreateNestedOneWithoutItem_product_salesInput = {
  create?: Prisma.XOR<Prisma.option_groupsCreateWithoutItem_product_salesInput, Prisma.option_groupsUncheckedCreateWithoutItem_product_salesInput>
  connectOrCreate?: Prisma.option_groupsCreateOrConnectWithoutItem_product_salesInput
  connect?: Prisma.option_groupsWhereUniqueInput
}

export type option_groupsUpdateOneWithoutItem_product_salesNestedInput = {
  create?: Prisma.XOR<Prisma.option_groupsCreateWithoutItem_product_salesInput, Prisma.option_groupsUncheckedCreateWithoutItem_product_salesInput>
  connectOrCreate?: Prisma.option_groupsCreateOrConnectWithoutItem_product_salesInput
  upsert?: Prisma.option_groupsUpsertWithoutItem_product_salesInput
  disconnect?: Prisma.option_groupsWhereInput | boolean
  delete?: Prisma.option_groupsWhereInput | boolean
  connect?: Prisma.option_groupsWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.option_groupsUpdateToOneWithWhereWithoutItem_product_salesInput, Prisma.option_groupsUpdateWithoutItem_product_salesInput>, Prisma.option_groupsUncheckedUpdateWithoutItem_product_salesInput>
}

export type option_groupsCreateNestedManyWithoutSub_brandsInput = {
  create?: Prisma.XOR<Prisma.option_groupsCreateWithoutSub_brandsInput, Prisma.option_groupsUncheckedCreateWithoutSub_brandsInput> | Prisma.option_groupsCreateWithoutSub_brandsInput[] | Prisma.option_groupsUncheckedCreateWithoutSub_brandsInput[]
  connectOrCreate?: Prisma.option_groupsCreateOrConnectWithoutSub_brandsInput | Prisma.option_groupsCreateOrConnectWithoutSub_brandsInput[]
  createMany?: Prisma.option_groupsCreateManySub_brandsInputEnvelope
  connect?: Prisma.option_groupsWhereUniqueInput | Prisma.option_groupsWhereUniqueInput[]
}

export type option_groupsUncheckedCreateNestedManyWithoutSub_brandsInput = {
  create?: Prisma.XOR<Prisma.option_groupsCreateWithoutSub_brandsInput, Prisma.option_groupsUncheckedCreateWithoutSub_brandsInput> | Prisma.option_groupsCreateWithoutSub_brandsInput[] | Prisma.option_groupsUncheckedCreateWithoutSub_brandsInput[]
  connectOrCreate?: Prisma.option_groupsCreateOrConnectWithoutSub_brandsInput | Prisma.option_groupsCreateOrConnectWithoutSub_brandsInput[]
  createMany?: Prisma.option_groupsCreateManySub_brandsInputEnvelope
  connect?: Prisma.option_groupsWhereUniqueInput | Prisma.option_groupsWhereUniqueInput[]
}

export type option_groupsUpdateManyWithoutSub_brandsNestedInput = {
  create?: Prisma.XOR<Prisma.option_groupsCreateWithoutSub_brandsInput, Prisma.option_groupsUncheckedCreateWithoutSub_brandsInput> | Prisma.option_groupsCreateWithoutSub_brandsInput[] | Prisma.option_groupsUncheckedCreateWithoutSub_brandsInput[]
  connectOrCreate?: Prisma.option_groupsCreateOrConnectWithoutSub_brandsInput | Prisma.option_groupsCreateOrConnectWithoutSub_brandsInput[]
  upsert?: Prisma.option_groupsUpsertWithWhereUniqueWithoutSub_brandsInput | Prisma.option_groupsUpsertWithWhereUniqueWithoutSub_brandsInput[]
  createMany?: Prisma.option_groupsCreateManySub_brandsInputEnvelope
  set?: Prisma.option_groupsWhereUniqueInput | Prisma.option_groupsWhereUniqueInput[]
  disconnect?: Prisma.option_groupsWhereUniqueInput | Prisma.option_groupsWhereUniqueInput[]
  delete?: Prisma.option_groupsWhereUniqueInput | Prisma.option_groupsWhereUniqueInput[]
  connect?: Prisma.option_groupsWhereUniqueInput | Prisma.option_groupsWhereUniqueInput[]
  update?: Prisma.option_groupsUpdateWithWhereUniqueWithoutSub_brandsInput | Prisma.option_groupsUpdateWithWhereUniqueWithoutSub_brandsInput[]
  updateMany?: Prisma.option_groupsUpdateManyWithWhereWithoutSub_brandsInput | Prisma.option_groupsUpdateManyWithWhereWithoutSub_brandsInput[]
  deleteMany?: Prisma.option_groupsScalarWhereInput | Prisma.option_groupsScalarWhereInput[]
}

export type option_groupsUncheckedUpdateManyWithoutSub_brandsNestedInput = {
  create?: Prisma.XOR<Prisma.option_groupsCreateWithoutSub_brandsInput, Prisma.option_groupsUncheckedCreateWithoutSub_brandsInput> | Prisma.option_groupsCreateWithoutSub_brandsInput[] | Prisma.option_groupsUncheckedCreateWithoutSub_brandsInput[]
  connectOrCreate?: Prisma.option_groupsCreateOrConnectWithoutSub_brandsInput | Prisma.option_groupsCreateOrConnectWithoutSub_brandsInput[]
  upsert?: Prisma.option_groupsUpsertWithWhereUniqueWithoutSub_brandsInput | Prisma.option_groupsUpsertWithWhereUniqueWithoutSub_brandsInput[]
  createMany?: Prisma.option_groupsCreateManySub_brandsInputEnvelope
  set?: Prisma.option_groupsWhereUniqueInput | Prisma.option_groupsWhereUniqueInput[]
  disconnect?: Prisma.option_groupsWhereUniqueInput | Prisma.option_groupsWhereUniqueInput[]
  delete?: Prisma.option_groupsWhereUniqueInput | Prisma.option_groupsWhereUniqueInput[]
  connect?: Prisma.option_groupsWhereUniqueInput | Prisma.option_groupsWhereUniqueInput[]
  update?: Prisma.option_groupsUpdateWithWhereUniqueWithoutSub_brandsInput | Prisma.option_groupsUpdateWithWhereUniqueWithoutSub_brandsInput[]
  updateMany?: Prisma.option_groupsUpdateManyWithWhereWithoutSub_brandsInput | Prisma.option_groupsUpdateManyWithWhereWithoutSub_brandsInput[]
  deleteMany?: Prisma.option_groupsScalarWhereInput | Prisma.option_groupsScalarWhereInput[]
}

export type option_groupsCreateWithoutBrandsInput = {
  name: string
  pos_uuid?: string | null
  deleted_at?: Date | string | null
  item_item_product_sales?: Prisma.item_item_product_salesCreateNestedManyWithoutOption_groupsInput
  item_product_sales?: Prisma.item_product_salesCreateNestedManyWithoutOption_groupsInput
  categories?: Prisma.categoriesCreateNestedOneWithoutOption_groupsInput
  sub_brands?: Prisma.sub_brandsCreateNestedOneWithoutOption_groupsInput
}

export type option_groupsUncheckedCreateWithoutBrandsInput = {
  id?: number
  sub_brand_id?: number | null
  category_id?: number | null
  name: string
  pos_uuid?: string | null
  deleted_at?: Date | string | null
  item_item_product_sales?: Prisma.item_item_product_salesUncheckedCreateNestedManyWithoutOption_groupsInput
  item_product_sales?: Prisma.item_product_salesUncheckedCreateNestedManyWithoutOption_groupsInput
}

export type option_groupsCreateOrConnectWithoutBrandsInput = {
  where: Prisma.option_groupsWhereUniqueInput
  create: Prisma.XOR<Prisma.option_groupsCreateWithoutBrandsInput, Prisma.option_groupsUncheckedCreateWithoutBrandsInput>
}

export type option_groupsCreateManyBrandsInputEnvelope = {
  data: Prisma.option_groupsCreateManyBrandsInput | Prisma.option_groupsCreateManyBrandsInput[]
  skipDuplicates?: boolean
}

export type option_groupsUpsertWithWhereUniqueWithoutBrandsInput = {
  where: Prisma.option_groupsWhereUniqueInput
  update: Prisma.XOR<Prisma.option_groupsUpdateWithoutBrandsInput, Prisma.option_groupsUncheckedUpdateWithoutBrandsInput>
  create: Prisma.XOR<Prisma.option_groupsCreateWithoutBrandsInput, Prisma.option_groupsUncheckedCreateWithoutBrandsInput>
}

export type option_groupsUpdateWithWhereUniqueWithoutBrandsInput = {
  where: Prisma.option_groupsWhereUniqueInput
  data: Prisma.XOR<Prisma.option_groupsUpdateWithoutBrandsInput, Prisma.option_groupsUncheckedUpdateWithoutBrandsInput>
}

export type option_groupsUpdateManyWithWhereWithoutBrandsInput = {
  where: Prisma.option_groupsScalarWhereInput
  data: Prisma.XOR<Prisma.option_groupsUpdateManyMutationInput, Prisma.option_groupsUncheckedUpdateManyWithoutBrandsInput>
}

export type option_groupsScalarWhereInput = {
  AND?: Prisma.option_groupsScalarWhereInput | Prisma.option_groupsScalarWhereInput[]
  OR?: Prisma.option_groupsScalarWhereInput[]
  NOT?: Prisma.option_groupsScalarWhereInput | Prisma.option_groupsScalarWhereInput[]
  id?: Prisma.IntFilter<"option_groups"> | number
  brand_id?: Prisma.IntNullableFilter<"option_groups"> | number | null
  sub_brand_id?: Prisma.IntNullableFilter<"option_groups"> | number | null
  category_id?: Prisma.IntNullableFilter<"option_groups"> | number | null
  name?: Prisma.StringFilter<"option_groups"> | string
  pos_uuid?: Prisma.StringNullableFilter<"option_groups"> | string | null
  deleted_at?: Prisma.DateTimeNullableFilter<"option_groups"> | Date | string | null
}

export type option_groupsCreateWithoutCategoriesInput = {
  name: string
  pos_uuid?: string | null
  deleted_at?: Date | string | null
  item_item_product_sales?: Prisma.item_item_product_salesCreateNestedManyWithoutOption_groupsInput
  item_product_sales?: Prisma.item_product_salesCreateNestedManyWithoutOption_groupsInput
  brands?: Prisma.brandsCreateNestedOneWithoutOption_groupsInput
  sub_brands?: Prisma.sub_brandsCreateNestedOneWithoutOption_groupsInput
}

export type option_groupsUncheckedCreateWithoutCategoriesInput = {
  id?: number
  brand_id?: number | null
  sub_brand_id?: number | null
  name: string
  pos_uuid?: string | null
  deleted_at?: Date | string | null
  item_item_product_sales?: Prisma.item_item_product_salesUncheckedCreateNestedManyWithoutOption_groupsInput
  item_product_sales?: Prisma.item_product_salesUncheckedCreateNestedManyWithoutOption_groupsInput
}

export type option_groupsCreateOrConnectWithoutCategoriesInput = {
  where: Prisma.option_groupsWhereUniqueInput
  create: Prisma.XOR<Prisma.option_groupsCreateWithoutCategoriesInput, Prisma.option_groupsUncheckedCreateWithoutCategoriesInput>
}

export type option_groupsCreateManyCategoriesInputEnvelope = {
  data: Prisma.option_groupsCreateManyCategoriesInput | Prisma.option_groupsCreateManyCategoriesInput[]
  skipDuplicates?: boolean
}

export type option_groupsUpsertWithWhereUniqueWithoutCategoriesInput = {
  where: Prisma.option_groupsWhereUniqueInput
  update: Prisma.XOR<Prisma.option_groupsUpdateWithoutCategoriesInput, Prisma.option_groupsUncheckedUpdateWithoutCategoriesInput>
  create: Prisma.XOR<Prisma.option_groupsCreateWithoutCategoriesInput, Prisma.option_groupsUncheckedCreateWithoutCategoriesInput>
}

export type option_groupsUpdateWithWhereUniqueWithoutCategoriesInput = {
  where: Prisma.option_groupsWhereUniqueInput
  data: Prisma.XOR<Prisma.option_groupsUpdateWithoutCategoriesInput, Prisma.option_groupsUncheckedUpdateWithoutCategoriesInput>
}

export type option_groupsUpdateManyWithWhereWithoutCategoriesInput = {
  where: Prisma.option_groupsScalarWhereInput
  data: Prisma.XOR<Prisma.option_groupsUpdateManyMutationInput, Prisma.option_groupsUncheckedUpdateManyWithoutCategoriesInput>
}

export type option_groupsCreateWithoutItem_item_product_salesInput = {
  name: string
  pos_uuid?: string | null
  deleted_at?: Date | string | null
  item_product_sales?: Prisma.item_product_salesCreateNestedManyWithoutOption_groupsInput
  brands?: Prisma.brandsCreateNestedOneWithoutOption_groupsInput
  categories?: Prisma.categoriesCreateNestedOneWithoutOption_groupsInput
  sub_brands?: Prisma.sub_brandsCreateNestedOneWithoutOption_groupsInput
}

export type option_groupsUncheckedCreateWithoutItem_item_product_salesInput = {
  id?: number
  brand_id?: number | null
  sub_brand_id?: number | null
  category_id?: number | null
  name: string
  pos_uuid?: string | null
  deleted_at?: Date | string | null
  item_product_sales?: Prisma.item_product_salesUncheckedCreateNestedManyWithoutOption_groupsInput
}

export type option_groupsCreateOrConnectWithoutItem_item_product_salesInput = {
  where: Prisma.option_groupsWhereUniqueInput
  create: Prisma.XOR<Prisma.option_groupsCreateWithoutItem_item_product_salesInput, Prisma.option_groupsUncheckedCreateWithoutItem_item_product_salesInput>
}

export type option_groupsUpsertWithoutItem_item_product_salesInput = {
  update: Prisma.XOR<Prisma.option_groupsUpdateWithoutItem_item_product_salesInput, Prisma.option_groupsUncheckedUpdateWithoutItem_item_product_salesInput>
  create: Prisma.XOR<Prisma.option_groupsCreateWithoutItem_item_product_salesInput, Prisma.option_groupsUncheckedCreateWithoutItem_item_product_salesInput>
  where?: Prisma.option_groupsWhereInput
}

export type option_groupsUpdateToOneWithWhereWithoutItem_item_product_salesInput = {
  where?: Prisma.option_groupsWhereInput
  data: Prisma.XOR<Prisma.option_groupsUpdateWithoutItem_item_product_salesInput, Prisma.option_groupsUncheckedUpdateWithoutItem_item_product_salesInput>
}

export type option_groupsUpdateWithoutItem_item_product_salesInput = {
  name?: Prisma.StringFieldUpdateOperationsInput | string
  pos_uuid?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  deleted_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  item_product_sales?: Prisma.item_product_salesUpdateManyWithoutOption_groupsNestedInput
  brands?: Prisma.brandsUpdateOneWithoutOption_groupsNestedInput
  categories?: Prisma.categoriesUpdateOneWithoutOption_groupsNestedInput
  sub_brands?: Prisma.sub_brandsUpdateOneWithoutOption_groupsNestedInput
}

export type option_groupsUncheckedUpdateWithoutItem_item_product_salesInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  brand_id?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  sub_brand_id?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  category_id?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  name?: Prisma.StringFieldUpdateOperationsInput | string
  pos_uuid?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  deleted_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  item_product_sales?: Prisma.item_product_salesUncheckedUpdateManyWithoutOption_groupsNestedInput
}

export type option_groupsCreateWithoutItem_product_salesInput = {
  name: string
  pos_uuid?: string | null
  deleted_at?: Date | string | null
  item_item_product_sales?: Prisma.item_item_product_salesCreateNestedManyWithoutOption_groupsInput
  brands?: Prisma.brandsCreateNestedOneWithoutOption_groupsInput
  categories?: Prisma.categoriesCreateNestedOneWithoutOption_groupsInput
  sub_brands?: Prisma.sub_brandsCreateNestedOneWithoutOption_groupsInput
}

export type option_groupsUncheckedCreateWithoutItem_product_salesInput = {
  id?: number
  brand_id?: number | null
  sub_brand_id?: number | null
  category_id?: number | null
  name: string
  pos_uuid?: string | null
  deleted_at?: Date | string | null
  item_item_product_sales?: Prisma.item_item_product_salesUncheckedCreateNestedManyWithoutOption_groupsInput
}

export type option_groupsCreateOrConnectWithoutItem_product_salesInput = {
  where: Prisma.option_groupsWhereUniqueInput
  create: Prisma.XOR<Prisma.option_groupsCreateWithoutItem_product_salesInput, Prisma.option_groupsUncheckedCreateWithoutItem_product_salesInput>
}

export type option_groupsUpsertWithoutItem_product_salesInput = {
  update: Prisma.XOR<Prisma.option_groupsUpdateWithoutItem_product_salesInput, Prisma.option_groupsUncheckedUpdateWithoutItem_product_salesInput>
  create: Prisma.XOR<Prisma.option_groupsCreateWithoutItem_product_salesInput, Prisma.option_groupsUncheckedCreateWithoutItem_product_salesInput>
  where?: Prisma.option_groupsWhereInput
}

export type option_groupsUpdateToOneWithWhereWithoutItem_product_salesInput = {
  where?: Prisma.option_groupsWhereInput
  data: Prisma.XOR<Prisma.option_groupsUpdateWithoutItem_product_salesInput, Prisma.option_groupsUncheckedUpdateWithoutItem_product_salesInput>
}

export type option_groupsUpdateWithoutItem_product_salesInput = {
  name?: Prisma.StringFieldUpdateOperationsInput | string
  pos_uuid?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  deleted_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  item_item_product_sales?: Prisma.item_item_product_salesUpdateManyWithoutOption_groupsNestedInput
  brands?: Prisma.brandsUpdateOneWithoutOption_groupsNestedInput
  categories?: Prisma.categoriesUpdateOneWithoutOption_groupsNestedInput
  sub_brands?: Prisma.sub_brandsUpdateOneWithoutOption_groupsNestedInput
}

export type option_groupsUncheckedUpdateWithoutItem_product_salesInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  brand_id?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  sub_brand_id?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  category_id?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  name?: Prisma.StringFieldUpdateOperationsInput | string
  pos_uuid?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  deleted_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  item_item_product_sales?: Prisma.item_item_product_salesUncheckedUpdateManyWithoutOption_groupsNestedInput
}

export type option_groupsCreateWithoutSub_brandsInput = {
  name: string
  pos_uuid?: string | null
  deleted_at?: Date | string | null
  item_item_product_sales?: Prisma.item_item_product_salesCreateNestedManyWithoutOption_groupsInput
  item_product_sales?: Prisma.item_product_salesCreateNestedManyWithoutOption_groupsInput
  brands?: Prisma.brandsCreateNestedOneWithoutOption_groupsInput
  categories?: Prisma.categoriesCreateNestedOneWithoutOption_groupsInput
}

export type option_groupsUncheckedCreateWithoutSub_brandsInput = {
  id?: number
  brand_id?: number | null
  category_id?: number | null
  name: string
  pos_uuid?: string | null
  deleted_at?: Date | string | null
  item_item_product_sales?: Prisma.item_item_product_salesUncheckedCreateNestedManyWithoutOption_groupsInput
  item_product_sales?: Prisma.item_product_salesUncheckedCreateNestedManyWithoutOption_groupsInput
}

export type option_groupsCreateOrConnectWithoutSub_brandsInput = {
  where: Prisma.option_groupsWhereUniqueInput
  create: Prisma.XOR<Prisma.option_groupsCreateWithoutSub_brandsInput, Prisma.option_groupsUncheckedCreateWithoutSub_brandsInput>
}

export type option_groupsCreateManySub_brandsInputEnvelope = {
  data: Prisma.option_groupsCreateManySub_brandsInput | Prisma.option_groupsCreateManySub_brandsInput[]
  skipDuplicates?: boolean
}

export type option_groupsUpsertWithWhereUniqueWithoutSub_brandsInput = {
  where: Prisma.option_groupsWhereUniqueInput
  update: Prisma.XOR<Prisma.option_groupsUpdateWithoutSub_brandsInput, Prisma.option_groupsUncheckedUpdateWithoutSub_brandsInput>
  create: Prisma.XOR<Prisma.option_groupsCreateWithoutSub_brandsInput, Prisma.option_groupsUncheckedCreateWithoutSub_brandsInput>
}

export type option_groupsUpdateWithWhereUniqueWithoutSub_brandsInput = {
  where: Prisma.option_groupsWhereUniqueInput
  data: Prisma.XOR<Prisma.option_groupsUpdateWithoutSub_brandsInput, Prisma.option_groupsUncheckedUpdateWithoutSub_brandsInput>
}

export type option_groupsUpdateManyWithWhereWithoutSub_brandsInput = {
  where: Prisma.option_groupsScalarWhereInput
  data: Prisma.XOR<Prisma.option_groupsUpdateManyMutationInput, Prisma.option_groupsUncheckedUpdateManyWithoutSub_brandsInput>
}

export type option_groupsCreateManyBrandsInput = {
  id?: number
  sub_brand_id?: number | null
  category_id?: number | null
  name: string
  pos_uuid?: string | null
  deleted_at?: Date | string | null
}

export type option_groupsUpdateWithoutBrandsInput = {
  name?: Prisma.StringFieldUpdateOperationsInput | string
  pos_uuid?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  deleted_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  item_item_product_sales?: Prisma.item_item_product_salesUpdateManyWithoutOption_groupsNestedInput
  item_product_sales?: Prisma.item_product_salesUpdateManyWithoutOption_groupsNestedInput
  categories?: Prisma.categoriesUpdateOneWithoutOption_groupsNestedInput
  sub_brands?: Prisma.sub_brandsUpdateOneWithoutOption_groupsNestedInput
}

export type option_groupsUncheckedUpdateWithoutBrandsInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  sub_brand_id?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  category_id?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  name?: Prisma.StringFieldUpdateOperationsInput | string
  pos_uuid?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  deleted_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  item_item_product_sales?: Prisma.item_item_product_salesUncheckedUpdateManyWithoutOption_groupsNestedInput
  item_product_sales?: Prisma.item_product_salesUncheckedUpdateManyWithoutOption_groupsNestedInput
}

export type option_groupsUncheckedUpdateManyWithoutBrandsInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  sub_brand_id?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  category_id?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  name?: Prisma.StringFieldUpdateOperationsInput | string
  pos_uuid?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  deleted_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
}

export type option_groupsCreateManyCategoriesInput = {
  id?: number
  brand_id?: number | null
  sub_brand_id?: number | null
  name: string
  pos_uuid?: string | null
  deleted_at?: Date | string | null
}

export type option_groupsUpdateWithoutCategoriesInput = {
  name?: Prisma.StringFieldUpdateOperationsInput | string
  pos_uuid?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  deleted_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  item_item_product_sales?: Prisma.item_item_product_salesUpdateManyWithoutOption_groupsNestedInput
  item_product_sales?: Prisma.item_product_salesUpdateManyWithoutOption_groupsNestedInput
  brands?: Prisma.brandsUpdateOneWithoutOption_groupsNestedInput
  sub_brands?: Prisma.sub_brandsUpdateOneWithoutOption_groupsNestedInput
}

export type option_groupsUncheckedUpdateWithoutCategoriesInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  brand_id?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  sub_brand_id?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  name?: Prisma.StringFieldUpdateOperationsInput | string
  pos_uuid?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  deleted_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  item_item_product_sales?: Prisma.item_item_product_salesUncheckedUpdateManyWithoutOption_groupsNestedInput
  item_product_sales?: Prisma.item_product_salesUncheckedUpdateManyWithoutOption_groupsNestedInput
}

export type option_groupsUncheckedUpdateManyWithoutCategoriesInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  brand_id?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  sub_brand_id?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  name?: Prisma.StringFieldUpdateOperationsInput | string
  pos_uuid?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  deleted_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
}

export type option_groupsCreateManySub_brandsInput = {
  id?: number
  brand_id?: number | null
  category_id?: number | null
  name: string
  pos_uuid?: string | null
  deleted_at?: Date | string | null
}

export type option_groupsUpdateWithoutSub_brandsInput = {
  name?: Prisma.StringFieldUpdateOperationsInput | string
  pos_uuid?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  deleted_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  item_item_product_sales?: Prisma.item_item_product_salesUpdateManyWithoutOption_groupsNestedInput
  item_product_sales?: Prisma.item_product_salesUpdateManyWithoutOption_groupsNestedInput
  brands?: Prisma.brandsUpdateOneWithoutOption_groupsNestedInput
  categories?: Prisma.categoriesUpdateOneWithoutOption_groupsNestedInput
}

export type option_groupsUncheckedUpdateWithoutSub_brandsInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  brand_id?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  category_id?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  name?: Prisma.StringFieldUpdateOperationsInput | string
  pos_uuid?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  deleted_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  item_item_product_sales?: Prisma.item_item_product_salesUncheckedUpdateManyWithoutOption_groupsNestedInput
  item_product_sales?: Prisma.item_product_salesUncheckedUpdateManyWithoutOption_groupsNestedInput
}

export type option_groupsUncheckedUpdateManyWithoutSub_brandsInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  brand_id?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  category_id?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  name?: Prisma.StringFieldUpdateOperationsInput | string
  pos_uuid?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  deleted_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
}


/**
 * Count Type Option_groupsCountOutputType
 */

export type Option_groupsCountOutputType = {
  item_item_product_sales: number
  item_product_sales: number
}

export type Option_groupsCountOutputTypeSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  item_item_product_sales?: boolean | Option_groupsCountOutputTypeCountItem_item_product_salesArgs
  item_product_sales?: boolean | Option_groupsCountOutputTypeCountItem_product_salesArgs
}

/**
 * Option_groupsCountOutputType without action
 */
export type Option_groupsCountOutputTypeDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Option_groupsCountOutputType
   */
  select?: Prisma.Option_groupsCountOutputTypeSelect<ExtArgs> | null
}

/**
 * Option_groupsCountOutputType without action
 */
export type Option_groupsCountOutputTypeCountItem_item_product_salesArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.item_item_product_salesWhereInput
}

/**
 * Option_groupsCountOutputType without action
 */
export type Option_groupsCountOutputTypeCountItem_product_salesArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.item_product_salesWhereInput
}


export type option_groupsSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  brand_id?: boolean
  sub_brand_id?: boolean
  category_id?: boolean
  name?: boolean
  pos_uuid?: boolean
  deleted_at?: boolean
  item_item_product_sales?: boolean | Prisma.option_groups$item_item_product_salesArgs<ExtArgs>
  item_product_sales?: boolean | Prisma.option_groups$item_product_salesArgs<ExtArgs>
  brands?: boolean | Prisma.option_groups$brandsArgs<ExtArgs>
  categories?: boolean | Prisma.option_groups$categoriesArgs<ExtArgs>
  sub_brands?: boolean | Prisma.option_groups$sub_brandsArgs<ExtArgs>
  _count?: boolean | Prisma.Option_groupsCountOutputTypeDefaultArgs<ExtArgs>
}, ExtArgs["result"]["option_groups"]>

export type option_groupsSelectCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  brand_id?: boolean
  sub_brand_id?: boolean
  category_id?: boolean
  name?: boolean
  pos_uuid?: boolean
  deleted_at?: boolean
  brands?: boolean | Prisma.option_groups$brandsArgs<ExtArgs>
  categories?: boolean | Prisma.option_groups$categoriesArgs<ExtArgs>
  sub_brands?: boolean | Prisma.option_groups$sub_brandsArgs<ExtArgs>
}, ExtArgs["result"]["option_groups"]>

export type option_groupsSelectUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  brand_id?: boolean
  sub_brand_id?: boolean
  category_id?: boolean
  name?: boolean
  pos_uuid?: boolean
  deleted_at?: boolean
  brands?: boolean | Prisma.option_groups$brandsArgs<ExtArgs>
  categories?: boolean | Prisma.option_groups$categoriesArgs<ExtArgs>
  sub_brands?: boolean | Prisma.option_groups$sub_brandsArgs<ExtArgs>
}, ExtArgs["result"]["option_groups"]>

export type option_groupsSelectScalar = {
  id?: boolean
  brand_id?: boolean
  sub_brand_id?: boolean
  category_id?: boolean
  name?: boolean
  pos_uuid?: boolean
  deleted_at?: boolean
}

export type option_groupsOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"id" | "brand_id" | "sub_brand_id" | "category_id" | "name" | "pos_uuid" | "deleted_at", ExtArgs["result"]["option_groups"]>
export type option_groupsInclude<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  item_item_product_sales?: boolean | Prisma.option_groups$item_item_product_salesArgs<ExtArgs>
  item_product_sales?: boolean | Prisma.option_groups$item_product_salesArgs<ExtArgs>
  brands?: boolean | Prisma.option_groups$brandsArgs<ExtArgs>
  categories?: boolean | Prisma.option_groups$categoriesArgs<ExtArgs>
  sub_brands?: boolean | Prisma.option_groups$sub_brandsArgs<ExtArgs>
  _count?: boolean | Prisma.Option_groupsCountOutputTypeDefaultArgs<ExtArgs>
}
export type option_groupsIncludeCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  brands?: boolean | Prisma.option_groups$brandsArgs<ExtArgs>
  categories?: boolean | Prisma.option_groups$categoriesArgs<ExtArgs>
  sub_brands?: boolean | Prisma.option_groups$sub_brandsArgs<ExtArgs>
}
export type option_groupsIncludeUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  brands?: boolean | Prisma.option_groups$brandsArgs<ExtArgs>
  categories?: boolean | Prisma.option_groups$categoriesArgs<ExtArgs>
  sub_brands?: boolean | Prisma.option_groups$sub_brandsArgs<ExtArgs>
}

export type $option_groupsPayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "option_groups"
  objects: {
    item_item_product_sales: Prisma.$item_item_product_salesPayload<ExtArgs>[]
    item_product_sales: Prisma.$item_product_salesPayload<ExtArgs>[]
    brands: Prisma.$brandsPayload<ExtArgs> | null
    categories: Prisma.$categoriesPayload<ExtArgs> | null
    sub_brands: Prisma.$sub_brandsPayload<ExtArgs> | null
  }
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    id: number
    brand_id: number | null
    sub_brand_id: number | null
    category_id: number | null
    name: string
    pos_uuid: string | null
    deleted_at: Date | null
  }, ExtArgs["result"]["option_groups"]>
  composites: {}
}

export type option_groupsGetPayload<S extends boolean | null | undefined | option_groupsDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$option_groupsPayload, S>

export type option_groupsCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<option_groupsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
    select?: Option_groupsCountAggregateInputType | true
  }

export interface option_groupsDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['option_groups'], meta: { name: 'option_groups' } }
  /**
   * Find zero or one Option_groups that matches the filter.
   * @param {option_groupsFindUniqueArgs} args - Arguments to find a Option_groups
   * @example
   * // Get one Option_groups
   * const option_groups = await prisma.option_groups.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends option_groupsFindUniqueArgs>(args: Prisma.SelectSubset<T, option_groupsFindUniqueArgs<ExtArgs>>): Prisma.Prisma__option_groupsClient<runtime.Types.Result.GetResult<Prisma.$option_groupsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one Option_groups that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {option_groupsFindUniqueOrThrowArgs} args - Arguments to find a Option_groups
   * @example
   * // Get one Option_groups
   * const option_groups = await prisma.option_groups.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends option_groupsFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, option_groupsFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__option_groupsClient<runtime.Types.Result.GetResult<Prisma.$option_groupsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Option_groups that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {option_groupsFindFirstArgs} args - Arguments to find a Option_groups
   * @example
   * // Get one Option_groups
   * const option_groups = await prisma.option_groups.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends option_groupsFindFirstArgs>(args?: Prisma.SelectSubset<T, option_groupsFindFirstArgs<ExtArgs>>): Prisma.Prisma__option_groupsClient<runtime.Types.Result.GetResult<Prisma.$option_groupsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Option_groups that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {option_groupsFindFirstOrThrowArgs} args - Arguments to find a Option_groups
   * @example
   * // Get one Option_groups
   * const option_groups = await prisma.option_groups.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends option_groupsFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, option_groupsFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__option_groupsClient<runtime.Types.Result.GetResult<Prisma.$option_groupsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more Option_groups that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {option_groupsFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Option_groups
   * const option_groups = await prisma.option_groups.findMany()
   * 
   * // Get first 10 Option_groups
   * const option_groups = await prisma.option_groups.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const option_groupsWithIdOnly = await prisma.option_groups.findMany({ select: { id: true } })
   * 
   */
  findMany<T extends option_groupsFindManyArgs>(args?: Prisma.SelectSubset<T, option_groupsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$option_groupsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a Option_groups.
   * @param {option_groupsCreateArgs} args - Arguments to create a Option_groups.
   * @example
   * // Create one Option_groups
   * const Option_groups = await prisma.option_groups.create({
   *   data: {
   *     // ... data to create a Option_groups
   *   }
   * })
   * 
   */
  create<T extends option_groupsCreateArgs>(args: Prisma.SelectSubset<T, option_groupsCreateArgs<ExtArgs>>): Prisma.Prisma__option_groupsClient<runtime.Types.Result.GetResult<Prisma.$option_groupsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many Option_groups.
   * @param {option_groupsCreateManyArgs} args - Arguments to create many Option_groups.
   * @example
   * // Create many Option_groups
   * const option_groups = await prisma.option_groups.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends option_groupsCreateManyArgs>(args?: Prisma.SelectSubset<T, option_groupsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create many Option_groups and returns the data saved in the database.
   * @param {option_groupsCreateManyAndReturnArgs} args - Arguments to create many Option_groups.
   * @example
   * // Create many Option_groups
   * const option_groups = await prisma.option_groups.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Create many Option_groups and only return the `id`
   * const option_groupsWithIdOnly = await prisma.option_groups.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  createManyAndReturn<T extends option_groupsCreateManyAndReturnArgs>(args?: Prisma.SelectSubset<T, option_groupsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$option_groupsPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

  /**
   * Delete a Option_groups.
   * @param {option_groupsDeleteArgs} args - Arguments to delete one Option_groups.
   * @example
   * // Delete one Option_groups
   * const Option_groups = await prisma.option_groups.delete({
   *   where: {
   *     // ... filter to delete one Option_groups
   *   }
   * })
   * 
   */
  delete<T extends option_groupsDeleteArgs>(args: Prisma.SelectSubset<T, option_groupsDeleteArgs<ExtArgs>>): Prisma.Prisma__option_groupsClient<runtime.Types.Result.GetResult<Prisma.$option_groupsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one Option_groups.
   * @param {option_groupsUpdateArgs} args - Arguments to update one Option_groups.
   * @example
   * // Update one Option_groups
   * const option_groups = await prisma.option_groups.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends option_groupsUpdateArgs>(args: Prisma.SelectSubset<T, option_groupsUpdateArgs<ExtArgs>>): Prisma.Prisma__option_groupsClient<runtime.Types.Result.GetResult<Prisma.$option_groupsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more Option_groups.
   * @param {option_groupsDeleteManyArgs} args - Arguments to filter Option_groups to delete.
   * @example
   * // Delete a few Option_groups
   * const { count } = await prisma.option_groups.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends option_groupsDeleteManyArgs>(args?: Prisma.SelectSubset<T, option_groupsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Option_groups.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {option_groupsUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Option_groups
   * const option_groups = await prisma.option_groups.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends option_groupsUpdateManyArgs>(args: Prisma.SelectSubset<T, option_groupsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Option_groups and returns the data updated in the database.
   * @param {option_groupsUpdateManyAndReturnArgs} args - Arguments to update many Option_groups.
   * @example
   * // Update many Option_groups
   * const option_groups = await prisma.option_groups.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Update zero or more Option_groups and only return the `id`
   * const option_groupsWithIdOnly = await prisma.option_groups.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  updateManyAndReturn<T extends option_groupsUpdateManyAndReturnArgs>(args: Prisma.SelectSubset<T, option_groupsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$option_groupsPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

  /**
   * Create or update one Option_groups.
   * @param {option_groupsUpsertArgs} args - Arguments to update or create a Option_groups.
   * @example
   * // Update or create a Option_groups
   * const option_groups = await prisma.option_groups.upsert({
   *   create: {
   *     // ... data to create a Option_groups
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the Option_groups we want to update
   *   }
   * })
   */
  upsert<T extends option_groupsUpsertArgs>(args: Prisma.SelectSubset<T, option_groupsUpsertArgs<ExtArgs>>): Prisma.Prisma__option_groupsClient<runtime.Types.Result.GetResult<Prisma.$option_groupsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


  /**
   * Count the number of Option_groups.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {option_groupsCountArgs} args - Arguments to filter Option_groups to count.
   * @example
   * // Count the number of Option_groups
   * const count = await prisma.option_groups.count({
   *   where: {
   *     // ... the filter for the Option_groups we want to count
   *   }
   * })
  **/
  count<T extends option_groupsCountArgs>(
    args?: Prisma.Subset<T, option_groupsCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], Option_groupsCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a Option_groups.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {Option_groupsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends Option_groupsAggregateArgs>(args: Prisma.Subset<T, Option_groupsAggregateArgs>): Prisma.PrismaPromise<GetOption_groupsAggregateType<T>>

  /**
   * Group by Option_groups.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {option_groupsGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends option_groupsGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: option_groupsGroupByArgs['orderBy'] }
      : { orderBy?: option_groupsGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, option_groupsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetOption_groupsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the option_groups model
 */
readonly fields: option_groupsFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for option_groups.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__option_groupsClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  item_item_product_sales<T extends Prisma.option_groups$item_item_product_salesArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.option_groups$item_item_product_salesArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$item_item_product_salesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  item_product_sales<T extends Prisma.option_groups$item_product_salesArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.option_groups$item_product_salesArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$item_product_salesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  brands<T extends Prisma.option_groups$brandsArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.option_groups$brandsArgs<ExtArgs>>): Prisma.Prisma__brandsClient<runtime.Types.Result.GetResult<Prisma.$brandsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
  categories<T extends Prisma.option_groups$categoriesArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.option_groups$categoriesArgs<ExtArgs>>): Prisma.Prisma__categoriesClient<runtime.Types.Result.GetResult<Prisma.$categoriesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
  sub_brands<T extends Prisma.option_groups$sub_brandsArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.option_groups$sub_brandsArgs<ExtArgs>>): Prisma.Prisma__sub_brandsClient<runtime.Types.Result.GetResult<Prisma.$sub_brandsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the option_groups model
 */
export interface option_groupsFieldRefs {
  readonly id: Prisma.FieldRef<"option_groups", 'Int'>
  readonly brand_id: Prisma.FieldRef<"option_groups", 'Int'>
  readonly sub_brand_id: Prisma.FieldRef<"option_groups", 'Int'>
  readonly category_id: Prisma.FieldRef<"option_groups", 'Int'>
  readonly name: Prisma.FieldRef<"option_groups", 'String'>
  readonly pos_uuid: Prisma.FieldRef<"option_groups", 'String'>
  readonly deleted_at: Prisma.FieldRef<"option_groups", 'DateTime'>
}
    

// Custom InputTypes
/**
 * option_groups findUnique
 */
export type option_groupsFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the option_groups
   */
  select?: Prisma.option_groupsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the option_groups
   */
  omit?: Prisma.option_groupsOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.option_groupsInclude<ExtArgs> | null
  /**
   * Filter, which option_groups to fetch.
   */
  where: Prisma.option_groupsWhereUniqueInput
}

/**
 * option_groups findUniqueOrThrow
 */
export type option_groupsFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the option_groups
   */
  select?: Prisma.option_groupsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the option_groups
   */
  omit?: Prisma.option_groupsOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.option_groupsInclude<ExtArgs> | null
  /**
   * Filter, which option_groups to fetch.
   */
  where: Prisma.option_groupsWhereUniqueInput
}

/**
 * option_groups findFirst
 */
export type option_groupsFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the option_groups
   */
  select?: Prisma.option_groupsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the option_groups
   */
  omit?: Prisma.option_groupsOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.option_groupsInclude<ExtArgs> | null
  /**
   * Filter, which option_groups to fetch.
   */
  where?: Prisma.option_groupsWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of option_groups to fetch.
   */
  orderBy?: Prisma.option_groupsOrderByWithRelationInput | Prisma.option_groupsOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for option_groups.
   */
  cursor?: Prisma.option_groupsWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` option_groups from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` option_groups.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of option_groups.
   */
  distinct?: Prisma.Option_groupsScalarFieldEnum | Prisma.Option_groupsScalarFieldEnum[]
}

/**
 * option_groups findFirstOrThrow
 */
export type option_groupsFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the option_groups
   */
  select?: Prisma.option_groupsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the option_groups
   */
  omit?: Prisma.option_groupsOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.option_groupsInclude<ExtArgs> | null
  /**
   * Filter, which option_groups to fetch.
   */
  where?: Prisma.option_groupsWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of option_groups to fetch.
   */
  orderBy?: Prisma.option_groupsOrderByWithRelationInput | Prisma.option_groupsOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for option_groups.
   */
  cursor?: Prisma.option_groupsWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` option_groups from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` option_groups.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of option_groups.
   */
  distinct?: Prisma.Option_groupsScalarFieldEnum | Prisma.Option_groupsScalarFieldEnum[]
}

/**
 * option_groups findMany
 */
export type option_groupsFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the option_groups
   */
  select?: Prisma.option_groupsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the option_groups
   */
  omit?: Prisma.option_groupsOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.option_groupsInclude<ExtArgs> | null
  /**
   * Filter, which option_groups to fetch.
   */
  where?: Prisma.option_groupsWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of option_groups to fetch.
   */
  orderBy?: Prisma.option_groupsOrderByWithRelationInput | Prisma.option_groupsOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing option_groups.
   */
  cursor?: Prisma.option_groupsWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` option_groups from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` option_groups.
   */
  skip?: number
  distinct?: Prisma.Option_groupsScalarFieldEnum | Prisma.Option_groupsScalarFieldEnum[]
}

/**
 * option_groups create
 */
export type option_groupsCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the option_groups
   */
  select?: Prisma.option_groupsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the option_groups
   */
  omit?: Prisma.option_groupsOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.option_groupsInclude<ExtArgs> | null
  /**
   * The data needed to create a option_groups.
   */
  data: Prisma.XOR<Prisma.option_groupsCreateInput, Prisma.option_groupsUncheckedCreateInput>
}

/**
 * option_groups createMany
 */
export type option_groupsCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many option_groups.
   */
  data: Prisma.option_groupsCreateManyInput | Prisma.option_groupsCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * option_groups createManyAndReturn
 */
export type option_groupsCreateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the option_groups
   */
  select?: Prisma.option_groupsSelectCreateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the option_groups
   */
  omit?: Prisma.option_groupsOmit<ExtArgs> | null
  /**
   * The data used to create many option_groups.
   */
  data: Prisma.option_groupsCreateManyInput | Prisma.option_groupsCreateManyInput[]
  skipDuplicates?: boolean
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.option_groupsIncludeCreateManyAndReturn<ExtArgs> | null
}

/**
 * option_groups update
 */
export type option_groupsUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the option_groups
   */
  select?: Prisma.option_groupsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the option_groups
   */
  omit?: Prisma.option_groupsOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.option_groupsInclude<ExtArgs> | null
  /**
   * The data needed to update a option_groups.
   */
  data: Prisma.XOR<Prisma.option_groupsUpdateInput, Prisma.option_groupsUncheckedUpdateInput>
  /**
   * Choose, which option_groups to update.
   */
  where: Prisma.option_groupsWhereUniqueInput
}

/**
 * option_groups updateMany
 */
export type option_groupsUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update option_groups.
   */
  data: Prisma.XOR<Prisma.option_groupsUpdateManyMutationInput, Prisma.option_groupsUncheckedUpdateManyInput>
  /**
   * Filter which option_groups to update
   */
  where?: Prisma.option_groupsWhereInput
  /**
   * Limit how many option_groups to update.
   */
  limit?: number
}

/**
 * option_groups updateManyAndReturn
 */
export type option_groupsUpdateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the option_groups
   */
  select?: Prisma.option_groupsSelectUpdateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the option_groups
   */
  omit?: Prisma.option_groupsOmit<ExtArgs> | null
  /**
   * The data used to update option_groups.
   */
  data: Prisma.XOR<Prisma.option_groupsUpdateManyMutationInput, Prisma.option_groupsUncheckedUpdateManyInput>
  /**
   * Filter which option_groups to update
   */
  where?: Prisma.option_groupsWhereInput
  /**
   * Limit how many option_groups to update.
   */
  limit?: number
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.option_groupsIncludeUpdateManyAndReturn<ExtArgs> | null
}

/**
 * option_groups upsert
 */
export type option_groupsUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the option_groups
   */
  select?: Prisma.option_groupsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the option_groups
   */
  omit?: Prisma.option_groupsOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.option_groupsInclude<ExtArgs> | null
  /**
   * The filter to search for the option_groups to update in case it exists.
   */
  where: Prisma.option_groupsWhereUniqueInput
  /**
   * In case the option_groups found by the `where` argument doesn't exist, create a new option_groups with this data.
   */
  create: Prisma.XOR<Prisma.option_groupsCreateInput, Prisma.option_groupsUncheckedCreateInput>
  /**
   * In case the option_groups was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.option_groupsUpdateInput, Prisma.option_groupsUncheckedUpdateInput>
}

/**
 * option_groups delete
 */
export type option_groupsDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the option_groups
   */
  select?: Prisma.option_groupsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the option_groups
   */
  omit?: Prisma.option_groupsOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.option_groupsInclude<ExtArgs> | null
  /**
   * Filter which option_groups to delete.
   */
  where: Prisma.option_groupsWhereUniqueInput
}

/**
 * option_groups deleteMany
 */
export type option_groupsDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which option_groups to delete
   */
  where?: Prisma.option_groupsWhereInput
  /**
   * Limit how many option_groups to delete.
   */
  limit?: number
}

/**
 * option_groups.item_item_product_sales
 */
export type option_groups$item_item_product_salesArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the item_item_product_sales
   */
  select?: Prisma.item_item_product_salesSelect<ExtArgs> | null
  /**
   * Omit specific fields from the item_item_product_sales
   */
  omit?: Prisma.item_item_product_salesOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.item_item_product_salesInclude<ExtArgs> | null
  where?: Prisma.item_item_product_salesWhereInput
  orderBy?: Prisma.item_item_product_salesOrderByWithRelationInput | Prisma.item_item_product_salesOrderByWithRelationInput[]
  cursor?: Prisma.item_item_product_salesWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.Item_item_product_salesScalarFieldEnum | Prisma.Item_item_product_salesScalarFieldEnum[]
}

/**
 * option_groups.item_product_sales
 */
export type option_groups$item_product_salesArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the item_product_sales
   */
  select?: Prisma.item_product_salesSelect<ExtArgs> | null
  /**
   * Omit specific fields from the item_product_sales
   */
  omit?: Prisma.item_product_salesOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.item_product_salesInclude<ExtArgs> | null
  where?: Prisma.item_product_salesWhereInput
  orderBy?: Prisma.item_product_salesOrderByWithRelationInput | Prisma.item_product_salesOrderByWithRelationInput[]
  cursor?: Prisma.item_product_salesWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.Item_product_salesScalarFieldEnum | Prisma.Item_product_salesScalarFieldEnum[]
}

/**
 * option_groups.brands
 */
export type option_groups$brandsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the brands
   */
  select?: Prisma.brandsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the brands
   */
  omit?: Prisma.brandsOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.brandsInclude<ExtArgs> | null
  where?: Prisma.brandsWhereInput
}

/**
 * option_groups.categories
 */
export type option_groups$categoriesArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the categories
   */
  select?: Prisma.categoriesSelect<ExtArgs> | null
  /**
   * Omit specific fields from the categories
   */
  omit?: Prisma.categoriesOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.categoriesInclude<ExtArgs> | null
  where?: Prisma.categoriesWhereInput
}

/**
 * option_groups.sub_brands
 */
export type option_groups$sub_brandsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the sub_brands
   */
  select?: Prisma.sub_brandsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the sub_brands
   */
  omit?: Prisma.sub_brandsOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.sub_brandsInclude<ExtArgs> | null
  where?: Prisma.sub_brandsWhereInput
}

/**
 * option_groups without action
 */
export type option_groupsDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the option_groups
   */
  select?: Prisma.option_groupsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the option_groups
   */
  omit?: Prisma.option_groupsOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.option_groupsInclude<ExtArgs> | null
}
