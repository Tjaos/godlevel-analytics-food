
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/*
 * This file exports the `stores` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import type * as runtime from "@prisma/client/runtime/library"
import type * as $Enums from "../enums"
import type * as Prisma from "../internal/prismaNamespace"

/**
 * Model stores
 * 
 */
export type storesModel = runtime.Types.Result.DefaultSelection<Prisma.$storesPayload>

export type AggregateStores = {
  _count: StoresCountAggregateOutputType | null
  _avg: StoresAvgAggregateOutputType | null
  _sum: StoresSumAggregateOutputType | null
  _min: StoresMinAggregateOutputType | null
  _max: StoresMaxAggregateOutputType | null
}

export type StoresAvgAggregateOutputType = {
  id: number | null
  brand_id: number | null
  sub_brand_id: number | null
  address_number: number | null
  latitude: runtime.Decimal | null
  longitude: runtime.Decimal | null
}

export type StoresSumAggregateOutputType = {
  id: number | null
  brand_id: number | null
  sub_brand_id: number | null
  address_number: number | null
  latitude: runtime.Decimal | null
  longitude: runtime.Decimal | null
}

export type StoresMinAggregateOutputType = {
  id: number | null
  brand_id: number | null
  sub_brand_id: number | null
  name: string | null
  city: string | null
  state: string | null
  district: string | null
  address_street: string | null
  address_number: number | null
  zipcode: string | null
  latitude: runtime.Decimal | null
  longitude: runtime.Decimal | null
  is_active: boolean | null
  is_own: boolean | null
  is_holding: boolean | null
  creation_date: Date | null
  created_at: Date | null
}

export type StoresMaxAggregateOutputType = {
  id: number | null
  brand_id: number | null
  sub_brand_id: number | null
  name: string | null
  city: string | null
  state: string | null
  district: string | null
  address_street: string | null
  address_number: number | null
  zipcode: string | null
  latitude: runtime.Decimal | null
  longitude: runtime.Decimal | null
  is_active: boolean | null
  is_own: boolean | null
  is_holding: boolean | null
  creation_date: Date | null
  created_at: Date | null
}

export type StoresCountAggregateOutputType = {
  id: number
  brand_id: number
  sub_brand_id: number
  name: number
  city: number
  state: number
  district: number
  address_street: number
  address_number: number
  zipcode: number
  latitude: number
  longitude: number
  is_active: number
  is_own: number
  is_holding: number
  creation_date: number
  created_at: number
  _all: number
}


export type StoresAvgAggregateInputType = {
  id?: true
  brand_id?: true
  sub_brand_id?: true
  address_number?: true
  latitude?: true
  longitude?: true
}

export type StoresSumAggregateInputType = {
  id?: true
  brand_id?: true
  sub_brand_id?: true
  address_number?: true
  latitude?: true
  longitude?: true
}

export type StoresMinAggregateInputType = {
  id?: true
  brand_id?: true
  sub_brand_id?: true
  name?: true
  city?: true
  state?: true
  district?: true
  address_street?: true
  address_number?: true
  zipcode?: true
  latitude?: true
  longitude?: true
  is_active?: true
  is_own?: true
  is_holding?: true
  creation_date?: true
  created_at?: true
}

export type StoresMaxAggregateInputType = {
  id?: true
  brand_id?: true
  sub_brand_id?: true
  name?: true
  city?: true
  state?: true
  district?: true
  address_street?: true
  address_number?: true
  zipcode?: true
  latitude?: true
  longitude?: true
  is_active?: true
  is_own?: true
  is_holding?: true
  creation_date?: true
  created_at?: true
}

export type StoresCountAggregateInputType = {
  id?: true
  brand_id?: true
  sub_brand_id?: true
  name?: true
  city?: true
  state?: true
  district?: true
  address_street?: true
  address_number?: true
  zipcode?: true
  latitude?: true
  longitude?: true
  is_active?: true
  is_own?: true
  is_holding?: true
  creation_date?: true
  created_at?: true
  _all?: true
}

export type StoresAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which stores to aggregate.
   */
  where?: Prisma.storesWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of stores to fetch.
   */
  orderBy?: Prisma.storesOrderByWithRelationInput | Prisma.storesOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.storesWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` stores from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` stores.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned stores
  **/
  _count?: true | StoresCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to average
  **/
  _avg?: StoresAvgAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to sum
  **/
  _sum?: StoresSumAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: StoresMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: StoresMaxAggregateInputType
}

export type GetStoresAggregateType<T extends StoresAggregateArgs> = {
      [P in keyof T & keyof AggregateStores]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateStores[P]>
    : Prisma.GetScalarType<T[P], AggregateStores[P]>
}




export type storesGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.storesWhereInput
  orderBy?: Prisma.storesOrderByWithAggregationInput | Prisma.storesOrderByWithAggregationInput[]
  by: Prisma.StoresScalarFieldEnum[] | Prisma.StoresScalarFieldEnum
  having?: Prisma.storesScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: StoresCountAggregateInputType | true
  _avg?: StoresAvgAggregateInputType
  _sum?: StoresSumAggregateInputType
  _min?: StoresMinAggregateInputType
  _max?: StoresMaxAggregateInputType
}

export type StoresGroupByOutputType = {
  id: number
  brand_id: number | null
  sub_brand_id: number | null
  name: string
  city: string | null
  state: string | null
  district: string | null
  address_street: string | null
  address_number: number | null
  zipcode: string | null
  latitude: runtime.Decimal | null
  longitude: runtime.Decimal | null
  is_active: boolean | null
  is_own: boolean | null
  is_holding: boolean | null
  creation_date: Date | null
  created_at: Date | null
  _count: StoresCountAggregateOutputType | null
  _avg: StoresAvgAggregateOutputType | null
  _sum: StoresSumAggregateOutputType | null
  _min: StoresMinAggregateOutputType | null
  _max: StoresMaxAggregateOutputType | null
}

type GetStoresGroupByPayload<T extends storesGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<StoresGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof StoresGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], StoresGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], StoresGroupByOutputType[P]>
      }
    >
  >



export type storesWhereInput = {
  AND?: Prisma.storesWhereInput | Prisma.storesWhereInput[]
  OR?: Prisma.storesWhereInput[]
  NOT?: Prisma.storesWhereInput | Prisma.storesWhereInput[]
  id?: Prisma.IntFilter<"stores"> | number
  brand_id?: Prisma.IntNullableFilter<"stores"> | number | null
  sub_brand_id?: Prisma.IntNullableFilter<"stores"> | number | null
  name?: Prisma.StringFilter<"stores"> | string
  city?: Prisma.StringNullableFilter<"stores"> | string | null
  state?: Prisma.StringNullableFilter<"stores"> | string | null
  district?: Prisma.StringNullableFilter<"stores"> | string | null
  address_street?: Prisma.StringNullableFilter<"stores"> | string | null
  address_number?: Prisma.IntNullableFilter<"stores"> | number | null
  zipcode?: Prisma.StringNullableFilter<"stores"> | string | null
  latitude?: Prisma.DecimalNullableFilter<"stores"> | runtime.Decimal | runtime.DecimalJsLike | number | string | null
  longitude?: Prisma.DecimalNullableFilter<"stores"> | runtime.Decimal | runtime.DecimalJsLike | number | string | null
  is_active?: Prisma.BoolNullableFilter<"stores"> | boolean | null
  is_own?: Prisma.BoolNullableFilter<"stores"> | boolean | null
  is_holding?: Prisma.BoolNullableFilter<"stores"> | boolean | null
  creation_date?: Prisma.DateTimeNullableFilter<"stores"> | Date | string | null
  created_at?: Prisma.DateTimeNullableFilter<"stores"> | Date | string | null
  customers?: Prisma.CustomersListRelationFilter
  sales?: Prisma.SalesListRelationFilter
  brands?: Prisma.XOR<Prisma.BrandsNullableScalarRelationFilter, Prisma.brandsWhereInput> | null
  sub_brands?: Prisma.XOR<Prisma.Sub_brandsNullableScalarRelationFilter, Prisma.sub_brandsWhereInput> | null
}

export type storesOrderByWithRelationInput = {
  id?: Prisma.SortOrder
  brand_id?: Prisma.SortOrderInput | Prisma.SortOrder
  sub_brand_id?: Prisma.SortOrderInput | Prisma.SortOrder
  name?: Prisma.SortOrder
  city?: Prisma.SortOrderInput | Prisma.SortOrder
  state?: Prisma.SortOrderInput | Prisma.SortOrder
  district?: Prisma.SortOrderInput | Prisma.SortOrder
  address_street?: Prisma.SortOrderInput | Prisma.SortOrder
  address_number?: Prisma.SortOrderInput | Prisma.SortOrder
  zipcode?: Prisma.SortOrderInput | Prisma.SortOrder
  latitude?: Prisma.SortOrderInput | Prisma.SortOrder
  longitude?: Prisma.SortOrderInput | Prisma.SortOrder
  is_active?: Prisma.SortOrderInput | Prisma.SortOrder
  is_own?: Prisma.SortOrderInput | Prisma.SortOrder
  is_holding?: Prisma.SortOrderInput | Prisma.SortOrder
  creation_date?: Prisma.SortOrderInput | Prisma.SortOrder
  created_at?: Prisma.SortOrderInput | Prisma.SortOrder
  customers?: Prisma.customersOrderByRelationAggregateInput
  sales?: Prisma.salesOrderByRelationAggregateInput
  brands?: Prisma.brandsOrderByWithRelationInput
  sub_brands?: Prisma.sub_brandsOrderByWithRelationInput
}

export type storesWhereUniqueInput = Prisma.AtLeast<{
  id?: number
  AND?: Prisma.storesWhereInput | Prisma.storesWhereInput[]
  OR?: Prisma.storesWhereInput[]
  NOT?: Prisma.storesWhereInput | Prisma.storesWhereInput[]
  brand_id?: Prisma.IntNullableFilter<"stores"> | number | null
  sub_brand_id?: Prisma.IntNullableFilter<"stores"> | number | null
  name?: Prisma.StringFilter<"stores"> | string
  city?: Prisma.StringNullableFilter<"stores"> | string | null
  state?: Prisma.StringNullableFilter<"stores"> | string | null
  district?: Prisma.StringNullableFilter<"stores"> | string | null
  address_street?: Prisma.StringNullableFilter<"stores"> | string | null
  address_number?: Prisma.IntNullableFilter<"stores"> | number | null
  zipcode?: Prisma.StringNullableFilter<"stores"> | string | null
  latitude?: Prisma.DecimalNullableFilter<"stores"> | runtime.Decimal | runtime.DecimalJsLike | number | string | null
  longitude?: Prisma.DecimalNullableFilter<"stores"> | runtime.Decimal | runtime.DecimalJsLike | number | string | null
  is_active?: Prisma.BoolNullableFilter<"stores"> | boolean | null
  is_own?: Prisma.BoolNullableFilter<"stores"> | boolean | null
  is_holding?: Prisma.BoolNullableFilter<"stores"> | boolean | null
  creation_date?: Prisma.DateTimeNullableFilter<"stores"> | Date | string | null
  created_at?: Prisma.DateTimeNullableFilter<"stores"> | Date | string | null
  customers?: Prisma.CustomersListRelationFilter
  sales?: Prisma.SalesListRelationFilter
  brands?: Prisma.XOR<Prisma.BrandsNullableScalarRelationFilter, Prisma.brandsWhereInput> | null
  sub_brands?: Prisma.XOR<Prisma.Sub_brandsNullableScalarRelationFilter, Prisma.sub_brandsWhereInput> | null
}, "id">

export type storesOrderByWithAggregationInput = {
  id?: Prisma.SortOrder
  brand_id?: Prisma.SortOrderInput | Prisma.SortOrder
  sub_brand_id?: Prisma.SortOrderInput | Prisma.SortOrder
  name?: Prisma.SortOrder
  city?: Prisma.SortOrderInput | Prisma.SortOrder
  state?: Prisma.SortOrderInput | Prisma.SortOrder
  district?: Prisma.SortOrderInput | Prisma.SortOrder
  address_street?: Prisma.SortOrderInput | Prisma.SortOrder
  address_number?: Prisma.SortOrderInput | Prisma.SortOrder
  zipcode?: Prisma.SortOrderInput | Prisma.SortOrder
  latitude?: Prisma.SortOrderInput | Prisma.SortOrder
  longitude?: Prisma.SortOrderInput | Prisma.SortOrder
  is_active?: Prisma.SortOrderInput | Prisma.SortOrder
  is_own?: Prisma.SortOrderInput | Prisma.SortOrder
  is_holding?: Prisma.SortOrderInput | Prisma.SortOrder
  creation_date?: Prisma.SortOrderInput | Prisma.SortOrder
  created_at?: Prisma.SortOrderInput | Prisma.SortOrder
  _count?: Prisma.storesCountOrderByAggregateInput
  _avg?: Prisma.storesAvgOrderByAggregateInput
  _max?: Prisma.storesMaxOrderByAggregateInput
  _min?: Prisma.storesMinOrderByAggregateInput
  _sum?: Prisma.storesSumOrderByAggregateInput
}

export type storesScalarWhereWithAggregatesInput = {
  AND?: Prisma.storesScalarWhereWithAggregatesInput | Prisma.storesScalarWhereWithAggregatesInput[]
  OR?: Prisma.storesScalarWhereWithAggregatesInput[]
  NOT?: Prisma.storesScalarWhereWithAggregatesInput | Prisma.storesScalarWhereWithAggregatesInput[]
  id?: Prisma.IntWithAggregatesFilter<"stores"> | number
  brand_id?: Prisma.IntNullableWithAggregatesFilter<"stores"> | number | null
  sub_brand_id?: Prisma.IntNullableWithAggregatesFilter<"stores"> | number | null
  name?: Prisma.StringWithAggregatesFilter<"stores"> | string
  city?: Prisma.StringNullableWithAggregatesFilter<"stores"> | string | null
  state?: Prisma.StringNullableWithAggregatesFilter<"stores"> | string | null
  district?: Prisma.StringNullableWithAggregatesFilter<"stores"> | string | null
  address_street?: Prisma.StringNullableWithAggregatesFilter<"stores"> | string | null
  address_number?: Prisma.IntNullableWithAggregatesFilter<"stores"> | number | null
  zipcode?: Prisma.StringNullableWithAggregatesFilter<"stores"> | string | null
  latitude?: Prisma.DecimalNullableWithAggregatesFilter<"stores"> | runtime.Decimal | runtime.DecimalJsLike | number | string | null
  longitude?: Prisma.DecimalNullableWithAggregatesFilter<"stores"> | runtime.Decimal | runtime.DecimalJsLike | number | string | null
  is_active?: Prisma.BoolNullableWithAggregatesFilter<"stores"> | boolean | null
  is_own?: Prisma.BoolNullableWithAggregatesFilter<"stores"> | boolean | null
  is_holding?: Prisma.BoolNullableWithAggregatesFilter<"stores"> | boolean | null
  creation_date?: Prisma.DateTimeNullableWithAggregatesFilter<"stores"> | Date | string | null
  created_at?: Prisma.DateTimeNullableWithAggregatesFilter<"stores"> | Date | string | null
}

export type storesCreateInput = {
  name: string
  city?: string | null
  state?: string | null
  district?: string | null
  address_street?: string | null
  address_number?: number | null
  zipcode?: string | null
  latitude?: runtime.Decimal | runtime.DecimalJsLike | number | string | null
  longitude?: runtime.Decimal | runtime.DecimalJsLike | number | string | null
  is_active?: boolean | null
  is_own?: boolean | null
  is_holding?: boolean | null
  creation_date?: Date | string | null
  created_at?: Date | string | null
  customers?: Prisma.customersCreateNestedManyWithoutStoresInput
  sales?: Prisma.salesCreateNestedManyWithoutStoresInput
  brands?: Prisma.brandsCreateNestedOneWithoutStoresInput
  sub_brands?: Prisma.sub_brandsCreateNestedOneWithoutStoresInput
}

export type storesUncheckedCreateInput = {
  id?: number
  brand_id?: number | null
  sub_brand_id?: number | null
  name: string
  city?: string | null
  state?: string | null
  district?: string | null
  address_street?: string | null
  address_number?: number | null
  zipcode?: string | null
  latitude?: runtime.Decimal | runtime.DecimalJsLike | number | string | null
  longitude?: runtime.Decimal | runtime.DecimalJsLike | number | string | null
  is_active?: boolean | null
  is_own?: boolean | null
  is_holding?: boolean | null
  creation_date?: Date | string | null
  created_at?: Date | string | null
  customers?: Prisma.customersUncheckedCreateNestedManyWithoutStoresInput
  sales?: Prisma.salesUncheckedCreateNestedManyWithoutStoresInput
}

export type storesUpdateInput = {
  name?: Prisma.StringFieldUpdateOperationsInput | string
  city?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  state?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  district?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  address_street?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  address_number?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  zipcode?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  latitude?: Prisma.NullableDecimalFieldUpdateOperationsInput | runtime.Decimal | runtime.DecimalJsLike | number | string | null
  longitude?: Prisma.NullableDecimalFieldUpdateOperationsInput | runtime.Decimal | runtime.DecimalJsLike | number | string | null
  is_active?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null
  is_own?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null
  is_holding?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null
  creation_date?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  created_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  customers?: Prisma.customersUpdateManyWithoutStoresNestedInput
  sales?: Prisma.salesUpdateManyWithoutStoresNestedInput
  brands?: Prisma.brandsUpdateOneWithoutStoresNestedInput
  sub_brands?: Prisma.sub_brandsUpdateOneWithoutStoresNestedInput
}

export type storesUncheckedUpdateInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  brand_id?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  sub_brand_id?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  name?: Prisma.StringFieldUpdateOperationsInput | string
  city?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  state?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  district?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  address_street?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  address_number?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  zipcode?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  latitude?: Prisma.NullableDecimalFieldUpdateOperationsInput | runtime.Decimal | runtime.DecimalJsLike | number | string | null
  longitude?: Prisma.NullableDecimalFieldUpdateOperationsInput | runtime.Decimal | runtime.DecimalJsLike | number | string | null
  is_active?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null
  is_own?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null
  is_holding?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null
  creation_date?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  created_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  customers?: Prisma.customersUncheckedUpdateManyWithoutStoresNestedInput
  sales?: Prisma.salesUncheckedUpdateManyWithoutStoresNestedInput
}

export type storesCreateManyInput = {
  id?: number
  brand_id?: number | null
  sub_brand_id?: number | null
  name: string
  city?: string | null
  state?: string | null
  district?: string | null
  address_street?: string | null
  address_number?: number | null
  zipcode?: string | null
  latitude?: runtime.Decimal | runtime.DecimalJsLike | number | string | null
  longitude?: runtime.Decimal | runtime.DecimalJsLike | number | string | null
  is_active?: boolean | null
  is_own?: boolean | null
  is_holding?: boolean | null
  creation_date?: Date | string | null
  created_at?: Date | string | null
}

export type storesUpdateManyMutationInput = {
  name?: Prisma.StringFieldUpdateOperationsInput | string
  city?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  state?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  district?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  address_street?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  address_number?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  zipcode?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  latitude?: Prisma.NullableDecimalFieldUpdateOperationsInput | runtime.Decimal | runtime.DecimalJsLike | number | string | null
  longitude?: Prisma.NullableDecimalFieldUpdateOperationsInput | runtime.Decimal | runtime.DecimalJsLike | number | string | null
  is_active?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null
  is_own?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null
  is_holding?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null
  creation_date?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  created_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
}

export type storesUncheckedUpdateManyInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  brand_id?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  sub_brand_id?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  name?: Prisma.StringFieldUpdateOperationsInput | string
  city?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  state?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  district?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  address_street?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  address_number?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  zipcode?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  latitude?: Prisma.NullableDecimalFieldUpdateOperationsInput | runtime.Decimal | runtime.DecimalJsLike | number | string | null
  longitude?: Prisma.NullableDecimalFieldUpdateOperationsInput | runtime.Decimal | runtime.DecimalJsLike | number | string | null
  is_active?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null
  is_own?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null
  is_holding?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null
  creation_date?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  created_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
}

export type StoresListRelationFilter = {
  every?: Prisma.storesWhereInput
  some?: Prisma.storesWhereInput
  none?: Prisma.storesWhereInput
}

export type storesOrderByRelationAggregateInput = {
  _count?: Prisma.SortOrder
}

export type StoresNullableScalarRelationFilter = {
  is?: Prisma.storesWhereInput | null
  isNot?: Prisma.storesWhereInput | null
}

export type StoresScalarRelationFilter = {
  is?: Prisma.storesWhereInput
  isNot?: Prisma.storesWhereInput
}

export type storesCountOrderByAggregateInput = {
  id?: Prisma.SortOrder
  brand_id?: Prisma.SortOrder
  sub_brand_id?: Prisma.SortOrder
  name?: Prisma.SortOrder
  city?: Prisma.SortOrder
  state?: Prisma.SortOrder
  district?: Prisma.SortOrder
  address_street?: Prisma.SortOrder
  address_number?: Prisma.SortOrder
  zipcode?: Prisma.SortOrder
  latitude?: Prisma.SortOrder
  longitude?: Prisma.SortOrder
  is_active?: Prisma.SortOrder
  is_own?: Prisma.SortOrder
  is_holding?: Prisma.SortOrder
  creation_date?: Prisma.SortOrder
  created_at?: Prisma.SortOrder
}

export type storesAvgOrderByAggregateInput = {
  id?: Prisma.SortOrder
  brand_id?: Prisma.SortOrder
  sub_brand_id?: Prisma.SortOrder
  address_number?: Prisma.SortOrder
  latitude?: Prisma.SortOrder
  longitude?: Prisma.SortOrder
}

export type storesMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder
  brand_id?: Prisma.SortOrder
  sub_brand_id?: Prisma.SortOrder
  name?: Prisma.SortOrder
  city?: Prisma.SortOrder
  state?: Prisma.SortOrder
  district?: Prisma.SortOrder
  address_street?: Prisma.SortOrder
  address_number?: Prisma.SortOrder
  zipcode?: Prisma.SortOrder
  latitude?: Prisma.SortOrder
  longitude?: Prisma.SortOrder
  is_active?: Prisma.SortOrder
  is_own?: Prisma.SortOrder
  is_holding?: Prisma.SortOrder
  creation_date?: Prisma.SortOrder
  created_at?: Prisma.SortOrder
}

export type storesMinOrderByAggregateInput = {
  id?: Prisma.SortOrder
  brand_id?: Prisma.SortOrder
  sub_brand_id?: Prisma.SortOrder
  name?: Prisma.SortOrder
  city?: Prisma.SortOrder
  state?: Prisma.SortOrder
  district?: Prisma.SortOrder
  address_street?: Prisma.SortOrder
  address_number?: Prisma.SortOrder
  zipcode?: Prisma.SortOrder
  latitude?: Prisma.SortOrder
  longitude?: Prisma.SortOrder
  is_active?: Prisma.SortOrder
  is_own?: Prisma.SortOrder
  is_holding?: Prisma.SortOrder
  creation_date?: Prisma.SortOrder
  created_at?: Prisma.SortOrder
}

export type storesSumOrderByAggregateInput = {
  id?: Prisma.SortOrder
  brand_id?: Prisma.SortOrder
  sub_brand_id?: Prisma.SortOrder
  address_number?: Prisma.SortOrder
  latitude?: Prisma.SortOrder
  longitude?: Prisma.SortOrder
}

export type storesCreateNestedManyWithoutBrandsInput = {
  create?: Prisma.XOR<Prisma.storesCreateWithoutBrandsInput, Prisma.storesUncheckedCreateWithoutBrandsInput> | Prisma.storesCreateWithoutBrandsInput[] | Prisma.storesUncheckedCreateWithoutBrandsInput[]
  connectOrCreate?: Prisma.storesCreateOrConnectWithoutBrandsInput | Prisma.storesCreateOrConnectWithoutBrandsInput[]
  createMany?: Prisma.storesCreateManyBrandsInputEnvelope
  connect?: Prisma.storesWhereUniqueInput | Prisma.storesWhereUniqueInput[]
}

export type storesUncheckedCreateNestedManyWithoutBrandsInput = {
  create?: Prisma.XOR<Prisma.storesCreateWithoutBrandsInput, Prisma.storesUncheckedCreateWithoutBrandsInput> | Prisma.storesCreateWithoutBrandsInput[] | Prisma.storesUncheckedCreateWithoutBrandsInput[]
  connectOrCreate?: Prisma.storesCreateOrConnectWithoutBrandsInput | Prisma.storesCreateOrConnectWithoutBrandsInput[]
  createMany?: Prisma.storesCreateManyBrandsInputEnvelope
  connect?: Prisma.storesWhereUniqueInput | Prisma.storesWhereUniqueInput[]
}

export type storesUpdateManyWithoutBrandsNestedInput = {
  create?: Prisma.XOR<Prisma.storesCreateWithoutBrandsInput, Prisma.storesUncheckedCreateWithoutBrandsInput> | Prisma.storesCreateWithoutBrandsInput[] | Prisma.storesUncheckedCreateWithoutBrandsInput[]
  connectOrCreate?: Prisma.storesCreateOrConnectWithoutBrandsInput | Prisma.storesCreateOrConnectWithoutBrandsInput[]
  upsert?: Prisma.storesUpsertWithWhereUniqueWithoutBrandsInput | Prisma.storesUpsertWithWhereUniqueWithoutBrandsInput[]
  createMany?: Prisma.storesCreateManyBrandsInputEnvelope
  set?: Prisma.storesWhereUniqueInput | Prisma.storesWhereUniqueInput[]
  disconnect?: Prisma.storesWhereUniqueInput | Prisma.storesWhereUniqueInput[]
  delete?: Prisma.storesWhereUniqueInput | Prisma.storesWhereUniqueInput[]
  connect?: Prisma.storesWhereUniqueInput | Prisma.storesWhereUniqueInput[]
  update?: Prisma.storesUpdateWithWhereUniqueWithoutBrandsInput | Prisma.storesUpdateWithWhereUniqueWithoutBrandsInput[]
  updateMany?: Prisma.storesUpdateManyWithWhereWithoutBrandsInput | Prisma.storesUpdateManyWithWhereWithoutBrandsInput[]
  deleteMany?: Prisma.storesScalarWhereInput | Prisma.storesScalarWhereInput[]
}

export type storesUncheckedUpdateManyWithoutBrandsNestedInput = {
  create?: Prisma.XOR<Prisma.storesCreateWithoutBrandsInput, Prisma.storesUncheckedCreateWithoutBrandsInput> | Prisma.storesCreateWithoutBrandsInput[] | Prisma.storesUncheckedCreateWithoutBrandsInput[]
  connectOrCreate?: Prisma.storesCreateOrConnectWithoutBrandsInput | Prisma.storesCreateOrConnectWithoutBrandsInput[]
  upsert?: Prisma.storesUpsertWithWhereUniqueWithoutBrandsInput | Prisma.storesUpsertWithWhereUniqueWithoutBrandsInput[]
  createMany?: Prisma.storesCreateManyBrandsInputEnvelope
  set?: Prisma.storesWhereUniqueInput | Prisma.storesWhereUniqueInput[]
  disconnect?: Prisma.storesWhereUniqueInput | Prisma.storesWhereUniqueInput[]
  delete?: Prisma.storesWhereUniqueInput | Prisma.storesWhereUniqueInput[]
  connect?: Prisma.storesWhereUniqueInput | Prisma.storesWhereUniqueInput[]
  update?: Prisma.storesUpdateWithWhereUniqueWithoutBrandsInput | Prisma.storesUpdateWithWhereUniqueWithoutBrandsInput[]
  updateMany?: Prisma.storesUpdateManyWithWhereWithoutBrandsInput | Prisma.storesUpdateManyWithWhereWithoutBrandsInput[]
  deleteMany?: Prisma.storesScalarWhereInput | Prisma.storesScalarWhereInput[]
}

export type storesCreateNestedOneWithoutCustomersInput = {
  create?: Prisma.XOR<Prisma.storesCreateWithoutCustomersInput, Prisma.storesUncheckedCreateWithoutCustomersInput>
  connectOrCreate?: Prisma.storesCreateOrConnectWithoutCustomersInput
  connect?: Prisma.storesWhereUniqueInput
}

export type storesUpdateOneWithoutCustomersNestedInput = {
  create?: Prisma.XOR<Prisma.storesCreateWithoutCustomersInput, Prisma.storesUncheckedCreateWithoutCustomersInput>
  connectOrCreate?: Prisma.storesCreateOrConnectWithoutCustomersInput
  upsert?: Prisma.storesUpsertWithoutCustomersInput
  disconnect?: Prisma.storesWhereInput | boolean
  delete?: Prisma.storesWhereInput | boolean
  connect?: Prisma.storesWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.storesUpdateToOneWithWhereWithoutCustomersInput, Prisma.storesUpdateWithoutCustomersInput>, Prisma.storesUncheckedUpdateWithoutCustomersInput>
}

export type storesCreateNestedOneWithoutSalesInput = {
  create?: Prisma.XOR<Prisma.storesCreateWithoutSalesInput, Prisma.storesUncheckedCreateWithoutSalesInput>
  connectOrCreate?: Prisma.storesCreateOrConnectWithoutSalesInput
  connect?: Prisma.storesWhereUniqueInput
}

export type storesUpdateOneRequiredWithoutSalesNestedInput = {
  create?: Prisma.XOR<Prisma.storesCreateWithoutSalesInput, Prisma.storesUncheckedCreateWithoutSalesInput>
  connectOrCreate?: Prisma.storesCreateOrConnectWithoutSalesInput
  upsert?: Prisma.storesUpsertWithoutSalesInput
  connect?: Prisma.storesWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.storesUpdateToOneWithWhereWithoutSalesInput, Prisma.storesUpdateWithoutSalesInput>, Prisma.storesUncheckedUpdateWithoutSalesInput>
}

export type storesCreateNestedManyWithoutSub_brandsInput = {
  create?: Prisma.XOR<Prisma.storesCreateWithoutSub_brandsInput, Prisma.storesUncheckedCreateWithoutSub_brandsInput> | Prisma.storesCreateWithoutSub_brandsInput[] | Prisma.storesUncheckedCreateWithoutSub_brandsInput[]
  connectOrCreate?: Prisma.storesCreateOrConnectWithoutSub_brandsInput | Prisma.storesCreateOrConnectWithoutSub_brandsInput[]
  createMany?: Prisma.storesCreateManySub_brandsInputEnvelope
  connect?: Prisma.storesWhereUniqueInput | Prisma.storesWhereUniqueInput[]
}

export type storesUncheckedCreateNestedManyWithoutSub_brandsInput = {
  create?: Prisma.XOR<Prisma.storesCreateWithoutSub_brandsInput, Prisma.storesUncheckedCreateWithoutSub_brandsInput> | Prisma.storesCreateWithoutSub_brandsInput[] | Prisma.storesUncheckedCreateWithoutSub_brandsInput[]
  connectOrCreate?: Prisma.storesCreateOrConnectWithoutSub_brandsInput | Prisma.storesCreateOrConnectWithoutSub_brandsInput[]
  createMany?: Prisma.storesCreateManySub_brandsInputEnvelope
  connect?: Prisma.storesWhereUniqueInput | Prisma.storesWhereUniqueInput[]
}

export type storesUpdateManyWithoutSub_brandsNestedInput = {
  create?: Prisma.XOR<Prisma.storesCreateWithoutSub_brandsInput, Prisma.storesUncheckedCreateWithoutSub_brandsInput> | Prisma.storesCreateWithoutSub_brandsInput[] | Prisma.storesUncheckedCreateWithoutSub_brandsInput[]
  connectOrCreate?: Prisma.storesCreateOrConnectWithoutSub_brandsInput | Prisma.storesCreateOrConnectWithoutSub_brandsInput[]
  upsert?: Prisma.storesUpsertWithWhereUniqueWithoutSub_brandsInput | Prisma.storesUpsertWithWhereUniqueWithoutSub_brandsInput[]
  createMany?: Prisma.storesCreateManySub_brandsInputEnvelope
  set?: Prisma.storesWhereUniqueInput | Prisma.storesWhereUniqueInput[]
  disconnect?: Prisma.storesWhereUniqueInput | Prisma.storesWhereUniqueInput[]
  delete?: Prisma.storesWhereUniqueInput | Prisma.storesWhereUniqueInput[]
  connect?: Prisma.storesWhereUniqueInput | Prisma.storesWhereUniqueInput[]
  update?: Prisma.storesUpdateWithWhereUniqueWithoutSub_brandsInput | Prisma.storesUpdateWithWhereUniqueWithoutSub_brandsInput[]
  updateMany?: Prisma.storesUpdateManyWithWhereWithoutSub_brandsInput | Prisma.storesUpdateManyWithWhereWithoutSub_brandsInput[]
  deleteMany?: Prisma.storesScalarWhereInput | Prisma.storesScalarWhereInput[]
}

export type storesUncheckedUpdateManyWithoutSub_brandsNestedInput = {
  create?: Prisma.XOR<Prisma.storesCreateWithoutSub_brandsInput, Prisma.storesUncheckedCreateWithoutSub_brandsInput> | Prisma.storesCreateWithoutSub_brandsInput[] | Prisma.storesUncheckedCreateWithoutSub_brandsInput[]
  connectOrCreate?: Prisma.storesCreateOrConnectWithoutSub_brandsInput | Prisma.storesCreateOrConnectWithoutSub_brandsInput[]
  upsert?: Prisma.storesUpsertWithWhereUniqueWithoutSub_brandsInput | Prisma.storesUpsertWithWhereUniqueWithoutSub_brandsInput[]
  createMany?: Prisma.storesCreateManySub_brandsInputEnvelope
  set?: Prisma.storesWhereUniqueInput | Prisma.storesWhereUniqueInput[]
  disconnect?: Prisma.storesWhereUniqueInput | Prisma.storesWhereUniqueInput[]
  delete?: Prisma.storesWhereUniqueInput | Prisma.storesWhereUniqueInput[]
  connect?: Prisma.storesWhereUniqueInput | Prisma.storesWhereUniqueInput[]
  update?: Prisma.storesUpdateWithWhereUniqueWithoutSub_brandsInput | Prisma.storesUpdateWithWhereUniqueWithoutSub_brandsInput[]
  updateMany?: Prisma.storesUpdateManyWithWhereWithoutSub_brandsInput | Prisma.storesUpdateManyWithWhereWithoutSub_brandsInput[]
  deleteMany?: Prisma.storesScalarWhereInput | Prisma.storesScalarWhereInput[]
}

export type storesCreateWithoutBrandsInput = {
  name: string
  city?: string | null
  state?: string | null
  district?: string | null
  address_street?: string | null
  address_number?: number | null
  zipcode?: string | null
  latitude?: runtime.Decimal | runtime.DecimalJsLike | number | string | null
  longitude?: runtime.Decimal | runtime.DecimalJsLike | number | string | null
  is_active?: boolean | null
  is_own?: boolean | null
  is_holding?: boolean | null
  creation_date?: Date | string | null
  created_at?: Date | string | null
  customers?: Prisma.customersCreateNestedManyWithoutStoresInput
  sales?: Prisma.salesCreateNestedManyWithoutStoresInput
  sub_brands?: Prisma.sub_brandsCreateNestedOneWithoutStoresInput
}

export type storesUncheckedCreateWithoutBrandsInput = {
  id?: number
  sub_brand_id?: number | null
  name: string
  city?: string | null
  state?: string | null
  district?: string | null
  address_street?: string | null
  address_number?: number | null
  zipcode?: string | null
  latitude?: runtime.Decimal | runtime.DecimalJsLike | number | string | null
  longitude?: runtime.Decimal | runtime.DecimalJsLike | number | string | null
  is_active?: boolean | null
  is_own?: boolean | null
  is_holding?: boolean | null
  creation_date?: Date | string | null
  created_at?: Date | string | null
  customers?: Prisma.customersUncheckedCreateNestedManyWithoutStoresInput
  sales?: Prisma.salesUncheckedCreateNestedManyWithoutStoresInput
}

export type storesCreateOrConnectWithoutBrandsInput = {
  where: Prisma.storesWhereUniqueInput
  create: Prisma.XOR<Prisma.storesCreateWithoutBrandsInput, Prisma.storesUncheckedCreateWithoutBrandsInput>
}

export type storesCreateManyBrandsInputEnvelope = {
  data: Prisma.storesCreateManyBrandsInput | Prisma.storesCreateManyBrandsInput[]
  skipDuplicates?: boolean
}

export type storesUpsertWithWhereUniqueWithoutBrandsInput = {
  where: Prisma.storesWhereUniqueInput
  update: Prisma.XOR<Prisma.storesUpdateWithoutBrandsInput, Prisma.storesUncheckedUpdateWithoutBrandsInput>
  create: Prisma.XOR<Prisma.storesCreateWithoutBrandsInput, Prisma.storesUncheckedCreateWithoutBrandsInput>
}

export type storesUpdateWithWhereUniqueWithoutBrandsInput = {
  where: Prisma.storesWhereUniqueInput
  data: Prisma.XOR<Prisma.storesUpdateWithoutBrandsInput, Prisma.storesUncheckedUpdateWithoutBrandsInput>
}

export type storesUpdateManyWithWhereWithoutBrandsInput = {
  where: Prisma.storesScalarWhereInput
  data: Prisma.XOR<Prisma.storesUpdateManyMutationInput, Prisma.storesUncheckedUpdateManyWithoutBrandsInput>
}

export type storesScalarWhereInput = {
  AND?: Prisma.storesScalarWhereInput | Prisma.storesScalarWhereInput[]
  OR?: Prisma.storesScalarWhereInput[]
  NOT?: Prisma.storesScalarWhereInput | Prisma.storesScalarWhereInput[]
  id?: Prisma.IntFilter<"stores"> | number
  brand_id?: Prisma.IntNullableFilter<"stores"> | number | null
  sub_brand_id?: Prisma.IntNullableFilter<"stores"> | number | null
  name?: Prisma.StringFilter<"stores"> | string
  city?: Prisma.StringNullableFilter<"stores"> | string | null
  state?: Prisma.StringNullableFilter<"stores"> | string | null
  district?: Prisma.StringNullableFilter<"stores"> | string | null
  address_street?: Prisma.StringNullableFilter<"stores"> | string | null
  address_number?: Prisma.IntNullableFilter<"stores"> | number | null
  zipcode?: Prisma.StringNullableFilter<"stores"> | string | null
  latitude?: Prisma.DecimalNullableFilter<"stores"> | runtime.Decimal | runtime.DecimalJsLike | number | string | null
  longitude?: Prisma.DecimalNullableFilter<"stores"> | runtime.Decimal | runtime.DecimalJsLike | number | string | null
  is_active?: Prisma.BoolNullableFilter<"stores"> | boolean | null
  is_own?: Prisma.BoolNullableFilter<"stores"> | boolean | null
  is_holding?: Prisma.BoolNullableFilter<"stores"> | boolean | null
  creation_date?: Prisma.DateTimeNullableFilter<"stores"> | Date | string | null
  created_at?: Prisma.DateTimeNullableFilter<"stores"> | Date | string | null
}

export type storesCreateWithoutCustomersInput = {
  name: string
  city?: string | null
  state?: string | null
  district?: string | null
  address_street?: string | null
  address_number?: number | null
  zipcode?: string | null
  latitude?: runtime.Decimal | runtime.DecimalJsLike | number | string | null
  longitude?: runtime.Decimal | runtime.DecimalJsLike | number | string | null
  is_active?: boolean | null
  is_own?: boolean | null
  is_holding?: boolean | null
  creation_date?: Date | string | null
  created_at?: Date | string | null
  sales?: Prisma.salesCreateNestedManyWithoutStoresInput
  brands?: Prisma.brandsCreateNestedOneWithoutStoresInput
  sub_brands?: Prisma.sub_brandsCreateNestedOneWithoutStoresInput
}

export type storesUncheckedCreateWithoutCustomersInput = {
  id?: number
  brand_id?: number | null
  sub_brand_id?: number | null
  name: string
  city?: string | null
  state?: string | null
  district?: string | null
  address_street?: string | null
  address_number?: number | null
  zipcode?: string | null
  latitude?: runtime.Decimal | runtime.DecimalJsLike | number | string | null
  longitude?: runtime.Decimal | runtime.DecimalJsLike | number | string | null
  is_active?: boolean | null
  is_own?: boolean | null
  is_holding?: boolean | null
  creation_date?: Date | string | null
  created_at?: Date | string | null
  sales?: Prisma.salesUncheckedCreateNestedManyWithoutStoresInput
}

export type storesCreateOrConnectWithoutCustomersInput = {
  where: Prisma.storesWhereUniqueInput
  create: Prisma.XOR<Prisma.storesCreateWithoutCustomersInput, Prisma.storesUncheckedCreateWithoutCustomersInput>
}

export type storesUpsertWithoutCustomersInput = {
  update: Prisma.XOR<Prisma.storesUpdateWithoutCustomersInput, Prisma.storesUncheckedUpdateWithoutCustomersInput>
  create: Prisma.XOR<Prisma.storesCreateWithoutCustomersInput, Prisma.storesUncheckedCreateWithoutCustomersInput>
  where?: Prisma.storesWhereInput
}

export type storesUpdateToOneWithWhereWithoutCustomersInput = {
  where?: Prisma.storesWhereInput
  data: Prisma.XOR<Prisma.storesUpdateWithoutCustomersInput, Prisma.storesUncheckedUpdateWithoutCustomersInput>
}

export type storesUpdateWithoutCustomersInput = {
  name?: Prisma.StringFieldUpdateOperationsInput | string
  city?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  state?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  district?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  address_street?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  address_number?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  zipcode?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  latitude?: Prisma.NullableDecimalFieldUpdateOperationsInput | runtime.Decimal | runtime.DecimalJsLike | number | string | null
  longitude?: Prisma.NullableDecimalFieldUpdateOperationsInput | runtime.Decimal | runtime.DecimalJsLike | number | string | null
  is_active?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null
  is_own?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null
  is_holding?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null
  creation_date?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  created_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  sales?: Prisma.salesUpdateManyWithoutStoresNestedInput
  brands?: Prisma.brandsUpdateOneWithoutStoresNestedInput
  sub_brands?: Prisma.sub_brandsUpdateOneWithoutStoresNestedInput
}

export type storesUncheckedUpdateWithoutCustomersInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  brand_id?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  sub_brand_id?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  name?: Prisma.StringFieldUpdateOperationsInput | string
  city?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  state?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  district?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  address_street?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  address_number?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  zipcode?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  latitude?: Prisma.NullableDecimalFieldUpdateOperationsInput | runtime.Decimal | runtime.DecimalJsLike | number | string | null
  longitude?: Prisma.NullableDecimalFieldUpdateOperationsInput | runtime.Decimal | runtime.DecimalJsLike | number | string | null
  is_active?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null
  is_own?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null
  is_holding?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null
  creation_date?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  created_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  sales?: Prisma.salesUncheckedUpdateManyWithoutStoresNestedInput
}

export type storesCreateWithoutSalesInput = {
  name: string
  city?: string | null
  state?: string | null
  district?: string | null
  address_street?: string | null
  address_number?: number | null
  zipcode?: string | null
  latitude?: runtime.Decimal | runtime.DecimalJsLike | number | string | null
  longitude?: runtime.Decimal | runtime.DecimalJsLike | number | string | null
  is_active?: boolean | null
  is_own?: boolean | null
  is_holding?: boolean | null
  creation_date?: Date | string | null
  created_at?: Date | string | null
  customers?: Prisma.customersCreateNestedManyWithoutStoresInput
  brands?: Prisma.brandsCreateNestedOneWithoutStoresInput
  sub_brands?: Prisma.sub_brandsCreateNestedOneWithoutStoresInput
}

export type storesUncheckedCreateWithoutSalesInput = {
  id?: number
  brand_id?: number | null
  sub_brand_id?: number | null
  name: string
  city?: string | null
  state?: string | null
  district?: string | null
  address_street?: string | null
  address_number?: number | null
  zipcode?: string | null
  latitude?: runtime.Decimal | runtime.DecimalJsLike | number | string | null
  longitude?: runtime.Decimal | runtime.DecimalJsLike | number | string | null
  is_active?: boolean | null
  is_own?: boolean | null
  is_holding?: boolean | null
  creation_date?: Date | string | null
  created_at?: Date | string | null
  customers?: Prisma.customersUncheckedCreateNestedManyWithoutStoresInput
}

export type storesCreateOrConnectWithoutSalesInput = {
  where: Prisma.storesWhereUniqueInput
  create: Prisma.XOR<Prisma.storesCreateWithoutSalesInput, Prisma.storesUncheckedCreateWithoutSalesInput>
}

export type storesUpsertWithoutSalesInput = {
  update: Prisma.XOR<Prisma.storesUpdateWithoutSalesInput, Prisma.storesUncheckedUpdateWithoutSalesInput>
  create: Prisma.XOR<Prisma.storesCreateWithoutSalesInput, Prisma.storesUncheckedCreateWithoutSalesInput>
  where?: Prisma.storesWhereInput
}

export type storesUpdateToOneWithWhereWithoutSalesInput = {
  where?: Prisma.storesWhereInput
  data: Prisma.XOR<Prisma.storesUpdateWithoutSalesInput, Prisma.storesUncheckedUpdateWithoutSalesInput>
}

export type storesUpdateWithoutSalesInput = {
  name?: Prisma.StringFieldUpdateOperationsInput | string
  city?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  state?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  district?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  address_street?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  address_number?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  zipcode?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  latitude?: Prisma.NullableDecimalFieldUpdateOperationsInput | runtime.Decimal | runtime.DecimalJsLike | number | string | null
  longitude?: Prisma.NullableDecimalFieldUpdateOperationsInput | runtime.Decimal | runtime.DecimalJsLike | number | string | null
  is_active?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null
  is_own?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null
  is_holding?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null
  creation_date?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  created_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  customers?: Prisma.customersUpdateManyWithoutStoresNestedInput
  brands?: Prisma.brandsUpdateOneWithoutStoresNestedInput
  sub_brands?: Prisma.sub_brandsUpdateOneWithoutStoresNestedInput
}

export type storesUncheckedUpdateWithoutSalesInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  brand_id?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  sub_brand_id?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  name?: Prisma.StringFieldUpdateOperationsInput | string
  city?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  state?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  district?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  address_street?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  address_number?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  zipcode?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  latitude?: Prisma.NullableDecimalFieldUpdateOperationsInput | runtime.Decimal | runtime.DecimalJsLike | number | string | null
  longitude?: Prisma.NullableDecimalFieldUpdateOperationsInput | runtime.Decimal | runtime.DecimalJsLike | number | string | null
  is_active?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null
  is_own?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null
  is_holding?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null
  creation_date?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  created_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  customers?: Prisma.customersUncheckedUpdateManyWithoutStoresNestedInput
}

export type storesCreateWithoutSub_brandsInput = {
  name: string
  city?: string | null
  state?: string | null
  district?: string | null
  address_street?: string | null
  address_number?: number | null
  zipcode?: string | null
  latitude?: runtime.Decimal | runtime.DecimalJsLike | number | string | null
  longitude?: runtime.Decimal | runtime.DecimalJsLike | number | string | null
  is_active?: boolean | null
  is_own?: boolean | null
  is_holding?: boolean | null
  creation_date?: Date | string | null
  created_at?: Date | string | null
  customers?: Prisma.customersCreateNestedManyWithoutStoresInput
  sales?: Prisma.salesCreateNestedManyWithoutStoresInput
  brands?: Prisma.brandsCreateNestedOneWithoutStoresInput
}

export type storesUncheckedCreateWithoutSub_brandsInput = {
  id?: number
  brand_id?: number | null
  name: string
  city?: string | null
  state?: string | null
  district?: string | null
  address_street?: string | null
  address_number?: number | null
  zipcode?: string | null
  latitude?: runtime.Decimal | runtime.DecimalJsLike | number | string | null
  longitude?: runtime.Decimal | runtime.DecimalJsLike | number | string | null
  is_active?: boolean | null
  is_own?: boolean | null
  is_holding?: boolean | null
  creation_date?: Date | string | null
  created_at?: Date | string | null
  customers?: Prisma.customersUncheckedCreateNestedManyWithoutStoresInput
  sales?: Prisma.salesUncheckedCreateNestedManyWithoutStoresInput
}

export type storesCreateOrConnectWithoutSub_brandsInput = {
  where: Prisma.storesWhereUniqueInput
  create: Prisma.XOR<Prisma.storesCreateWithoutSub_brandsInput, Prisma.storesUncheckedCreateWithoutSub_brandsInput>
}

export type storesCreateManySub_brandsInputEnvelope = {
  data: Prisma.storesCreateManySub_brandsInput | Prisma.storesCreateManySub_brandsInput[]
  skipDuplicates?: boolean
}

export type storesUpsertWithWhereUniqueWithoutSub_brandsInput = {
  where: Prisma.storesWhereUniqueInput
  update: Prisma.XOR<Prisma.storesUpdateWithoutSub_brandsInput, Prisma.storesUncheckedUpdateWithoutSub_brandsInput>
  create: Prisma.XOR<Prisma.storesCreateWithoutSub_brandsInput, Prisma.storesUncheckedCreateWithoutSub_brandsInput>
}

export type storesUpdateWithWhereUniqueWithoutSub_brandsInput = {
  where: Prisma.storesWhereUniqueInput
  data: Prisma.XOR<Prisma.storesUpdateWithoutSub_brandsInput, Prisma.storesUncheckedUpdateWithoutSub_brandsInput>
}

export type storesUpdateManyWithWhereWithoutSub_brandsInput = {
  where: Prisma.storesScalarWhereInput
  data: Prisma.XOR<Prisma.storesUpdateManyMutationInput, Prisma.storesUncheckedUpdateManyWithoutSub_brandsInput>
}

export type storesCreateManyBrandsInput = {
  id?: number
  sub_brand_id?: number | null
  name: string
  city?: string | null
  state?: string | null
  district?: string | null
  address_street?: string | null
  address_number?: number | null
  zipcode?: string | null
  latitude?: runtime.Decimal | runtime.DecimalJsLike | number | string | null
  longitude?: runtime.Decimal | runtime.DecimalJsLike | number | string | null
  is_active?: boolean | null
  is_own?: boolean | null
  is_holding?: boolean | null
  creation_date?: Date | string | null
  created_at?: Date | string | null
}

export type storesUpdateWithoutBrandsInput = {
  name?: Prisma.StringFieldUpdateOperationsInput | string
  city?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  state?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  district?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  address_street?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  address_number?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  zipcode?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  latitude?: Prisma.NullableDecimalFieldUpdateOperationsInput | runtime.Decimal | runtime.DecimalJsLike | number | string | null
  longitude?: Prisma.NullableDecimalFieldUpdateOperationsInput | runtime.Decimal | runtime.DecimalJsLike | number | string | null
  is_active?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null
  is_own?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null
  is_holding?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null
  creation_date?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  created_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  customers?: Prisma.customersUpdateManyWithoutStoresNestedInput
  sales?: Prisma.salesUpdateManyWithoutStoresNestedInput
  sub_brands?: Prisma.sub_brandsUpdateOneWithoutStoresNestedInput
}

export type storesUncheckedUpdateWithoutBrandsInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  sub_brand_id?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  name?: Prisma.StringFieldUpdateOperationsInput | string
  city?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  state?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  district?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  address_street?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  address_number?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  zipcode?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  latitude?: Prisma.NullableDecimalFieldUpdateOperationsInput | runtime.Decimal | runtime.DecimalJsLike | number | string | null
  longitude?: Prisma.NullableDecimalFieldUpdateOperationsInput | runtime.Decimal | runtime.DecimalJsLike | number | string | null
  is_active?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null
  is_own?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null
  is_holding?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null
  creation_date?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  created_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  customers?: Prisma.customersUncheckedUpdateManyWithoutStoresNestedInput
  sales?: Prisma.salesUncheckedUpdateManyWithoutStoresNestedInput
}

export type storesUncheckedUpdateManyWithoutBrandsInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  sub_brand_id?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  name?: Prisma.StringFieldUpdateOperationsInput | string
  city?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  state?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  district?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  address_street?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  address_number?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  zipcode?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  latitude?: Prisma.NullableDecimalFieldUpdateOperationsInput | runtime.Decimal | runtime.DecimalJsLike | number | string | null
  longitude?: Prisma.NullableDecimalFieldUpdateOperationsInput | runtime.Decimal | runtime.DecimalJsLike | number | string | null
  is_active?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null
  is_own?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null
  is_holding?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null
  creation_date?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  created_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
}

export type storesCreateManySub_brandsInput = {
  id?: number
  brand_id?: number | null
  name: string
  city?: string | null
  state?: string | null
  district?: string | null
  address_street?: string | null
  address_number?: number | null
  zipcode?: string | null
  latitude?: runtime.Decimal | runtime.DecimalJsLike | number | string | null
  longitude?: runtime.Decimal | runtime.DecimalJsLike | number | string | null
  is_active?: boolean | null
  is_own?: boolean | null
  is_holding?: boolean | null
  creation_date?: Date | string | null
  created_at?: Date | string | null
}

export type storesUpdateWithoutSub_brandsInput = {
  name?: Prisma.StringFieldUpdateOperationsInput | string
  city?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  state?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  district?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  address_street?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  address_number?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  zipcode?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  latitude?: Prisma.NullableDecimalFieldUpdateOperationsInput | runtime.Decimal | runtime.DecimalJsLike | number | string | null
  longitude?: Prisma.NullableDecimalFieldUpdateOperationsInput | runtime.Decimal | runtime.DecimalJsLike | number | string | null
  is_active?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null
  is_own?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null
  is_holding?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null
  creation_date?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  created_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  customers?: Prisma.customersUpdateManyWithoutStoresNestedInput
  sales?: Prisma.salesUpdateManyWithoutStoresNestedInput
  brands?: Prisma.brandsUpdateOneWithoutStoresNestedInput
}

export type storesUncheckedUpdateWithoutSub_brandsInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  brand_id?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  name?: Prisma.StringFieldUpdateOperationsInput | string
  city?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  state?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  district?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  address_street?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  address_number?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  zipcode?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  latitude?: Prisma.NullableDecimalFieldUpdateOperationsInput | runtime.Decimal | runtime.DecimalJsLike | number | string | null
  longitude?: Prisma.NullableDecimalFieldUpdateOperationsInput | runtime.Decimal | runtime.DecimalJsLike | number | string | null
  is_active?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null
  is_own?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null
  is_holding?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null
  creation_date?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  created_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  customers?: Prisma.customersUncheckedUpdateManyWithoutStoresNestedInput
  sales?: Prisma.salesUncheckedUpdateManyWithoutStoresNestedInput
}

export type storesUncheckedUpdateManyWithoutSub_brandsInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  brand_id?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  name?: Prisma.StringFieldUpdateOperationsInput | string
  city?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  state?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  district?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  address_street?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  address_number?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  zipcode?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  latitude?: Prisma.NullableDecimalFieldUpdateOperationsInput | runtime.Decimal | runtime.DecimalJsLike | number | string | null
  longitude?: Prisma.NullableDecimalFieldUpdateOperationsInput | runtime.Decimal | runtime.DecimalJsLike | number | string | null
  is_active?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null
  is_own?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null
  is_holding?: Prisma.NullableBoolFieldUpdateOperationsInput | boolean | null
  creation_date?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  created_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
}


/**
 * Count Type StoresCountOutputType
 */

export type StoresCountOutputType = {
  customers: number
  sales: number
}

export type StoresCountOutputTypeSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  customers?: boolean | StoresCountOutputTypeCountCustomersArgs
  sales?: boolean | StoresCountOutputTypeCountSalesArgs
}

/**
 * StoresCountOutputType without action
 */
export type StoresCountOutputTypeDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the StoresCountOutputType
   */
  select?: Prisma.StoresCountOutputTypeSelect<ExtArgs> | null
}

/**
 * StoresCountOutputType without action
 */
export type StoresCountOutputTypeCountCustomersArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.customersWhereInput
}

/**
 * StoresCountOutputType without action
 */
export type StoresCountOutputTypeCountSalesArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.salesWhereInput
}


export type storesSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  brand_id?: boolean
  sub_brand_id?: boolean
  name?: boolean
  city?: boolean
  state?: boolean
  district?: boolean
  address_street?: boolean
  address_number?: boolean
  zipcode?: boolean
  latitude?: boolean
  longitude?: boolean
  is_active?: boolean
  is_own?: boolean
  is_holding?: boolean
  creation_date?: boolean
  created_at?: boolean
  customers?: boolean | Prisma.stores$customersArgs<ExtArgs>
  sales?: boolean | Prisma.stores$salesArgs<ExtArgs>
  brands?: boolean | Prisma.stores$brandsArgs<ExtArgs>
  sub_brands?: boolean | Prisma.stores$sub_brandsArgs<ExtArgs>
  _count?: boolean | Prisma.StoresCountOutputTypeDefaultArgs<ExtArgs>
}, ExtArgs["result"]["stores"]>

export type storesSelectCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  brand_id?: boolean
  sub_brand_id?: boolean
  name?: boolean
  city?: boolean
  state?: boolean
  district?: boolean
  address_street?: boolean
  address_number?: boolean
  zipcode?: boolean
  latitude?: boolean
  longitude?: boolean
  is_active?: boolean
  is_own?: boolean
  is_holding?: boolean
  creation_date?: boolean
  created_at?: boolean
  brands?: boolean | Prisma.stores$brandsArgs<ExtArgs>
  sub_brands?: boolean | Prisma.stores$sub_brandsArgs<ExtArgs>
}, ExtArgs["result"]["stores"]>

export type storesSelectUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  brand_id?: boolean
  sub_brand_id?: boolean
  name?: boolean
  city?: boolean
  state?: boolean
  district?: boolean
  address_street?: boolean
  address_number?: boolean
  zipcode?: boolean
  latitude?: boolean
  longitude?: boolean
  is_active?: boolean
  is_own?: boolean
  is_holding?: boolean
  creation_date?: boolean
  created_at?: boolean
  brands?: boolean | Prisma.stores$brandsArgs<ExtArgs>
  sub_brands?: boolean | Prisma.stores$sub_brandsArgs<ExtArgs>
}, ExtArgs["result"]["stores"]>

export type storesSelectScalar = {
  id?: boolean
  brand_id?: boolean
  sub_brand_id?: boolean
  name?: boolean
  city?: boolean
  state?: boolean
  district?: boolean
  address_street?: boolean
  address_number?: boolean
  zipcode?: boolean
  latitude?: boolean
  longitude?: boolean
  is_active?: boolean
  is_own?: boolean
  is_holding?: boolean
  creation_date?: boolean
  created_at?: boolean
}

export type storesOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"id" | "brand_id" | "sub_brand_id" | "name" | "city" | "state" | "district" | "address_street" | "address_number" | "zipcode" | "latitude" | "longitude" | "is_active" | "is_own" | "is_holding" | "creation_date" | "created_at", ExtArgs["result"]["stores"]>
export type storesInclude<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  customers?: boolean | Prisma.stores$customersArgs<ExtArgs>
  sales?: boolean | Prisma.stores$salesArgs<ExtArgs>
  brands?: boolean | Prisma.stores$brandsArgs<ExtArgs>
  sub_brands?: boolean | Prisma.stores$sub_brandsArgs<ExtArgs>
  _count?: boolean | Prisma.StoresCountOutputTypeDefaultArgs<ExtArgs>
}
export type storesIncludeCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  brands?: boolean | Prisma.stores$brandsArgs<ExtArgs>
  sub_brands?: boolean | Prisma.stores$sub_brandsArgs<ExtArgs>
}
export type storesIncludeUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  brands?: boolean | Prisma.stores$brandsArgs<ExtArgs>
  sub_brands?: boolean | Prisma.stores$sub_brandsArgs<ExtArgs>
}

export type $storesPayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "stores"
  objects: {
    customers: Prisma.$customersPayload<ExtArgs>[]
    sales: Prisma.$salesPayload<ExtArgs>[]
    brands: Prisma.$brandsPayload<ExtArgs> | null
    sub_brands: Prisma.$sub_brandsPayload<ExtArgs> | null
  }
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    id: number
    brand_id: number | null
    sub_brand_id: number | null
    name: string
    city: string | null
    state: string | null
    district: string | null
    address_street: string | null
    address_number: number | null
    zipcode: string | null
    latitude: runtime.Decimal | null
    longitude: runtime.Decimal | null
    is_active: boolean | null
    is_own: boolean | null
    is_holding: boolean | null
    creation_date: Date | null
    created_at: Date | null
  }, ExtArgs["result"]["stores"]>
  composites: {}
}

export type storesGetPayload<S extends boolean | null | undefined | storesDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$storesPayload, S>

export type storesCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<storesFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
    select?: StoresCountAggregateInputType | true
  }

export interface storesDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['stores'], meta: { name: 'stores' } }
  /**
   * Find zero or one Stores that matches the filter.
   * @param {storesFindUniqueArgs} args - Arguments to find a Stores
   * @example
   * // Get one Stores
   * const stores = await prisma.stores.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends storesFindUniqueArgs>(args: Prisma.SelectSubset<T, storesFindUniqueArgs<ExtArgs>>): Prisma.Prisma__storesClient<runtime.Types.Result.GetResult<Prisma.$storesPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one Stores that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {storesFindUniqueOrThrowArgs} args - Arguments to find a Stores
   * @example
   * // Get one Stores
   * const stores = await prisma.stores.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends storesFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, storesFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__storesClient<runtime.Types.Result.GetResult<Prisma.$storesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Stores that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {storesFindFirstArgs} args - Arguments to find a Stores
   * @example
   * // Get one Stores
   * const stores = await prisma.stores.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends storesFindFirstArgs>(args?: Prisma.SelectSubset<T, storesFindFirstArgs<ExtArgs>>): Prisma.Prisma__storesClient<runtime.Types.Result.GetResult<Prisma.$storesPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Stores that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {storesFindFirstOrThrowArgs} args - Arguments to find a Stores
   * @example
   * // Get one Stores
   * const stores = await prisma.stores.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends storesFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, storesFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__storesClient<runtime.Types.Result.GetResult<Prisma.$storesPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more Stores that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {storesFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Stores
   * const stores = await prisma.stores.findMany()
   * 
   * // Get first 10 Stores
   * const stores = await prisma.stores.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const storesWithIdOnly = await prisma.stores.findMany({ select: { id: true } })
   * 
   */
  findMany<T extends storesFindManyArgs>(args?: Prisma.SelectSubset<T, storesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$storesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a Stores.
   * @param {storesCreateArgs} args - Arguments to create a Stores.
   * @example
   * // Create one Stores
   * const Stores = await prisma.stores.create({
   *   data: {
   *     // ... data to create a Stores
   *   }
   * })
   * 
   */
  create<T extends storesCreateArgs>(args: Prisma.SelectSubset<T, storesCreateArgs<ExtArgs>>): Prisma.Prisma__storesClient<runtime.Types.Result.GetResult<Prisma.$storesPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many Stores.
   * @param {storesCreateManyArgs} args - Arguments to create many Stores.
   * @example
   * // Create many Stores
   * const stores = await prisma.stores.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends storesCreateManyArgs>(args?: Prisma.SelectSubset<T, storesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create many Stores and returns the data saved in the database.
   * @param {storesCreateManyAndReturnArgs} args - Arguments to create many Stores.
   * @example
   * // Create many Stores
   * const stores = await prisma.stores.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Create many Stores and only return the `id`
   * const storesWithIdOnly = await prisma.stores.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  createManyAndReturn<T extends storesCreateManyAndReturnArgs>(args?: Prisma.SelectSubset<T, storesCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$storesPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

  /**
   * Delete a Stores.
   * @param {storesDeleteArgs} args - Arguments to delete one Stores.
   * @example
   * // Delete one Stores
   * const Stores = await prisma.stores.delete({
   *   where: {
   *     // ... filter to delete one Stores
   *   }
   * })
   * 
   */
  delete<T extends storesDeleteArgs>(args: Prisma.SelectSubset<T, storesDeleteArgs<ExtArgs>>): Prisma.Prisma__storesClient<runtime.Types.Result.GetResult<Prisma.$storesPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one Stores.
   * @param {storesUpdateArgs} args - Arguments to update one Stores.
   * @example
   * // Update one Stores
   * const stores = await prisma.stores.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends storesUpdateArgs>(args: Prisma.SelectSubset<T, storesUpdateArgs<ExtArgs>>): Prisma.Prisma__storesClient<runtime.Types.Result.GetResult<Prisma.$storesPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more Stores.
   * @param {storesDeleteManyArgs} args - Arguments to filter Stores to delete.
   * @example
   * // Delete a few Stores
   * const { count } = await prisma.stores.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends storesDeleteManyArgs>(args?: Prisma.SelectSubset<T, storesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Stores.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {storesUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Stores
   * const stores = await prisma.stores.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends storesUpdateManyArgs>(args: Prisma.SelectSubset<T, storesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Stores and returns the data updated in the database.
   * @param {storesUpdateManyAndReturnArgs} args - Arguments to update many Stores.
   * @example
   * // Update many Stores
   * const stores = await prisma.stores.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Update zero or more Stores and only return the `id`
   * const storesWithIdOnly = await prisma.stores.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  updateManyAndReturn<T extends storesUpdateManyAndReturnArgs>(args: Prisma.SelectSubset<T, storesUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$storesPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

  /**
   * Create or update one Stores.
   * @param {storesUpsertArgs} args - Arguments to update or create a Stores.
   * @example
   * // Update or create a Stores
   * const stores = await prisma.stores.upsert({
   *   create: {
   *     // ... data to create a Stores
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the Stores we want to update
   *   }
   * })
   */
  upsert<T extends storesUpsertArgs>(args: Prisma.SelectSubset<T, storesUpsertArgs<ExtArgs>>): Prisma.Prisma__storesClient<runtime.Types.Result.GetResult<Prisma.$storesPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


  /**
   * Count the number of Stores.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {storesCountArgs} args - Arguments to filter Stores to count.
   * @example
   * // Count the number of Stores
   * const count = await prisma.stores.count({
   *   where: {
   *     // ... the filter for the Stores we want to count
   *   }
   * })
  **/
  count<T extends storesCountArgs>(
    args?: Prisma.Subset<T, storesCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], StoresCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a Stores.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {StoresAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends StoresAggregateArgs>(args: Prisma.Subset<T, StoresAggregateArgs>): Prisma.PrismaPromise<GetStoresAggregateType<T>>

  /**
   * Group by Stores.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {storesGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends storesGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: storesGroupByArgs['orderBy'] }
      : { orderBy?: storesGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, storesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetStoresGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the stores model
 */
readonly fields: storesFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for stores.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__storesClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  customers<T extends Prisma.stores$customersArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.stores$customersArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$customersPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  sales<T extends Prisma.stores$salesArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.stores$salesArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$salesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  brands<T extends Prisma.stores$brandsArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.stores$brandsArgs<ExtArgs>>): Prisma.Prisma__brandsClient<runtime.Types.Result.GetResult<Prisma.$brandsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
  sub_brands<T extends Prisma.stores$sub_brandsArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.stores$sub_brandsArgs<ExtArgs>>): Prisma.Prisma__sub_brandsClient<runtime.Types.Result.GetResult<Prisma.$sub_brandsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the stores model
 */
export interface storesFieldRefs {
  readonly id: Prisma.FieldRef<"stores", 'Int'>
  readonly brand_id: Prisma.FieldRef<"stores", 'Int'>
  readonly sub_brand_id: Prisma.FieldRef<"stores", 'Int'>
  readonly name: Prisma.FieldRef<"stores", 'String'>
  readonly city: Prisma.FieldRef<"stores", 'String'>
  readonly state: Prisma.FieldRef<"stores", 'String'>
  readonly district: Prisma.FieldRef<"stores", 'String'>
  readonly address_street: Prisma.FieldRef<"stores", 'String'>
  readonly address_number: Prisma.FieldRef<"stores", 'Int'>
  readonly zipcode: Prisma.FieldRef<"stores", 'String'>
  readonly latitude: Prisma.FieldRef<"stores", 'Decimal'>
  readonly longitude: Prisma.FieldRef<"stores", 'Decimal'>
  readonly is_active: Prisma.FieldRef<"stores", 'Boolean'>
  readonly is_own: Prisma.FieldRef<"stores", 'Boolean'>
  readonly is_holding: Prisma.FieldRef<"stores", 'Boolean'>
  readonly creation_date: Prisma.FieldRef<"stores", 'DateTime'>
  readonly created_at: Prisma.FieldRef<"stores", 'DateTime'>
}
    

// Custom InputTypes
/**
 * stores findUnique
 */
export type storesFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the stores
   */
  select?: Prisma.storesSelect<ExtArgs> | null
  /**
   * Omit specific fields from the stores
   */
  omit?: Prisma.storesOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.storesInclude<ExtArgs> | null
  /**
   * Filter, which stores to fetch.
   */
  where: Prisma.storesWhereUniqueInput
}

/**
 * stores findUniqueOrThrow
 */
export type storesFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the stores
   */
  select?: Prisma.storesSelect<ExtArgs> | null
  /**
   * Omit specific fields from the stores
   */
  omit?: Prisma.storesOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.storesInclude<ExtArgs> | null
  /**
   * Filter, which stores to fetch.
   */
  where: Prisma.storesWhereUniqueInput
}

/**
 * stores findFirst
 */
export type storesFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the stores
   */
  select?: Prisma.storesSelect<ExtArgs> | null
  /**
   * Omit specific fields from the stores
   */
  omit?: Prisma.storesOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.storesInclude<ExtArgs> | null
  /**
   * Filter, which stores to fetch.
   */
  where?: Prisma.storesWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of stores to fetch.
   */
  orderBy?: Prisma.storesOrderByWithRelationInput | Prisma.storesOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for stores.
   */
  cursor?: Prisma.storesWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` stores from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` stores.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of stores.
   */
  distinct?: Prisma.StoresScalarFieldEnum | Prisma.StoresScalarFieldEnum[]
}

/**
 * stores findFirstOrThrow
 */
export type storesFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the stores
   */
  select?: Prisma.storesSelect<ExtArgs> | null
  /**
   * Omit specific fields from the stores
   */
  omit?: Prisma.storesOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.storesInclude<ExtArgs> | null
  /**
   * Filter, which stores to fetch.
   */
  where?: Prisma.storesWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of stores to fetch.
   */
  orderBy?: Prisma.storesOrderByWithRelationInput | Prisma.storesOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for stores.
   */
  cursor?: Prisma.storesWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` stores from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` stores.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of stores.
   */
  distinct?: Prisma.StoresScalarFieldEnum | Prisma.StoresScalarFieldEnum[]
}

/**
 * stores findMany
 */
export type storesFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the stores
   */
  select?: Prisma.storesSelect<ExtArgs> | null
  /**
   * Omit specific fields from the stores
   */
  omit?: Prisma.storesOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.storesInclude<ExtArgs> | null
  /**
   * Filter, which stores to fetch.
   */
  where?: Prisma.storesWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of stores to fetch.
   */
  orderBy?: Prisma.storesOrderByWithRelationInput | Prisma.storesOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing stores.
   */
  cursor?: Prisma.storesWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` stores from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` stores.
   */
  skip?: number
  distinct?: Prisma.StoresScalarFieldEnum | Prisma.StoresScalarFieldEnum[]
}

/**
 * stores create
 */
export type storesCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the stores
   */
  select?: Prisma.storesSelect<ExtArgs> | null
  /**
   * Omit specific fields from the stores
   */
  omit?: Prisma.storesOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.storesInclude<ExtArgs> | null
  /**
   * The data needed to create a stores.
   */
  data: Prisma.XOR<Prisma.storesCreateInput, Prisma.storesUncheckedCreateInput>
}

/**
 * stores createMany
 */
export type storesCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many stores.
   */
  data: Prisma.storesCreateManyInput | Prisma.storesCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * stores createManyAndReturn
 */
export type storesCreateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the stores
   */
  select?: Prisma.storesSelectCreateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the stores
   */
  omit?: Prisma.storesOmit<ExtArgs> | null
  /**
   * The data used to create many stores.
   */
  data: Prisma.storesCreateManyInput | Prisma.storesCreateManyInput[]
  skipDuplicates?: boolean
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.storesIncludeCreateManyAndReturn<ExtArgs> | null
}

/**
 * stores update
 */
export type storesUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the stores
   */
  select?: Prisma.storesSelect<ExtArgs> | null
  /**
   * Omit specific fields from the stores
   */
  omit?: Prisma.storesOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.storesInclude<ExtArgs> | null
  /**
   * The data needed to update a stores.
   */
  data: Prisma.XOR<Prisma.storesUpdateInput, Prisma.storesUncheckedUpdateInput>
  /**
   * Choose, which stores to update.
   */
  where: Prisma.storesWhereUniqueInput
}

/**
 * stores updateMany
 */
export type storesUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update stores.
   */
  data: Prisma.XOR<Prisma.storesUpdateManyMutationInput, Prisma.storesUncheckedUpdateManyInput>
  /**
   * Filter which stores to update
   */
  where?: Prisma.storesWhereInput
  /**
   * Limit how many stores to update.
   */
  limit?: number
}

/**
 * stores updateManyAndReturn
 */
export type storesUpdateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the stores
   */
  select?: Prisma.storesSelectUpdateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the stores
   */
  omit?: Prisma.storesOmit<ExtArgs> | null
  /**
   * The data used to update stores.
   */
  data: Prisma.XOR<Prisma.storesUpdateManyMutationInput, Prisma.storesUncheckedUpdateManyInput>
  /**
   * Filter which stores to update
   */
  where?: Prisma.storesWhereInput
  /**
   * Limit how many stores to update.
   */
  limit?: number
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.storesIncludeUpdateManyAndReturn<ExtArgs> | null
}

/**
 * stores upsert
 */
export type storesUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the stores
   */
  select?: Prisma.storesSelect<ExtArgs> | null
  /**
   * Omit specific fields from the stores
   */
  omit?: Prisma.storesOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.storesInclude<ExtArgs> | null
  /**
   * The filter to search for the stores to update in case it exists.
   */
  where: Prisma.storesWhereUniqueInput
  /**
   * In case the stores found by the `where` argument doesn't exist, create a new stores with this data.
   */
  create: Prisma.XOR<Prisma.storesCreateInput, Prisma.storesUncheckedCreateInput>
  /**
   * In case the stores was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.storesUpdateInput, Prisma.storesUncheckedUpdateInput>
}

/**
 * stores delete
 */
export type storesDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the stores
   */
  select?: Prisma.storesSelect<ExtArgs> | null
  /**
   * Omit specific fields from the stores
   */
  omit?: Prisma.storesOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.storesInclude<ExtArgs> | null
  /**
   * Filter which stores to delete.
   */
  where: Prisma.storesWhereUniqueInput
}

/**
 * stores deleteMany
 */
export type storesDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which stores to delete
   */
  where?: Prisma.storesWhereInput
  /**
   * Limit how many stores to delete.
   */
  limit?: number
}

/**
 * stores.customers
 */
export type stores$customersArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the customers
   */
  select?: Prisma.customersSelect<ExtArgs> | null
  /**
   * Omit specific fields from the customers
   */
  omit?: Prisma.customersOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.customersInclude<ExtArgs> | null
  where?: Prisma.customersWhereInput
  orderBy?: Prisma.customersOrderByWithRelationInput | Prisma.customersOrderByWithRelationInput[]
  cursor?: Prisma.customersWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.CustomersScalarFieldEnum | Prisma.CustomersScalarFieldEnum[]
}

/**
 * stores.sales
 */
export type stores$salesArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the sales
   */
  select?: Prisma.salesSelect<ExtArgs> | null
  /**
   * Omit specific fields from the sales
   */
  omit?: Prisma.salesOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.salesInclude<ExtArgs> | null
  where?: Prisma.salesWhereInput
  orderBy?: Prisma.salesOrderByWithRelationInput | Prisma.salesOrderByWithRelationInput[]
  cursor?: Prisma.salesWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.SalesScalarFieldEnum | Prisma.SalesScalarFieldEnum[]
}

/**
 * stores.brands
 */
export type stores$brandsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the brands
   */
  select?: Prisma.brandsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the brands
   */
  omit?: Prisma.brandsOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.brandsInclude<ExtArgs> | null
  where?: Prisma.brandsWhereInput
}

/**
 * stores.sub_brands
 */
export type stores$sub_brandsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the sub_brands
   */
  select?: Prisma.sub_brandsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the sub_brands
   */
  omit?: Prisma.sub_brandsOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.sub_brandsInclude<ExtArgs> | null
  where?: Prisma.sub_brandsWhereInput
}

/**
 * stores without action
 */
export type storesDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the stores
   */
  select?: Prisma.storesSelect<ExtArgs> | null
  /**
   * Omit specific fields from the stores
   */
  omit?: Prisma.storesOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.storesInclude<ExtArgs> | null
}
