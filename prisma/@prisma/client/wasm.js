
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.18.0
 * Query Engine version: 34b5a692b7bd79939a9a2c3ef97d816e749cda2f
 */
Prisma.prismaVersion = {
  client: "6.18.0",
  engine: "34b5a692b7bd79939a9a2c3ef97d816e749cda2f"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.BrandsScalarFieldEnum = {
  id: 'id',
  name: 'name',
  created_at: 'created_at'
};

exports.Prisma.CategoriesScalarFieldEnum = {
  id: 'id',
  brand_id: 'brand_id',
  sub_brand_id: 'sub_brand_id',
  name: 'name',
  type: 'type',
  pos_uuid: 'pos_uuid',
  deleted_at: 'deleted_at'
};

exports.Prisma.ChannelsScalarFieldEnum = {
  id: 'id',
  brand_id: 'brand_id',
  name: 'name',
  description: 'description',
  type: 'type',
  created_at: 'created_at'
};

exports.Prisma.Coupon_salesScalarFieldEnum = {
  id: 'id',
  sale_id: 'sale_id',
  coupon_id: 'coupon_id',
  value: 'value',
  target: 'target',
  sponsorship: 'sponsorship'
};

exports.Prisma.CouponsScalarFieldEnum = {
  id: 'id',
  brand_id: 'brand_id',
  code: 'code',
  discount_type: 'discount_type',
  discount_value: 'discount_value',
  is_active: 'is_active',
  valid_from: 'valid_from',
  valid_until: 'valid_until'
};

exports.Prisma.CustomersScalarFieldEnum = {
  id: 'id',
  customer_name: 'customer_name',
  email: 'email',
  phone_number: 'phone_number',
  cpf: 'cpf',
  birth_date: 'birth_date',
  gender: 'gender',
  store_id: 'store_id',
  sub_brand_id: 'sub_brand_id',
  registration_origin: 'registration_origin',
  agree_terms: 'agree_terms',
  receive_promotions_email: 'receive_promotions_email',
  receive_promotions_sms: 'receive_promotions_sms',
  created_at: 'created_at'
};

exports.Prisma.Delivery_addressesScalarFieldEnum = {
  id: 'id',
  sale_id: 'sale_id',
  delivery_sale_id: 'delivery_sale_id',
  street: 'street',
  number: 'number',
  complement: 'complement',
  formatted_address: 'formatted_address',
  neighborhood: 'neighborhood',
  city: 'city',
  state: 'state',
  country: 'country',
  postal_code: 'postal_code',
  reference: 'reference',
  latitude: 'latitude',
  longitude: 'longitude'
};

exports.Prisma.Delivery_salesScalarFieldEnum = {
  id: 'id',
  sale_id: 'sale_id',
  courier_id: 'courier_id',
  courier_name: 'courier_name',
  courier_phone: 'courier_phone',
  courier_type: 'courier_type',
  delivered_by: 'delivered_by',
  delivery_type: 'delivery_type',
  status: 'status',
  delivery_fee: 'delivery_fee',
  courier_fee: 'courier_fee',
  timing: 'timing',
  mode: 'mode'
};

exports.Prisma.Item_item_product_salesScalarFieldEnum = {
  id: 'id',
  item_product_sale_id: 'item_product_sale_id',
  item_id: 'item_id',
  option_group_id: 'option_group_id',
  quantity: 'quantity',
  additional_price: 'additional_price',
  price: 'price',
  amount: 'amount'
};

exports.Prisma.Item_product_salesScalarFieldEnum = {
  id: 'id',
  product_sale_id: 'product_sale_id',
  item_id: 'item_id',
  option_group_id: 'option_group_id',
  quantity: 'quantity',
  additional_price: 'additional_price',
  price: 'price',
  amount: 'amount',
  observations: 'observations'
};

exports.Prisma.ItemsScalarFieldEnum = {
  id: 'id',
  brand_id: 'brand_id',
  sub_brand_id: 'sub_brand_id',
  category_id: 'category_id',
  name: 'name',
  pos_uuid: 'pos_uuid',
  deleted_at: 'deleted_at'
};

exports.Prisma.Option_groupsScalarFieldEnum = {
  id: 'id',
  brand_id: 'brand_id',
  sub_brand_id: 'sub_brand_id',
  category_id: 'category_id',
  name: 'name',
  pos_uuid: 'pos_uuid',
  deleted_at: 'deleted_at'
};

exports.Prisma.Payment_typesScalarFieldEnum = {
  id: 'id',
  brand_id: 'brand_id',
  description: 'description'
};

exports.Prisma.PaymentsScalarFieldEnum = {
  id: 'id',
  sale_id: 'sale_id',
  payment_type_id: 'payment_type_id',
  value: 'value',
  is_online: 'is_online',
  description: 'description',
  currency: 'currency'
};

exports.Prisma.Product_salesScalarFieldEnum = {
  id: 'id',
  sale_id: 'sale_id',
  product_id: 'product_id',
  quantity: 'quantity',
  base_price: 'base_price',
  total_price: 'total_price',
  observations: 'observations'
};

exports.Prisma.ProductsScalarFieldEnum = {
  id: 'id',
  brand_id: 'brand_id',
  sub_brand_id: 'sub_brand_id',
  category_id: 'category_id',
  name: 'name',
  pos_uuid: 'pos_uuid',
  deleted_at: 'deleted_at'
};

exports.Prisma.SalesScalarFieldEnum = {
  id: 'id',
  store_id: 'store_id',
  sub_brand_id: 'sub_brand_id',
  customer_id: 'customer_id',
  channel_id: 'channel_id',
  cod_sale1: 'cod_sale1',
  cod_sale2: 'cod_sale2',
  created_at: 'created_at',
  customer_name: 'customer_name',
  sale_status_desc: 'sale_status_desc',
  total_amount_items: 'total_amount_items',
  total_discount: 'total_discount',
  total_increase: 'total_increase',
  delivery_fee: 'delivery_fee',
  service_tax_fee: 'service_tax_fee',
  total_amount: 'total_amount',
  value_paid: 'value_paid',
  production_seconds: 'production_seconds',
  delivery_seconds: 'delivery_seconds',
  people_quantity: 'people_quantity',
  discount_reason: 'discount_reason',
  increase_reason: 'increase_reason',
  origin: 'origin'
};

exports.Prisma.StoresScalarFieldEnum = {
  id: 'id',
  brand_id: 'brand_id',
  sub_brand_id: 'sub_brand_id',
  name: 'name',
  city: 'city',
  state: 'state',
  district: 'district',
  address_street: 'address_street',
  address_number: 'address_number',
  zipcode: 'zipcode',
  latitude: 'latitude',
  longitude: 'longitude',
  is_active: 'is_active',
  is_own: 'is_own',
  is_holding: 'is_holding',
  creation_date: 'creation_date',
  created_at: 'created_at'
};

exports.Prisma.Sub_brandsScalarFieldEnum = {
  id: 'id',
  brand_id: 'brand_id',
  name: 'name',
  created_at: 'created_at'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};


exports.Prisma.ModelName = {
  brands: 'brands',
  categories: 'categories',
  channels: 'channels',
  coupon_sales: 'coupon_sales',
  coupons: 'coupons',
  customers: 'customers',
  delivery_addresses: 'delivery_addresses',
  delivery_sales: 'delivery_sales',
  item_item_product_sales: 'item_item_product_sales',
  item_product_sales: 'item_product_sales',
  items: 'items',
  option_groups: 'option_groups',
  payment_types: 'payment_types',
  payments: 'payments',
  product_sales: 'product_sales',
  products: 'products',
  sales: 'sales',
  stores: 'stores',
  sub_brands: 'sub_brands'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "C:\\dev\\godlevel-analytics-food\\prisma\\@prisma\\client",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "windows",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "C:\\dev\\godlevel-analytics-food\\prisma\\schema.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../../.env"
  },
  "relativePath": "../..",
  "clientVersion": "6.18.0",
  "engineVersion": "34b5a692b7bd79939a9a2c3ef97d816e749cda2f",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "postinstall": false,
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "generator client {\n  provider = \"prisma-client-js\"\n  output   = \"@prisma/client\"\n}\n\ndatasource db {\n  provider = \"postgresql\"\n  url      = env(\"DATABASE_URL\")\n}\n\nmodel brands {\n  id            Int             @id @default(autoincrement())\n  name          String          @db.VarChar(255)\n  created_at    DateTime?       @default(now()) @db.Timestamp(6)\n  categories    categories[]\n  channels      channels[]\n  coupons       coupons[]\n  items         items[]\n  option_groups option_groups[]\n  payment_types payment_types[]\n  products      products[]\n  stores        stores[]\n  sub_brands    sub_brands[]\n}\n\nmodel categories {\n  id            Int             @id @default(autoincrement())\n  brand_id      Int?\n  sub_brand_id  Int?\n  name          String          @db.VarChar(200)\n  type          String?         @default(\"P\") @db.Char(1)\n  pos_uuid      String?         @db.VarChar(100)\n  deleted_at    DateTime?       @db.Timestamp(6)\n  brands        brands?         @relation(fields: [brand_id], references: [id], onDelete: NoAction, onUpdate: NoAction)\n  sub_brands    sub_brands?     @relation(fields: [sub_brand_id], references: [id], onDelete: NoAction, onUpdate: NoAction)\n  items         items[]\n  option_groups option_groups[]\n  products      products[]\n}\n\n/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.\nmodel channels {\n  id          Int       @id @default(autoincrement())\n  brand_id    Int?\n  name        String    @db.VarChar(100)\n  description String?   @db.VarChar(255)\n  type        String?   @db.Char(1)\n  created_at  DateTime? @default(now()) @db.Timestamp(6)\n  brands      brands?   @relation(fields: [brand_id], references: [id], onDelete: NoAction, onUpdate: NoAction)\n  sales       sales[]\n}\n\nmodel coupon_sales {\n  id          Int      @id @default(autoincrement())\n  sale_id     Int?\n  coupon_id   Int?\n  value       Float?\n  target      String?  @db.VarChar(100)\n  sponsorship String?  @db.VarChar(100)\n  coupons     coupons? @relation(fields: [coupon_id], references: [id], onDelete: NoAction, onUpdate: NoAction)\n  sales       sales?   @relation(fields: [sale_id], references: [id], onDelete: Cascade, onUpdate: NoAction)\n}\n\nmodel coupons {\n  id             Int            @id @default(autoincrement())\n  brand_id       Int?\n  code           String         @db.VarChar(50)\n  discount_type  String?        @db.VarChar(1)\n  discount_value Decimal?       @db.Decimal(10, 2)\n  is_active      Boolean?       @default(true)\n  valid_from     DateTime?      @db.Timestamp(6)\n  valid_until    DateTime?      @db.Timestamp(6)\n  coupon_sales   coupon_sales[]\n  brands         brands?        @relation(fields: [brand_id], references: [id], onDelete: NoAction, onUpdate: NoAction)\n}\n\nmodel customers {\n  id                       Int         @id @default(autoincrement())\n  customer_name            String?     @db.VarChar(100)\n  email                    String?     @db.VarChar(100)\n  phone_number             String?     @db.VarChar(50)\n  cpf                      String?     @db.VarChar(100)\n  birth_date               DateTime?   @db.Date\n  gender                   String?     @db.VarChar(10)\n  store_id                 Int?\n  sub_brand_id             Int?\n  registration_origin      String?     @db.VarChar(20)\n  agree_terms              Boolean?    @default(false)\n  receive_promotions_email Boolean?    @default(false)\n  receive_promotions_sms   Boolean?    @default(false)\n  created_at               DateTime?   @default(now()) @db.Timestamp(6)\n  stores                   stores?     @relation(fields: [store_id], references: [id], onDelete: NoAction, onUpdate: NoAction)\n  sub_brands               sub_brands? @relation(fields: [sub_brand_id], references: [id], onDelete: NoAction, onUpdate: NoAction)\n  sales                    sales[]\n}\n\nmodel delivery_addresses {\n  id                Int             @id @default(autoincrement())\n  sale_id           Int\n  delivery_sale_id  Int?\n  street            String?         @db.VarChar(200)\n  number            String?         @db.VarChar(20)\n  complement        String?         @db.VarChar(200)\n  formatted_address String?         @db.VarChar(500)\n  neighborhood      String?         @db.VarChar(100)\n  city              String?         @db.VarChar(100)\n  state             String?         @db.VarChar(50)\n  country           String?         @db.VarChar(100)\n  postal_code       String?         @db.VarChar(20)\n  reference         String?         @db.VarChar(300)\n  latitude          Float?\n  longitude         Float?\n  delivery_sales    delivery_sales? @relation(fields: [delivery_sale_id], references: [id], onDelete: Cascade, onUpdate: NoAction)\n  sales             sales           @relation(fields: [sale_id], references: [id], onDelete: Cascade, onUpdate: NoAction)\n}\n\nmodel delivery_sales {\n  id                 Int                  @id @default(autoincrement())\n  sale_id            Int\n  courier_id         String?              @db.VarChar(100)\n  courier_name       String?              @db.VarChar(100)\n  courier_phone      String?              @db.VarChar(100)\n  courier_type       String?              @db.VarChar(100)\n  delivered_by       String?              @db.VarChar(100)\n  delivery_type      String?              @db.VarChar(100)\n  status             String?              @db.VarChar(100)\n  delivery_fee       Float?\n  courier_fee        Float?\n  timing             String?              @db.VarChar(100)\n  mode               String?              @db.VarChar(100)\n  delivery_addresses delivery_addresses[]\n  sales              sales                @relation(fields: [sale_id], references: [id], onDelete: Cascade, onUpdate: NoAction)\n}\n\nmodel item_item_product_sales {\n  id                   Int                @id @default(autoincrement())\n  item_product_sale_id Int\n  item_id              Int\n  option_group_id      Int?\n  quantity             Float\n  additional_price     Float\n  price                Float\n  amount               Float?             @default(1)\n  items                items              @relation(fields: [item_id], references: [id], onDelete: NoAction, onUpdate: NoAction)\n  item_product_sales   item_product_sales @relation(fields: [item_product_sale_id], references: [id], onDelete: Cascade, onUpdate: NoAction)\n  option_groups        option_groups?     @relation(fields: [option_group_id], references: [id], onDelete: NoAction, onUpdate: NoAction)\n}\n\nmodel item_product_sales {\n  id                      Int                       @id @default(autoincrement())\n  product_sale_id         Int\n  item_id                 Int\n  option_group_id         Int?\n  quantity                Float\n  additional_price        Float\n  price                   Float\n  amount                  Float?                    @default(1)\n  observations            String?                   @db.VarChar(300)\n  item_item_product_sales item_item_product_sales[]\n  items                   items                     @relation(fields: [item_id], references: [id], onDelete: NoAction, onUpdate: NoAction)\n  option_groups           option_groups?            @relation(fields: [option_group_id], references: [id], onDelete: NoAction, onUpdate: NoAction)\n  product_sales           product_sales             @relation(fields: [product_sale_id], references: [id], onDelete: Cascade, onUpdate: NoAction)\n}\n\nmodel items {\n  id                      Int                       @id @default(autoincrement())\n  brand_id                Int?\n  sub_brand_id            Int?\n  category_id             Int?\n  name                    String                    @db.VarChar(500)\n  pos_uuid                String?                   @db.VarChar(100)\n  deleted_at              DateTime?                 @db.Timestamp(6)\n  item_item_product_sales item_item_product_sales[]\n  item_product_sales      item_product_sales[]\n  brands                  brands?                   @relation(fields: [brand_id], references: [id], onDelete: NoAction, onUpdate: NoAction)\n  categories              categories?               @relation(fields: [category_id], references: [id], onDelete: NoAction, onUpdate: NoAction)\n  sub_brands              sub_brands?               @relation(fields: [sub_brand_id], references: [id], onDelete: NoAction, onUpdate: NoAction)\n}\n\nmodel option_groups {\n  id                      Int                       @id @default(autoincrement())\n  brand_id                Int?\n  sub_brand_id            Int?\n  category_id             Int?\n  name                    String                    @db.VarChar(500)\n  pos_uuid                String?                   @db.VarChar(100)\n  deleted_at              DateTime?                 @db.Timestamp(6)\n  item_item_product_sales item_item_product_sales[]\n  item_product_sales      item_product_sales[]\n  brands                  brands?                   @relation(fields: [brand_id], references: [id], onDelete: NoAction, onUpdate: NoAction)\n  categories              categories?               @relation(fields: [category_id], references: [id], onDelete: NoAction, onUpdate: NoAction)\n  sub_brands              sub_brands?               @relation(fields: [sub_brand_id], references: [id], onDelete: NoAction, onUpdate: NoAction)\n}\n\nmodel payment_types {\n  id          Int        @id @default(autoincrement())\n  brand_id    Int?\n  description String     @db.VarChar(100)\n  brands      brands?    @relation(fields: [brand_id], references: [id], onDelete: NoAction, onUpdate: NoAction)\n  payments    payments[]\n}\n\nmodel payments {\n  id              Int            @id @default(autoincrement())\n  sale_id         Int\n  payment_type_id Int?\n  value           Decimal        @db.Decimal(10, 2)\n  is_online       Boolean?       @default(false)\n  description     String?        @db.VarChar(100)\n  currency        String?        @default(\"BRL\") @db.VarChar(10)\n  payment_types   payment_types? @relation(fields: [payment_type_id], references: [id], onDelete: NoAction, onUpdate: NoAction)\n  sales           sales          @relation(fields: [sale_id], references: [id], onDelete: Cascade, onUpdate: NoAction)\n}\n\nmodel product_sales {\n  id                 Int                  @id @default(autoincrement())\n  sale_id            Int\n  product_id         Int\n  quantity           Float\n  base_price         Float\n  total_price        Float\n  observations       String?              @db.VarChar(300)\n  item_product_sales item_product_sales[]\n  products           products             @relation(fields: [product_id], references: [id], onDelete: NoAction, onUpdate: NoAction)\n  sales              sales                @relation(fields: [sale_id], references: [id], onDelete: Cascade, onUpdate: NoAction)\n\n  @@index([product_id, sale_id], map: \"idx_product_sales_product_sale\")\n}\n\nmodel products {\n  id            Int             @id @default(autoincrement())\n  brand_id      Int?\n  sub_brand_id  Int?\n  category_id   Int?\n  name          String          @db.VarChar(500)\n  pos_uuid      String?         @db.VarChar(100)\n  deleted_at    DateTime?       @db.Timestamp(6)\n  product_sales product_sales[]\n  brands        brands?         @relation(fields: [brand_id], references: [id], onDelete: NoAction, onUpdate: NoAction)\n  categories    categories?     @relation(fields: [category_id], references: [id], onDelete: NoAction, onUpdate: NoAction)\n  sub_brands    sub_brands?     @relation(fields: [sub_brand_id], references: [id], onDelete: NoAction, onUpdate: NoAction)\n}\n\n/// This model contains an expression index which requires additional setup for migrations. Visit https://pris.ly/d/expression-indexes for more info.\nmodel sales {\n  id                 Int                  @id @default(autoincrement())\n  store_id           Int\n  sub_brand_id       Int?\n  customer_id        Int?\n  channel_id         Int\n  cod_sale1          String?              @db.VarChar(100)\n  cod_sale2          String?              @db.VarChar(100)\n  created_at         DateTime             @db.Timestamp(6)\n  customer_name      String?              @db.VarChar(100)\n  sale_status_desc   String               @db.VarChar(100)\n  total_amount_items Decimal              @db.Decimal(10, 2)\n  total_discount     Decimal?             @default(0) @db.Decimal(10, 2)\n  total_increase     Decimal?             @default(0) @db.Decimal(10, 2)\n  delivery_fee       Decimal?             @default(0) @db.Decimal(10, 2)\n  service_tax_fee    Decimal?             @default(0) @db.Decimal(10, 2)\n  total_amount       Decimal              @db.Decimal(10, 2)\n  value_paid         Decimal?             @default(0) @db.Decimal(10, 2)\n  production_seconds Int?\n  delivery_seconds   Int?\n  people_quantity    Int?\n  discount_reason    String?              @db.VarChar(300)\n  increase_reason    String?              @db.VarChar(300)\n  origin             String?              @default(\"POS\") @db.VarChar(100)\n  coupon_sales       coupon_sales[]\n  delivery_addresses delivery_addresses[]\n  delivery_sales     delivery_sales[]\n  payments           payments[]\n  product_sales      product_sales[]\n  channels           channels             @relation(fields: [channel_id], references: [id], onDelete: NoAction, onUpdate: NoAction)\n  customers          customers?           @relation(fields: [customer_id], references: [id], onDelete: NoAction, onUpdate: NoAction)\n  stores             stores               @relation(fields: [store_id], references: [id], onDelete: NoAction, onUpdate: NoAction)\n  sub_brands         sub_brands?          @relation(fields: [sub_brand_id], references: [id], onDelete: NoAction, onUpdate: NoAction)\n}\n\nmodel stores {\n  id             Int         @id @default(autoincrement())\n  brand_id       Int?\n  sub_brand_id   Int?\n  name           String      @db.VarChar(255)\n  city           String?     @db.VarChar(100)\n  state          String?     @db.VarChar(2)\n  district       String?     @db.VarChar(100)\n  address_street String?     @db.VarChar(200)\n  address_number Int?\n  zipcode        String?     @db.VarChar(10)\n  latitude       Decimal?    @db.Decimal(9, 6)\n  longitude      Decimal?    @db.Decimal(9, 6)\n  is_active      Boolean?    @default(true)\n  is_own         Boolean?    @default(false)\n  is_holding     Boolean?    @default(false)\n  creation_date  DateTime?   @db.Date\n  created_at     DateTime?   @default(now()) @db.Timestamp(6)\n  customers      customers[]\n  sales          sales[]\n  brands         brands?     @relation(fields: [brand_id], references: [id], onDelete: NoAction, onUpdate: NoAction)\n  sub_brands     sub_brands? @relation(fields: [sub_brand_id], references: [id], onDelete: NoAction, onUpdate: NoAction)\n}\n\nmodel sub_brands {\n  id            Int             @id @default(autoincrement())\n  brand_id      Int?\n  name          String          @db.VarChar(255)\n  created_at    DateTime?       @default(now()) @db.Timestamp(6)\n  categories    categories[]\n  customers     customers[]\n  items         items[]\n  option_groups option_groups[]\n  products      products[]\n  sales         sales[]\n  stores        stores[]\n  brands        brands?         @relation(fields: [brand_id], references: [id], onDelete: NoAction, onUpdate: NoAction)\n}\n",
  "inlineSchemaHash": "4dcc9d1e7891cce41b1de274562065d8068afe01204e0c373392276caa1b9c5a",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"brands\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"categories\",\"kind\":\"object\",\"type\":\"categories\",\"relationName\":\"brandsTocategories\"},{\"name\":\"channels\",\"kind\":\"object\",\"type\":\"channels\",\"relationName\":\"brandsTochannels\"},{\"name\":\"coupons\",\"kind\":\"object\",\"type\":\"coupons\",\"relationName\":\"brandsTocoupons\"},{\"name\":\"items\",\"kind\":\"object\",\"type\":\"items\",\"relationName\":\"brandsToitems\"},{\"name\":\"option_groups\",\"kind\":\"object\",\"type\":\"option_groups\",\"relationName\":\"brandsTooption_groups\"},{\"name\":\"payment_types\",\"kind\":\"object\",\"type\":\"payment_types\",\"relationName\":\"brandsTopayment_types\"},{\"name\":\"products\",\"kind\":\"object\",\"type\":\"products\",\"relationName\":\"brandsToproducts\"},{\"name\":\"stores\",\"kind\":\"object\",\"type\":\"stores\",\"relationName\":\"brandsTostores\"},{\"name\":\"sub_brands\",\"kind\":\"object\",\"type\":\"sub_brands\",\"relationName\":\"brandsTosub_brands\"}],\"dbName\":null},\"categories\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"brand_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"sub_brand_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"pos_uuid\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"deleted_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"brands\",\"kind\":\"object\",\"type\":\"brands\",\"relationName\":\"brandsTocategories\"},{\"name\":\"sub_brands\",\"kind\":\"object\",\"type\":\"sub_brands\",\"relationName\":\"categoriesTosub_brands\"},{\"name\":\"items\",\"kind\":\"object\",\"type\":\"items\",\"relationName\":\"categoriesToitems\"},{\"name\":\"option_groups\",\"kind\":\"object\",\"type\":\"option_groups\",\"relationName\":\"categoriesTooption_groups\"},{\"name\":\"products\",\"kind\":\"object\",\"type\":\"products\",\"relationName\":\"categoriesToproducts\"}],\"dbName\":null},\"channels\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"brand_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"brands\",\"kind\":\"object\",\"type\":\"brands\",\"relationName\":\"brandsTochannels\"},{\"name\":\"sales\",\"kind\":\"object\",\"type\":\"sales\",\"relationName\":\"channelsTosales\"}],\"dbName\":null},\"coupon_sales\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"sale_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"coupon_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"value\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"target\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"sponsorship\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"coupons\",\"kind\":\"object\",\"type\":\"coupons\",\"relationName\":\"coupon_salesTocoupons\"},{\"name\":\"sales\",\"kind\":\"object\",\"type\":\"sales\",\"relationName\":\"coupon_salesTosales\"}],\"dbName\":null},\"coupons\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"brand_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"code\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"discount_type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"discount_value\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"is_active\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"valid_from\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"valid_until\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"coupon_sales\",\"kind\":\"object\",\"type\":\"coupon_sales\",\"relationName\":\"coupon_salesTocoupons\"},{\"name\":\"brands\",\"kind\":\"object\",\"type\":\"brands\",\"relationName\":\"brandsTocoupons\"}],\"dbName\":null},\"customers\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"customer_name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"phone_number\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"cpf\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"birth_date\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"gender\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"store_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"sub_brand_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"registration_origin\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"agree_terms\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"receive_promotions_email\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"receive_promotions_sms\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"stores\",\"kind\":\"object\",\"type\":\"stores\",\"relationName\":\"customersTostores\"},{\"name\":\"sub_brands\",\"kind\":\"object\",\"type\":\"sub_brands\",\"relationName\":\"customersTosub_brands\"},{\"name\":\"sales\",\"kind\":\"object\",\"type\":\"sales\",\"relationName\":\"customersTosales\"}],\"dbName\":null},\"delivery_addresses\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"sale_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"delivery_sale_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"street\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"number\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"complement\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"formatted_address\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"neighborhood\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"city\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"state\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"country\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"postal_code\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"reference\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"latitude\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"longitude\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"delivery_sales\",\"kind\":\"object\",\"type\":\"delivery_sales\",\"relationName\":\"delivery_addressesTodelivery_sales\"},{\"name\":\"sales\",\"kind\":\"object\",\"type\":\"sales\",\"relationName\":\"delivery_addressesTosales\"}],\"dbName\":null},\"delivery_sales\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"sale_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"courier_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"courier_name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"courier_phone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"courier_type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"delivered_by\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"delivery_type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"delivery_fee\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"courier_fee\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"timing\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"mode\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"delivery_addresses\",\"kind\":\"object\",\"type\":\"delivery_addresses\",\"relationName\":\"delivery_addressesTodelivery_sales\"},{\"name\":\"sales\",\"kind\":\"object\",\"type\":\"sales\",\"relationName\":\"delivery_salesTosales\"}],\"dbName\":null},\"item_item_product_sales\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"item_product_sale_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"item_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"option_group_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"quantity\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"additional_price\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"price\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"amount\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"items\",\"kind\":\"object\",\"type\":\"items\",\"relationName\":\"item_item_product_salesToitems\"},{\"name\":\"item_product_sales\",\"kind\":\"object\",\"type\":\"item_product_sales\",\"relationName\":\"item_item_product_salesToitem_product_sales\"},{\"name\":\"option_groups\",\"kind\":\"object\",\"type\":\"option_groups\",\"relationName\":\"item_item_product_salesTooption_groups\"}],\"dbName\":null},\"item_product_sales\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"product_sale_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"item_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"option_group_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"quantity\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"additional_price\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"price\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"amount\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"observations\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"item_item_product_sales\",\"kind\":\"object\",\"type\":\"item_item_product_sales\",\"relationName\":\"item_item_product_salesToitem_product_sales\"},{\"name\":\"items\",\"kind\":\"object\",\"type\":\"items\",\"relationName\":\"item_product_salesToitems\"},{\"name\":\"option_groups\",\"kind\":\"object\",\"type\":\"option_groups\",\"relationName\":\"item_product_salesTooption_groups\"},{\"name\":\"product_sales\",\"kind\":\"object\",\"type\":\"product_sales\",\"relationName\":\"item_product_salesToproduct_sales\"}],\"dbName\":null},\"items\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"brand_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"sub_brand_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"category_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"pos_uuid\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"deleted_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"item_item_product_sales\",\"kind\":\"object\",\"type\":\"item_item_product_sales\",\"relationName\":\"item_item_product_salesToitems\"},{\"name\":\"item_product_sales\",\"kind\":\"object\",\"type\":\"item_product_sales\",\"relationName\":\"item_product_salesToitems\"},{\"name\":\"brands\",\"kind\":\"object\",\"type\":\"brands\",\"relationName\":\"brandsToitems\"},{\"name\":\"categories\",\"kind\":\"object\",\"type\":\"categories\",\"relationName\":\"categoriesToitems\"},{\"name\":\"sub_brands\",\"kind\":\"object\",\"type\":\"sub_brands\",\"relationName\":\"itemsTosub_brands\"}],\"dbName\":null},\"option_groups\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"brand_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"sub_brand_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"category_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"pos_uuid\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"deleted_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"item_item_product_sales\",\"kind\":\"object\",\"type\":\"item_item_product_sales\",\"relationName\":\"item_item_product_salesTooption_groups\"},{\"name\":\"item_product_sales\",\"kind\":\"object\",\"type\":\"item_product_sales\",\"relationName\":\"item_product_salesTooption_groups\"},{\"name\":\"brands\",\"kind\":\"object\",\"type\":\"brands\",\"relationName\":\"brandsTooption_groups\"},{\"name\":\"categories\",\"kind\":\"object\",\"type\":\"categories\",\"relationName\":\"categoriesTooption_groups\"},{\"name\":\"sub_brands\",\"kind\":\"object\",\"type\":\"sub_brands\",\"relationName\":\"option_groupsTosub_brands\"}],\"dbName\":null},\"payment_types\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"brand_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"brands\",\"kind\":\"object\",\"type\":\"brands\",\"relationName\":\"brandsTopayment_types\"},{\"name\":\"payments\",\"kind\":\"object\",\"type\":\"payments\",\"relationName\":\"payment_typesTopayments\"}],\"dbName\":null},\"payments\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"sale_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"payment_type_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"value\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"is_online\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"currency\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"payment_types\",\"kind\":\"object\",\"type\":\"payment_types\",\"relationName\":\"payment_typesTopayments\"},{\"name\":\"sales\",\"kind\":\"object\",\"type\":\"sales\",\"relationName\":\"paymentsTosales\"}],\"dbName\":null},\"product_sales\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"sale_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"product_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"quantity\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"base_price\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"total_price\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"observations\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"item_product_sales\",\"kind\":\"object\",\"type\":\"item_product_sales\",\"relationName\":\"item_product_salesToproduct_sales\"},{\"name\":\"products\",\"kind\":\"object\",\"type\":\"products\",\"relationName\":\"product_salesToproducts\"},{\"name\":\"sales\",\"kind\":\"object\",\"type\":\"sales\",\"relationName\":\"product_salesTosales\"}],\"dbName\":null},\"products\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"brand_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"sub_brand_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"category_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"pos_uuid\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"deleted_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"product_sales\",\"kind\":\"object\",\"type\":\"product_sales\",\"relationName\":\"product_salesToproducts\"},{\"name\":\"brands\",\"kind\":\"object\",\"type\":\"brands\",\"relationName\":\"brandsToproducts\"},{\"name\":\"categories\",\"kind\":\"object\",\"type\":\"categories\",\"relationName\":\"categoriesToproducts\"},{\"name\":\"sub_brands\",\"kind\":\"object\",\"type\":\"sub_brands\",\"relationName\":\"productsTosub_brands\"}],\"dbName\":null},\"sales\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"store_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"sub_brand_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"customer_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"channel_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"cod_sale1\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"cod_sale2\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"customer_name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"sale_status_desc\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"total_amount_items\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"total_discount\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"total_increase\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"delivery_fee\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"service_tax_fee\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"total_amount\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"value_paid\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"production_seconds\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"delivery_seconds\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"people_quantity\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"discount_reason\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"increase_reason\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"origin\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"coupon_sales\",\"kind\":\"object\",\"type\":\"coupon_sales\",\"relationName\":\"coupon_salesTosales\"},{\"name\":\"delivery_addresses\",\"kind\":\"object\",\"type\":\"delivery_addresses\",\"relationName\":\"delivery_addressesTosales\"},{\"name\":\"delivery_sales\",\"kind\":\"object\",\"type\":\"delivery_sales\",\"relationName\":\"delivery_salesTosales\"},{\"name\":\"payments\",\"kind\":\"object\",\"type\":\"payments\",\"relationName\":\"paymentsTosales\"},{\"name\":\"product_sales\",\"kind\":\"object\",\"type\":\"product_sales\",\"relationName\":\"product_salesTosales\"},{\"name\":\"channels\",\"kind\":\"object\",\"type\":\"channels\",\"relationName\":\"channelsTosales\"},{\"name\":\"customers\",\"kind\":\"object\",\"type\":\"customers\",\"relationName\":\"customersTosales\"},{\"name\":\"stores\",\"kind\":\"object\",\"type\":\"stores\",\"relationName\":\"salesTostores\"},{\"name\":\"sub_brands\",\"kind\":\"object\",\"type\":\"sub_brands\",\"relationName\":\"salesTosub_brands\"}],\"dbName\":null},\"stores\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"brand_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"sub_brand_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"city\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"state\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"district\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"address_street\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"address_number\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"zipcode\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"latitude\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"longitude\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"is_active\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"is_own\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"is_holding\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"creation_date\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"customers\",\"kind\":\"object\",\"type\":\"customers\",\"relationName\":\"customersTostores\"},{\"name\":\"sales\",\"kind\":\"object\",\"type\":\"sales\",\"relationName\":\"salesTostores\"},{\"name\":\"brands\",\"kind\":\"object\",\"type\":\"brands\",\"relationName\":\"brandsTostores\"},{\"name\":\"sub_brands\",\"kind\":\"object\",\"type\":\"sub_brands\",\"relationName\":\"storesTosub_brands\"}],\"dbName\":null},\"sub_brands\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"brand_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"categories\",\"kind\":\"object\",\"type\":\"categories\",\"relationName\":\"categoriesTosub_brands\"},{\"name\":\"customers\",\"kind\":\"object\",\"type\":\"customers\",\"relationName\":\"customersTosub_brands\"},{\"name\":\"items\",\"kind\":\"object\",\"type\":\"items\",\"relationName\":\"itemsTosub_brands\"},{\"name\":\"option_groups\",\"kind\":\"object\",\"type\":\"option_groups\",\"relationName\":\"option_groupsTosub_brands\"},{\"name\":\"products\",\"kind\":\"object\",\"type\":\"products\",\"relationName\":\"productsTosub_brands\"},{\"name\":\"sales\",\"kind\":\"object\",\"type\":\"sales\",\"relationName\":\"salesTosub_brands\"},{\"name\":\"stores\",\"kind\":\"object\",\"type\":\"stores\",\"relationName\":\"storesTosub_brands\"},{\"name\":\"brands\",\"kind\":\"object\",\"type\":\"brands\",\"relationName\":\"brandsTosub_brands\"}],\"dbName\":null}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

