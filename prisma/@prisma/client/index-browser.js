
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('./runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.18.0
 * Query Engine version: 34b5a692b7bd79939a9a2c3ef97d816e749cda2f
 */
Prisma.prismaVersion = {
  client: "6.18.0",
  engine: "34b5a692b7bd79939a9a2c3ef97d816e749cda2f"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.BrandsScalarFieldEnum = {
  id: 'id',
  name: 'name',
  created_at: 'created_at'
};

exports.Prisma.CategoriesScalarFieldEnum = {
  id: 'id',
  brand_id: 'brand_id',
  sub_brand_id: 'sub_brand_id',
  name: 'name',
  type: 'type',
  pos_uuid: 'pos_uuid',
  deleted_at: 'deleted_at'
};

exports.Prisma.ChannelsScalarFieldEnum = {
  id: 'id',
  brand_id: 'brand_id',
  name: 'name',
  description: 'description',
  type: 'type',
  created_at: 'created_at'
};

exports.Prisma.Coupon_salesScalarFieldEnum = {
  id: 'id',
  sale_id: 'sale_id',
  coupon_id: 'coupon_id',
  value: 'value',
  target: 'target',
  sponsorship: 'sponsorship'
};

exports.Prisma.CouponsScalarFieldEnum = {
  id: 'id',
  brand_id: 'brand_id',
  code: 'code',
  discount_type: 'discount_type',
  discount_value: 'discount_value',
  is_active: 'is_active',
  valid_from: 'valid_from',
  valid_until: 'valid_until'
};

exports.Prisma.CustomersScalarFieldEnum = {
  id: 'id',
  customer_name: 'customer_name',
  email: 'email',
  phone_number: 'phone_number',
  cpf: 'cpf',
  birth_date: 'birth_date',
  gender: 'gender',
  store_id: 'store_id',
  sub_brand_id: 'sub_brand_id',
  registration_origin: 'registration_origin',
  agree_terms: 'agree_terms',
  receive_promotions_email: 'receive_promotions_email',
  receive_promotions_sms: 'receive_promotions_sms',
  created_at: 'created_at'
};

exports.Prisma.Delivery_addressesScalarFieldEnum = {
  id: 'id',
  sale_id: 'sale_id',
  delivery_sale_id: 'delivery_sale_id',
  street: 'street',
  number: 'number',
  complement: 'complement',
  formatted_address: 'formatted_address',
  neighborhood: 'neighborhood',
  city: 'city',
  state: 'state',
  country: 'country',
  postal_code: 'postal_code',
  reference: 'reference',
  latitude: 'latitude',
  longitude: 'longitude'
};

exports.Prisma.Delivery_salesScalarFieldEnum = {
  id: 'id',
  sale_id: 'sale_id',
  courier_id: 'courier_id',
  courier_name: 'courier_name',
  courier_phone: 'courier_phone',
  courier_type: 'courier_type',
  delivered_by: 'delivered_by',
  delivery_type: 'delivery_type',
  status: 'status',
  delivery_fee: 'delivery_fee',
  courier_fee: 'courier_fee',
  timing: 'timing',
  mode: 'mode'
};

exports.Prisma.Item_item_product_salesScalarFieldEnum = {
  id: 'id',
  item_product_sale_id: 'item_product_sale_id',
  item_id: 'item_id',
  option_group_id: 'option_group_id',
  quantity: 'quantity',
  additional_price: 'additional_price',
  price: 'price',
  amount: 'amount'
};

exports.Prisma.Item_product_salesScalarFieldEnum = {
  id: 'id',
  product_sale_id: 'product_sale_id',
  item_id: 'item_id',
  option_group_id: 'option_group_id',
  quantity: 'quantity',
  additional_price: 'additional_price',
  price: 'price',
  amount: 'amount',
  observations: 'observations'
};

exports.Prisma.ItemsScalarFieldEnum = {
  id: 'id',
  brand_id: 'brand_id',
  sub_brand_id: 'sub_brand_id',
  category_id: 'category_id',
  name: 'name',
  pos_uuid: 'pos_uuid',
  deleted_at: 'deleted_at'
};

exports.Prisma.Option_groupsScalarFieldEnum = {
  id: 'id',
  brand_id: 'brand_id',
  sub_brand_id: 'sub_brand_id',
  category_id: 'category_id',
  name: 'name',
  pos_uuid: 'pos_uuid',
  deleted_at: 'deleted_at'
};

exports.Prisma.Payment_typesScalarFieldEnum = {
  id: 'id',
  brand_id: 'brand_id',
  description: 'description'
};

exports.Prisma.PaymentsScalarFieldEnum = {
  id: 'id',
  sale_id: 'sale_id',
  payment_type_id: 'payment_type_id',
  value: 'value',
  is_online: 'is_online',
  description: 'description',
  currency: 'currency'
};

exports.Prisma.Product_salesScalarFieldEnum = {
  id: 'id',
  sale_id: 'sale_id',
  product_id: 'product_id',
  quantity: 'quantity',
  base_price: 'base_price',
  total_price: 'total_price',
  observations: 'observations'
};

exports.Prisma.ProductsScalarFieldEnum = {
  id: 'id',
  brand_id: 'brand_id',
  sub_brand_id: 'sub_brand_id',
  category_id: 'category_id',
  name: 'name',
  pos_uuid: 'pos_uuid',
  deleted_at: 'deleted_at'
};

exports.Prisma.SalesScalarFieldEnum = {
  id: 'id',
  store_id: 'store_id',
  sub_brand_id: 'sub_brand_id',
  customer_id: 'customer_id',
  channel_id: 'channel_id',
  cod_sale1: 'cod_sale1',
  cod_sale2: 'cod_sale2',
  created_at: 'created_at',
  customer_name: 'customer_name',
  sale_status_desc: 'sale_status_desc',
  total_amount_items: 'total_amount_items',
  total_discount: 'total_discount',
  total_increase: 'total_increase',
  delivery_fee: 'delivery_fee',
  service_tax_fee: 'service_tax_fee',
  total_amount: 'total_amount',
  value_paid: 'value_paid',
  production_seconds: 'production_seconds',
  delivery_seconds: 'delivery_seconds',
  people_quantity: 'people_quantity',
  discount_reason: 'discount_reason',
  increase_reason: 'increase_reason',
  origin: 'origin'
};

exports.Prisma.StoresScalarFieldEnum = {
  id: 'id',
  brand_id: 'brand_id',
  sub_brand_id: 'sub_brand_id',
  name: 'name',
  city: 'city',
  state: 'state',
  district: 'district',
  address_street: 'address_street',
  address_number: 'address_number',
  zipcode: 'zipcode',
  latitude: 'latitude',
  longitude: 'longitude',
  is_active: 'is_active',
  is_own: 'is_own',
  is_holding: 'is_holding',
  creation_date: 'creation_date',
  created_at: 'created_at'
};

exports.Prisma.Sub_brandsScalarFieldEnum = {
  id: 'id',
  brand_id: 'brand_id',
  name: 'name',
  created_at: 'created_at'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};


exports.Prisma.ModelName = {
  brands: 'brands',
  categories: 'categories',
  channels: 'channels',
  coupon_sales: 'coupon_sales',
  coupons: 'coupons',
  customers: 'customers',
  delivery_addresses: 'delivery_addresses',
  delivery_sales: 'delivery_sales',
  item_item_product_sales: 'item_item_product_sales',
  item_product_sales: 'item_product_sales',
  items: 'items',
  option_groups: 'option_groups',
  payment_types: 'payment_types',
  payments: 'payments',
  product_sales: 'product_sales',
  products: 'products',
  sales: 'sales',
  stores: 'stores',
  sub_brands: 'sub_brands'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
